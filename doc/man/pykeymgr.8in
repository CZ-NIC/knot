.\" Man page generated from reStructuredText.
.
.TH "PYKEYMGR" "8" "@RELEASE_DATE@" "@VERSION@" "Knot DNS"
.SH NAME
pykeymgr \-  DNSSEC key management utility
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
\fBpykeymgr.py\fP [\fIglobal\-options\fP] [\fIcommand\fP\&...] [\fIarguments\fP\&...]
.SH DESCRIPTION
.sp
The \fBpykeymgr\fP utility serves for key management in Knot DNS server.
.sp
Functions for DNSSEC keys and KASP (Key And Signature Policy)
management are provided.
.sp
The DNSSEC and KASP configuration is stored in a so called KASP database.
The databse is backed by LMDB.
.SS Global options
.INDENT 0.0
.TP
\fB\-f\fP, \fB\-\-force\fP
Skip some of consistency checks and continue with performed action with a warning.
.TP
\fB\-h\fP, \fB\-\-help\fP
Print the program help.
.UNINDENT
.SS Main commands
.INDENT 0.0
.TP
\fB\-z\fP, \fB\-\-zones\fP \fIKASP_db_dir\fP
List zones configured in KASP db together with key IDs of the DNSSEC keys
belonging to each of the zones.
.TP
\fB\-l\fP, \fB\-\-list\fP \fIKASP_db_dir\fP
List DNSSEC keys stored in the KASP db together with their parameters
(key ID, key tag, is KSK ?, timers).
.TP
\fB\-i\fP, \fB\-\-import\fP \fIKASP_db_dir\fP
Import the legacy JSON\-format KASP database into the current LMDB\-backed one.
.TP
\fB\-d\fP, \fB\-\-ds\fP \fIKASP_db_dir\fP \fIzone_name\fP \fIkey_spec\fP
Calculate and print DS record for given key (used all SHA1, SHA256 and SHA384 digests).
.TP
\fB\-s\fP, \fB\-\-set\fP \fIKASP_db_dir\fP \fIzone_name\fP \fIkey_spec\fP \fIparam_name\fP \fInew_value\fP
Set a key parameter to new value (mostly useful for timers).
.UNINDENT
.SS Parameters
.INDENT 0.0
.TP
\fIKASP_db_dir\fP
A path to the KASP db. It is the directory where \fIdata.mdb\fP and \fIlock.mdb\fP
files are usually stored as well as legacy JSON configuration and \fIkeys\fP
subdirectory containing PEM files.
.TP
\fIzone_name\fP
A name of the zone including trailing dot.
.TP
\fIkey_spec\fP
Either the key tag, key ID, or a prefix of key ID.
.TP
\fIparam_name\fP
A name for key parameter in question. Possible parameters are: \fIkeytag\fP,
\fIalgorithm\fP (those two demand \fI\-\-force\fP option), \fIisksk\fP, \fIcreated\fP,
\fIpublish\fP, \fIactive\fP, \fIretire\fP, \fIremove\fP\&.
.TP
\fInew_value\fP
New value for specified parameter: for \fIkeytag\fP and \fIalgorithm\fP \- a number;
for \fIisksk\fP \- either "True" or "False"; for timers \- either a number (= UNIX time)
or "now[+\-]<number><unit>" where \fIunit\fP is from ("y", "mo", "d", "h", "mi", <nothing=seconds>),
e.g. "now\-10", "now+2mo".
.UNINDENT
.SH EXAMPLES
.INDENT 0.0
.IP 1. 3
Import legacy JSON\-based KASP db from Knot 2.4.x after upgrade:
.INDENT 3.0
.INDENT 3.5
.sp
.nf
.ft C
$ pykemgr.py \-i ${knot_data_dir}/keys
.ft P
.fi
.UNINDENT
.UNINDENT
.IP 2. 3
Set retire time for a specified key to 10 hours ahead:
.INDENT 3.0
.INDENT 3.5
.sp
.nf
.ft C
$ pykeymgr.py \-s ${knot_data_dir}/keys example.zone. 5a701f91 retire now+10h
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.SH SEE ALSO
.sp
\fI\%RFC 6781\fP \- DNSSEC Operational Practices.
.sp
\fBknot.conf(5)\fP,
\fBknotc(8)\fP,
\fBknotd(8)\fP\&.
.SH AUTHOR
CZ.NIC Labs <http://www.knot-dns.cz>
.SH COPYRIGHT
Copyright 2010â€“2017, CZ.NIC, z.s.p.o.
.\" Generated by docutils manpage writer.
.
