
/*  Copyright (C) 2022 CZ.NIC, z.s.p.o. <knot-dns@labs.nic.cz>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#include <arpa/inet.h>
#include <errno.h>
#include <fcntl.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <libgen.h>
#include <math.h>
#include <netinet/in.h>
#include <sys/socket.h>
#include <sys/mman.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <unistd.h>

#include "libzscanner/scanner.h"
#include "libzscanner/functions.h"
#include "libknot/descriptor.h"

/*! \brief Maximal length of rdata item. */
#define MAX_ITEM_LENGTH		255
#define MAX_ITEM_LENGTH2	65535

/*! \brief Latitude value for equator (2^31). */
#define LOC_LAT_ZERO	(uint32_t)2147483648
/*! \brief Longitude value for meridian (2^31). */
#define LOC_LONG_ZERO	(uint32_t)2147483648
/*! \brief Zero level altitude value. */
#define LOC_ALT_ZERO	(uint32_t)10000000

/*! \brief Shorthand for setting warning data. */
#define WARN(err_code) { s->error.code = err_code; }
/*! \brief Shorthand for setting error data. */
#define ERR(err_code) { WARN(err_code); s->error.fatal = true; }
/*! \brief Shorthand for error reset. */
#define NOERR { WARN(ZS_OK); s->error.fatal = false; }

/*!
 * \brief Writes record type number to r_data.
 *
 * \param type		Type number.
 * \param rdata_tail	Position where to write type number to.
 */
static inline void type_num(const uint16_t type, uint8_t **rdata_tail)
{
	*((uint16_t *)*rdata_tail) = htons(type);
	*rdata_tail += 2;
}

/*!
 * \brief Sets bit to bitmap window.
 *
 * \param type		Type number.
 * \param s		Scanner context.
 */
static inline void window_add_bit(const uint16_t type, zs_scanner_t *s) {
	uint8_t win      = type / 256;
	uint8_t bit_pos  = type % 256;
	uint8_t byte_pos = bit_pos / 8;

	((s->windows[win]).bitmap)[byte_pos] |= 128 >> (bit_pos % 8);

	if ((s->windows[win]).length < byte_pos + 1) {
		(s->windows[win]).length = byte_pos + 1;
	}

	if (s->last_window < win) {
		s->last_window = win;
	}
}

// Include scanner file (in Ragel).

static const short _zone_scanner_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1,
	3, 1, 4, 1, 5, 1, 7, 1,
	8, 1, 10, 1, 13, 1, 14, 1,
	15, 1, 17, 1, 18, 1, 23, 1,
	24, 1, 26, 1, 27, 1, 29, 1,
	31, 1, 33, 1, 35, 1, 36, 1,
	45, 1, 46, 1, 47, 1, 49, 1,
	51, 1, 52, 1, 53, 1, 54, 1,
	58, 1, 59, 1, 61, 1, 63, 1,
	65, 1, 68, 1, 69, 1, 73, 1,
	74, 1, 77, 1, 78, 1, 81, 1,
	84, 1, 86, 1, 87, 1, 88, 1,
	89, 1, 92, 1, 93, 1, 96, 1,
	98, 1, 100, 1, 104, 1, 105, 1,
	109, 1, 110, 1, 114, 1, 115, 1,
	116, 1, 117, 1, 118, 1, 119, 1,
	120, 1, 121, 1, 122, 1, 123, 1,
	124, 1, 125, 1, 126, 1, 127, 1,
	129, 1, 130, 1, 131, 1, 132, 1,
	146, 1, 147, 1, 149, 1, 150, 1,
	151, 1, 152, 1, 160, 1, 161, 1,
	162, 1, 163, 1, 164, 1, 165, 1,
	166, 1, 167, 1, 168, 1, 169, 1,
	170, 1, 171, 1, 172, 1, 173, 1,
	174, 1, 175, 1, 176, 1, 177, 1,
	178, 1, 179, 1, 180, 1, 181, 1,
	182, 1, 183, 1, 184, 1, 185, 1,
	186, 1, 187, 1, 188, 1, 189, 1,
	190, 1, 191, 1, 192, 1, 193, 1,
	194, 1, 195, 1, 196, 1, 197, 1,
	198, 1, 199, 1, 200, 1, 201, 1,
	202, 1, 203, 1, 204, 1, 205, 1,
	206, 1, 207, 1, 208, 1, 209, 1,
	210, 1, 211, 1, 212, 1, 213, 1,
	214, 1, 215, 1, 216, 1, 217, 1,
	218, 1, 219, 1, 220, 1, 221, 1,
	222, 1, 223, 1, 224, 1, 225, 1,
	226, 1, 227, 1, 228, 1, 229, 1,
	230, 1, 231, 1, 232, 1, 233, 1,
	234, 1, 235, 1, 236, 1, 237, 1,
	238, 1, 239, 1, 240, 1, 241, 1,
	242, 1, 243, 1, 244, 1, 245, 1,
	246, 1, 247, 1, 248, 1, 249, 1,
	250, 1, 251, 1, 252, 1, 253, 1,
	254, 1, 255, 1, 256, 1, 257, 1,
	259, 1, 261, 1, 262, 1, 263, 1,
	264, 1, 271, 1, 272, 1, 277, 1,
	279, 1, 284, 1, 287, 1, 289, 1,
	290, 1, 291, 1, 292, 1, 297, 1,
	298, 1, 300, 1, 301, 1, 302, 1,
	303, 1, 305, 1, 309, 1, 310, 1,
	311, 1, 313, 1, 364, 2, 0, 7,
	2, 0, 49, 2, 1, 0, 2, 1,
	309, 2, 2, 5, 2, 3, 5, 2,
	4, 0, 2, 4, 5, 2, 4, 309,
	2, 5, 2, 2, 5, 3, 2, 5,
	4, 2, 5, 36, 2, 5, 51, 2,
	5, 52, 2, 5, 53, 2, 5, 54,
	2, 5, 93, 2, 6, 1, 2, 7,
	1, 2, 7, 2, 2, 7, 3, 2,
	7, 4, 2, 8, 73, 2, 8, 77,
	2, 9, 10, 2, 11, 1, 2, 12,
	1, 2, 13, 14, 2, 16, 17, 2,
	18, 14, 2, 18, 15, 2, 19, 24,
	2, 19, 77, 2, 19, 84, 2, 20,
	0, 2, 20, 7, 2, 22, 0, 2,
	23, 13, 2, 26, 69, 2, 26, 109,
	2, 26, 120, 2, 27, 0, 2, 27,
	1, 2, 27, 2, 2, 27, 3, 2,
	27, 4, 2, 27, 260, 2, 28, 69,
	2, 28, 114, 2, 29, 292, 2, 29,
	296, 2, 30, 25, 2, 31, 1, 2,
	31, 2, 2, 31, 3, 2, 31, 4,
	2, 31, 93, 2, 32, 7, 2, 33,
	8, 2, 33, 313, 2, 34, 25, 2,
	35, 0, 2, 35, 1, 2, 35, 2,
	2, 35, 3, 2, 35, 4, 2, 35,
	260, 2, 35, 299, 2, 36, 41, 2,
	37, 36, 2, 38, 73, 2, 38, 277,
	2, 38, 289, 2, 38, 290, 2, 38,
	305, 2, 38, 313, 2, 42, 265, 2,
	42, 266, 2, 42, 267, 2, 42, 268,
	2, 42, 269, 2, 42, 270, 2, 45,
	0, 2, 45, 1, 2, 45, 2, 2,
	45, 3, 2, 45, 4, 2, 46, 0,
	2, 46, 1, 2, 46, 2, 2, 46,
	3, 2, 46, 4, 2, 46, 260, 2,
	46, 292, 2, 47, 0, 2, 47, 1,
	2, 47, 2, 2, 47, 3, 2, 47,
	4, 2, 48, 304, 2, 49, 1, 2,
	49, 2, 2, 49, 3, 2, 49, 4,
	2, 56, 7, 2, 56, 47, 2, 56,
	93, 2, 57, 58, 2, 59, 1, 2,
	59, 2, 2, 59, 3, 2, 59, 4,
	2, 60, 305, 2, 62, 63, 2, 64,
	65, 2, 66, 68, 2, 68, 0, 2,
	68, 61, 2, 71, 0, 2, 71, 305,
	2, 75, 23, 2, 79, 69, 2, 80,
	7, 2, 81, 8, 2, 82, 23, 2,
	84, 8, 2, 90, 364, 2, 91, 364,
	2, 92, 1, 2, 92, 2, 2, 92,
	3, 2, 92, 4, 2, 93, 1, 2,
	93, 2, 2, 93, 3, 2, 93, 4,
	2, 94, 90, 2, 95, 96, 2, 97,
	289, 2, 97, 305, 2, 98, 99, 2,
	100, 101, 2, 102, 103, 2, 102, 104,
	2, 102, 105, 2, 106, 107, 2, 108,
	305, 2, 111, 305, 2, 112, 0, 2,
	128, 305, 2, 130, 0, 2, 131, 0,
	2, 132, 0, 2, 133, 0, 2, 134,
	0, 2, 135, 0, 2, 136, 0, 2,
	137, 0, 2, 138, 0, 2, 139, 0,
	2, 140, 0, 2, 141, 0, 2, 142,
	0, 2, 143, 0, 2, 144, 0, 2,
	145, 0, 2, 147, 0, 2, 148, 0,
	2, 149, 0, 2, 150, 0, 2, 151,
	0, 2, 152, 0, 2, 153, 0, 2,
	154, 0, 2, 155, 0, 2, 156, 0,
	2, 157, 305, 2, 158, 305, 2, 159,
	305, 2, 160, 1, 2, 160, 2, 2,
	160, 3, 2, 160, 4, 2, 161, 1,
	2, 161, 2, 2, 161, 3, 2, 161,
	4, 2, 162, 1, 2, 162, 2, 2,
	162, 3, 2, 162, 4, 2, 163, 1,
	2, 163, 2, 2, 163, 3, 2, 163,
	4, 2, 164, 1, 2, 164, 2, 2,
	164, 3, 2, 164, 4, 2, 165, 1,
	2, 165, 2, 2, 165, 3, 2, 165,
	4, 2, 166, 1, 2, 166, 2, 2,
	166, 3, 2, 166, 4, 2, 167, 1,
	2, 167, 2, 2, 167, 3, 2, 167,
	4, 2, 168, 1, 2, 168, 2, 2,
	168, 3, 2, 168, 4, 2, 169, 1,
	2, 169, 2, 2, 169, 3, 2, 169,
	4, 2, 170, 1, 2, 170, 2, 2,
	170, 3, 2, 170, 4, 2, 171, 1,
	2, 171, 2, 2, 171, 3, 2, 171,
	4, 2, 172, 1, 2, 172, 2, 2,
	172, 3, 2, 172, 4, 2, 173, 1,
	2, 173, 2, 2, 173, 3, 2, 173,
	4, 2, 174, 1, 2, 174, 2, 2,
	174, 3, 2, 174, 4, 2, 175, 1,
	2, 175, 2, 2, 175, 3, 2, 175,
	4, 2, 176, 1, 2, 176, 2, 2,
	176, 3, 2, 176, 4, 2, 177, 1,
	2, 177, 2, 2, 177, 3, 2, 177,
	4, 2, 178, 1, 2, 178, 2, 2,
	178, 3, 2, 178, 4, 2, 179, 1,
	2, 179, 2, 2, 179, 3, 2, 179,
	4, 2, 180, 1, 2, 180, 2, 2,
	180, 3, 2, 180, 4, 2, 181, 1,
	2, 181, 2, 2, 181, 3, 2, 181,
	4, 2, 182, 1, 2, 182, 2, 2,
	182, 3, 2, 182, 4, 2, 183, 1,
	2, 183, 2, 2, 183, 3, 2, 183,
	4, 2, 184, 1, 2, 184, 2, 2,
	184, 3, 2, 184, 4, 2, 185, 1,
	2, 185, 2, 2, 185, 3, 2, 185,
	4, 2, 186, 1, 2, 186, 2, 2,
	186, 3, 2, 186, 4, 2, 187, 1,
	2, 187, 2, 2, 187, 3, 2, 187,
	4, 2, 188, 1, 2, 188, 2, 2,
	188, 3, 2, 188, 4, 2, 189, 1,
	2, 189, 2, 2, 189, 3, 2, 189,
	4, 2, 190, 1, 2, 190, 2, 2,
	190, 3, 2, 190, 4, 2, 191, 1,
	2, 191, 2, 2, 191, 3, 2, 191,
	4, 2, 192, 1, 2, 192, 2, 2,
	192, 3, 2, 192, 4, 2, 193, 1,
	2, 193, 2, 2, 193, 3, 2, 193,
	4, 2, 194, 1, 2, 194, 2, 2,
	194, 3, 2, 194, 4, 2, 195, 1,
	2, 195, 2, 2, 195, 3, 2, 195,
	4, 2, 196, 1, 2, 196, 2, 2,
	196, 3, 2, 196, 4, 2, 197, 1,
	2, 197, 2, 2, 197, 3, 2, 197,
	4, 2, 198, 1, 2, 198, 2, 2,
	198, 3, 2, 198, 4, 2, 199, 1,
	2, 199, 2, 2, 199, 3, 2, 199,
	4, 2, 200, 1, 2, 200, 2, 2,
	200, 3, 2, 200, 4, 2, 201, 1,
	2, 201, 2, 2, 201, 3, 2, 201,
	4, 2, 202, 1, 2, 202, 2, 2,
	202, 3, 2, 202, 4, 2, 203, 1,
	2, 203, 2, 2, 203, 3, 2, 203,
	4, 2, 204, 1, 2, 204, 2, 2,
	204, 3, 2, 204, 4, 2, 205, 1,
	2, 205, 2, 2, 205, 3, 2, 205,
	4, 2, 206, 1, 2, 206, 2, 2,
	206, 3, 2, 206, 4, 2, 207, 1,
	2, 207, 2, 2, 207, 3, 2, 207,
	4, 2, 208, 1, 2, 208, 2, 2,
	208, 3, 2, 208, 4, 2, 209, 1,
	2, 209, 2, 2, 209, 3, 2, 209,
	4, 2, 210, 1, 2, 210, 2, 2,
	210, 3, 2, 210, 4, 2, 211, 1,
	2, 211, 2, 2, 211, 3, 2, 211,
	4, 2, 212, 1, 2, 212, 2, 2,
	212, 3, 2, 212, 4, 2, 213, 1,
	2, 213, 2, 2, 213, 3, 2, 213,
	4, 2, 214, 1, 2, 214, 2, 2,
	214, 3, 2, 214, 4, 2, 215, 1,
	2, 215, 2, 2, 215, 3, 2, 215,
	4, 2, 216, 1, 2, 216, 2, 2,
	216, 3, 2, 216, 4, 2, 217, 1,
	2, 217, 2, 2, 217, 3, 2, 217,
	4, 2, 218, 1, 2, 218, 2, 2,
	218, 3, 2, 218, 4, 2, 219, 1,
	2, 219, 2, 2, 219, 3, 2, 219,
	4, 2, 220, 1, 2, 220, 2, 2,
	220, 3, 2, 220, 4, 2, 221, 1,
	2, 221, 2, 2, 221, 3, 2, 221,
	4, 2, 222, 1, 2, 222, 2, 2,
	222, 3, 2, 222, 4, 2, 223, 1,
	2, 223, 2, 2, 223, 3, 2, 223,
	4, 2, 224, 1, 2, 224, 2, 2,
	224, 3, 2, 224, 4, 2, 225, 1,
	2, 225, 2, 2, 225, 3, 2, 225,
	4, 2, 226, 1, 2, 226, 2, 2,
	226, 3, 2, 226, 4, 2, 227, 1,
	2, 227, 2, 2, 227, 3, 2, 227,
	4, 2, 228, 1, 2, 228, 2, 2,
	228, 3, 2, 228, 4, 2, 229, 1,
	2, 229, 2, 2, 229, 3, 2, 229,
	4, 2, 230, 1, 2, 230, 2, 2,
	230, 3, 2, 230, 4, 2, 231, 1,
	2, 231, 2, 2, 231, 3, 2, 231,
	4, 2, 232, 1, 2, 232, 2, 2,
	232, 3, 2, 232, 4, 2, 233, 1,
	2, 233, 2, 2, 233, 3, 2, 233,
	4, 2, 234, 1, 2, 234, 2, 2,
	234, 3, 2, 234, 4, 2, 235, 1,
	2, 235, 2, 2, 235, 3, 2, 235,
	4, 2, 236, 1, 2, 236, 2, 2,
	236, 3, 2, 236, 4, 2, 237, 1,
	2, 237, 2, 2, 237, 3, 2, 237,
	4, 2, 238, 1, 2, 238, 2, 2,
	238, 3, 2, 238, 4, 2, 239, 1,
	2, 239, 2, 2, 239, 3, 2, 239,
	4, 2, 240, 1, 2, 240, 2, 2,
	240, 3, 2, 240, 4, 2, 241, 1,
	2, 241, 2, 2, 241, 3, 2, 241,
	4, 2, 242, 1, 2, 242, 2, 2,
	242, 3, 2, 242, 4, 2, 243, 1,
	2, 243, 2, 2, 243, 3, 2, 243,
	4, 2, 244, 1, 2, 244, 2, 2,
	244, 3, 2, 244, 4, 2, 245, 1,
	2, 245, 2, 2, 245, 3, 2, 245,
	4, 2, 246, 1, 2, 246, 2, 2,
	246, 3, 2, 246, 4, 2, 247, 1,
	2, 247, 2, 2, 247, 3, 2, 247,
	4, 2, 248, 1, 2, 248, 2, 2,
	248, 3, 2, 248, 4, 2, 249, 1,
	2, 249, 2, 2, 249, 3, 2, 249,
	4, 2, 250, 1, 2, 250, 2, 2,
	250, 3, 2, 250, 4, 2, 251, 1,
	2, 251, 2, 2, 251, 3, 2, 251,
	4, 2, 252, 1, 2, 252, 2, 2,
	252, 3, 2, 252, 4, 2, 253, 1,
	2, 253, 2, 2, 253, 3, 2, 253,
	4, 2, 254, 1, 2, 254, 2, 2,
	254, 3, 2, 254, 4, 2, 255, 1,
	2, 255, 2, 2, 255, 3, 2, 255,
	4, 2, 256, 1, 2, 256, 2, 2,
	256, 3, 2, 256, 4, 2, 257, 1,
	2, 257, 2, 2, 257, 3, 2, 257,
	4, 2, 258, 0, 2, 261, 1, 2,
	261, 2, 2, 261, 3, 2, 261, 4,
	2, 262, 1, 2, 262, 2, 2, 262,
	3, 2, 262, 4, 2, 263, 1, 2,
	263, 2, 2, 263, 3, 2, 263, 4,
	2, 264, 1, 2, 264, 2, 2, 264,
	3, 2, 264, 4, 2, 271, 1, 2,
	271, 2, 2, 271, 3, 2, 271, 4,
	2, 272, 1, 2, 272, 2, 2, 272,
	3, 2, 272, 4, 2, 275, 0, 2,
	276, 305, 2, 278, 109, 2, 283, 109,
	2, 287, 1, 2, 287, 2, 2, 287,
	3, 2, 287, 4, 2, 288, 0, 2,
	292, 1, 2, 292, 2, 2, 292, 3,
	2, 292, 4, 2, 305, 8, 2, 306,
	307, 2, 308, 0, 2, 309, 1, 2,
	309, 4, 2, 312, 309, 2, 313, 305,
	2, 314, 304, 2, 315, 304, 2, 316,
	304, 2, 317, 304, 2, 318, 304, 2,
	319, 304, 2, 320, 304, 2, 321, 304,
	2, 322, 304, 2, 323, 304, 2, 324,
	304, 2, 325, 304, 2, 326, 304, 2,
	327, 304, 2, 328, 304, 2, 329, 304,
	2, 330, 304, 2, 331, 304, 2, 332,
	304, 2, 333, 304, 2, 334, 304, 2,
	335, 304, 2, 336, 304, 2, 337, 304,
	2, 338, 304, 2, 339, 304, 2, 340,
	304, 2, 341, 304, 2, 342, 304, 2,
	343, 304, 2, 344, 304, 2, 345, 304,
	2, 346, 304, 2, 347, 304, 2, 348,
	304, 2, 349, 304, 2, 350, 304, 2,
	351, 304, 2, 352, 304, 2, 353, 304,
	2, 354, 304, 2, 355, 304, 2, 356,
	304, 2, 357, 304, 2, 358, 304, 2,
	359, 304, 2, 360, 304, 2, 361, 304,
	2, 362, 304, 2, 363, 1, 3, 0,
	7, 1, 3, 0, 7, 2, 3, 0,
	7, 3, 3, 0, 7, 4, 3, 0,
	7, 5, 3, 0, 49, 1, 3, 0,
	49, 2, 3, 0, 49, 3, 3, 0,
	49, 4, 3, 1, 32, 7, 3, 1,
	71, 0, 3, 1, 112, 0, 3, 1,
	258, 0, 3, 1, 275, 0, 3, 1,
	288, 0, 3, 2, 0, 7, 3, 2,
	32, 7, 3, 3, 0, 7, 3, 3,
	32, 7, 3, 4, 0, 7, 3, 4,
	32, 7, 3, 4, 71, 0, 3, 4,
	112, 0, 3, 4, 258, 0, 3, 4,
	275, 0, 3, 4, 288, 0, 3, 5,
	0, 7, 3, 5, 37, 36, 3, 5,
	56, 93, 3, 5, 93, 2, 3, 5,
	93, 3, 3, 5, 93, 4, 3, 6,
	1, 93, 3, 6, 363, 1, 3, 7,
	363, 1, 3, 9, 11, 1, 3, 15,
	21, 0, 3, 20, 7, 2, 3, 20,
	7, 3, 3, 20, 7, 4, 3, 20,
	83, 7, 3, 23, 13, 14, 3, 27,
	71, 0, 3, 27, 294, 29, 3, 28,
	95, 96, 3, 29, 292, 1, 3, 29,
	292, 2, 3, 29, 292, 3, 3, 29,
	292, 4, 3, 29, 296, 292, 3, 31,
	1, 93, 3, 31, 2, 93, 3, 31,
	3, 93, 3, 31, 4, 93, 3, 31,
	94, 90, 3, 32, 1, 7, 3, 32,
	2, 7, 3, 32, 3, 7, 3, 32,
	4, 7, 3, 33, 89, 8, 3, 35,
	1, 0, 3, 35, 4, 0, 3, 38,
	157, 305, 3, 38, 159, 305, 3, 38,
	313, 8, 3, 38, 313, 305, 3, 40,
	42, 265, 3, 40, 42, 266, 3, 40,
	42, 267, 3, 40, 42, 268, 3, 40,
	42, 269, 3, 40, 42, 270, 3, 42,
	265, 1, 3, 42, 265, 2, 3, 42,
	265, 3, 3, 42, 265, 4, 3, 42,
	266, 1, 3, 42, 266, 2, 3, 42,
	266, 3, 3, 42, 266, 4, 3, 42,
	267, 1, 3, 42, 267, 2, 3, 42,
	267, 3, 3, 42, 267, 4, 3, 42,
	268, 1, 3, 42, 268, 2, 3, 42,
	268, 3, 3, 42, 268, 4, 3, 42,
	269, 1, 3, 42, 269, 2, 3, 42,
	269, 3, 3, 42, 269, 4, 3, 42,
	270, 1, 3, 42, 270, 2, 3, 42,
	270, 3, 3, 42, 270, 4, 3, 46,
	146, 292, 3, 46, 292, 1, 3, 46,
	292, 2, 3, 46, 292, 3, 3, 46,
	292, 4, 3, 48, 304, 1, 3, 48,
	304, 2, 3, 48, 304, 3, 3, 48,
	304, 4, 3, 48, 304, 309, 3, 50,
	38, 73, 3, 50, 38, 305, 3, 50,
	38, 313, 3, 55, 37, 36, 3, 56,
	7, 2, 3, 56, 7, 3, 3, 56,
	7, 4, 3, 56, 47, 0, 3, 56,
	47, 1, 3, 56, 47, 2, 3, 56,
	47, 3, 3, 56, 47, 4, 3, 56,
	93, 1, 3, 56, 93, 2, 3, 56,
	93, 3, 3, 56, 93, 4, 3, 66,
	68, 0, 3, 66, 68, 61, 3, 67,
	62, 63, 3, 68, 61, 0, 3, 70,
	26, 69, 3, 72, 0, 1, 3, 75,
	23, 13, 3, 76, 0, 1, 3, 80,
	2, 7, 3, 80, 3, 7, 3, 80,
	4, 7, 3, 80, 7, 4, 3, 82,
	23, 13, 3, 85, 0, 1, 3, 88,
	7, 1, 3, 88, 7, 4, 3, 88,
	30, 25, 3, 88, 32, 7, 3, 90,
	91, 364, 3, 91, 90, 364, 3, 97,
	108, 305, 3, 97, 157, 305, 3, 98,
	99, 0, 3, 98, 99, 1, 3, 98,
	99, 2, 3, 98, 99, 3, 3, 98,
	99, 4, 3, 98, 99, 29, 3, 100,
	101, 0, 3, 100, 101, 1, 3, 100,
	101, 2, 3, 100, 101, 3, 3, 100,
	101, 4, 3, 100, 101, 29, 3, 106,
	107, 0, 3, 106, 107, 1, 3, 106,
	107, 2, 3, 106, 107, 3, 3, 106,
	107, 4, 3, 111, 113, 277, 3, 111,
	286, 305, 3, 148, 146, 292, 3, 157,
	158, 305, 3, 208, 258, 0, 3, 209,
	258, 0, 3, 210, 258, 0, 3, 211,
	258, 0, 3, 212, 258, 0, 3, 213,
	258, 0, 3, 214, 258, 0, 3, 215,
	258, 0, 3, 216, 258, 0, 3, 217,
	258, 0, 3, 218, 258, 0, 3, 219,
	258, 0, 3, 220, 258, 0, 3, 221,
	258, 0, 3, 222, 258, 0, 3, 223,
	258, 0, 3, 224, 258, 0, 3, 225,
	258, 0, 3, 226, 258, 0, 3, 227,
	258, 0, 3, 228, 258, 0, 3, 229,
	258, 0, 3, 230, 258, 0, 3, 231,
	258, 0, 3, 232, 258, 0, 3, 233,
	258, 0, 3, 234, 258, 0, 3, 235,
	258, 0, 3, 236, 258, 0, 3, 237,
	258, 0, 3, 238, 258, 0, 3, 239,
	258, 0, 3, 240, 258, 0, 3, 241,
	258, 0, 3, 242, 258, 0, 3, 243,
	258, 0, 3, 244, 258, 0, 3, 245,
	258, 0, 3, 246, 258, 0, 3, 247,
	258, 0, 3, 248, 258, 0, 3, 249,
	258, 0, 3, 250, 258, 0, 3, 251,
	258, 0, 3, 252, 258, 0, 3, 253,
	258, 0, 3, 254, 258, 0, 3, 255,
	258, 0, 3, 256, 258, 0, 3, 257,
	258, 0, 3, 274, 37, 36, 3, 279,
	280, 0, 3, 279, 281, 0, 3, 282,
	111, 305, 3, 284, 285, 0, 3, 286,
	111, 305, 3, 287, 288, 0, 3, 292,
	288, 0, 3, 295, 28, 298, 3, 314,
	304, 1, 3, 314, 304, 2, 3, 314,
	304, 3, 3, 314, 304, 4, 3, 314,
	304, 309, 3, 315, 304, 1, 3, 315,
	304, 2, 3, 315, 304, 3, 3, 315,
	304, 4, 3, 315, 304, 309, 3, 316,
	304, 1, 3, 316, 304, 2, 3, 316,
	304, 3, 3, 316, 304, 4, 3, 316,
	304, 309, 3, 317, 304, 1, 3, 317,
	304, 2, 3, 317, 304, 3, 3, 317,
	304, 4, 3, 317, 304, 309, 3, 318,
	304, 1, 3, 318, 304, 2, 3, 318,
	304, 3, 3, 318, 304, 4, 3, 318,
	304, 309, 3, 319, 304, 1, 3, 319,
	304, 2, 3, 319, 304, 3, 3, 319,
	304, 4, 3, 319, 304, 309, 3, 320,
	304, 1, 3, 320, 304, 2, 3, 320,
	304, 3, 3, 320, 304, 4, 3, 320,
	304, 309, 3, 321, 304, 1, 3, 321,
	304, 2, 3, 321, 304, 3, 3, 321,
	304, 4, 3, 321, 304, 309, 3, 322,
	304, 1, 3, 322, 304, 2, 3, 322,
	304, 3, 3, 322, 304, 4, 3, 322,
	304, 309, 3, 323, 304, 1, 3, 323,
	304, 2, 3, 323, 304, 3, 3, 323,
	304, 4, 3, 323, 304, 309, 3, 324,
	304, 1, 3, 324, 304, 2, 3, 324,
	304, 3, 3, 324, 304, 4, 3, 324,
	304, 309, 3, 325, 304, 1, 3, 325,
	304, 2, 3, 325, 304, 3, 3, 325,
	304, 4, 3, 325, 304, 309, 3, 326,
	304, 1, 3, 326, 304, 2, 3, 326,
	304, 3, 3, 326, 304, 4, 3, 326,
	304, 309, 3, 327, 304, 1, 3, 327,
	304, 2, 3, 327, 304, 3, 3, 327,
	304, 4, 3, 327, 304, 309, 3, 328,
	304, 1, 3, 328, 304, 2, 3, 328,
	304, 3, 3, 328, 304, 4, 3, 328,
	304, 309, 3, 329, 304, 1, 3, 329,
	304, 2, 3, 329, 304, 3, 3, 329,
	304, 4, 3, 329, 304, 309, 3, 330,
	304, 1, 3, 330, 304, 2, 3, 330,
	304, 3, 3, 330, 304, 4, 3, 330,
	304, 309, 3, 331, 304, 1, 3, 331,
	304, 2, 3, 331, 304, 3, 3, 331,
	304, 4, 3, 331, 304, 309, 3, 332,
	304, 1, 3, 332, 304, 2, 3, 332,
	304, 3, 3, 332, 304, 4, 3, 332,
	304, 309, 3, 333, 304, 1, 3, 333,
	304, 2, 3, 333, 304, 3, 3, 333,
	304, 4, 3, 333, 304, 309, 3, 334,
	304, 1, 3, 334, 304, 2, 3, 334,
	304, 3, 3, 334, 304, 4, 3, 334,
	304, 309, 3, 335, 304, 1, 3, 335,
	304, 2, 3, 335, 304, 3, 3, 335,
	304, 4, 3, 335, 304, 309, 3, 336,
	304, 1, 3, 336, 304, 2, 3, 336,
	304, 3, 3, 336, 304, 4, 3, 336,
	304, 309, 3, 337, 304, 1, 3, 337,
	304, 2, 3, 337, 304, 3, 3, 337,
	304, 4, 3, 337, 304, 309, 3, 338,
	304, 1, 3, 338, 304, 2, 3, 338,
	304, 3, 3, 338, 304, 4, 3, 338,
	304, 309, 3, 339, 304, 1, 3, 339,
	304, 2, 3, 339, 304, 3, 3, 339,
	304, 4, 3, 339, 304, 309, 3, 340,
	304, 1, 3, 340, 304, 2, 3, 340,
	304, 3, 3, 340, 304, 4, 3, 340,
	304, 309, 3, 341, 304, 1, 3, 341,
	304, 2, 3, 341, 304, 3, 3, 341,
	304, 4, 3, 341, 304, 309, 3, 342,
	304, 1, 3, 342, 304, 2, 3, 342,
	304, 3, 3, 342, 304, 4, 3, 342,
	304, 309, 3, 343, 304, 1, 3, 343,
	304, 2, 3, 343, 304, 3, 3, 343,
	304, 4, 3, 343, 304, 309, 3, 344,
	304, 1, 3, 344, 304, 2, 3, 344,
	304, 3, 3, 344, 304, 4, 3, 344,
	304, 309, 3, 345, 304, 1, 3, 345,
	304, 2, 3, 345, 304, 3, 3, 345,
	304, 4, 3, 345, 304, 309, 3, 346,
	304, 1, 3, 346, 304, 2, 3, 346,
	304, 3, 3, 346, 304, 4, 3, 346,
	304, 309, 3, 347, 304, 1, 3, 347,
	304, 2, 3, 347, 304, 3, 3, 347,
	304, 4, 3, 347, 304, 309, 3, 348,
	304, 1, 3, 348, 304, 2, 3, 348,
	304, 3, 3, 348, 304, 4, 3, 348,
	304, 309, 3, 349, 304, 1, 3, 349,
	304, 2, 3, 349, 304, 3, 3, 349,
	304, 4, 3, 349, 304, 309, 3, 350,
	304, 1, 3, 350, 304, 2, 3, 350,
	304, 3, 3, 350, 304, 4, 3, 350,
	304, 309, 3, 351, 304, 1, 3, 351,
	304, 2, 3, 351, 304, 3, 3, 351,
	304, 4, 3, 351, 304, 309, 3, 352,
	304, 1, 3, 352, 304, 2, 3, 352,
	304, 3, 3, 352, 304, 4, 3, 352,
	304, 309, 3, 353, 304, 1, 3, 353,
	304, 2, 3, 353, 304, 3, 3, 353,
	304, 4, 3, 353, 304, 309, 3, 354,
	304, 1, 3, 354, 304, 2, 3, 354,
	304, 3, 3, 354, 304, 4, 3, 354,
	304, 309, 3, 355, 304, 1, 3, 355,
	304, 2, 3, 355, 304, 3, 3, 355,
	304, 4, 3, 355, 304, 309, 3, 356,
	304, 1, 3, 356, 304, 2, 3, 356,
	304, 3, 3, 356, 304, 4, 3, 356,
	304, 309, 3, 357, 304, 1, 3, 357,
	304, 2, 3, 357, 304, 3, 3, 357,
	304, 4, 3, 357, 304, 309, 3, 358,
	304, 1, 3, 358, 304, 2, 3, 358,
	304, 3, 3, 358, 304, 4, 3, 358,
	304, 309, 3, 359, 304, 1, 3, 359,
	304, 2, 3, 359, 304, 3, 3, 359,
	304, 4, 3, 359, 304, 309, 3, 360,
	304, 1, 3, 360, 304, 2, 3, 360,
	304, 3, 3, 360, 304, 4, 3, 360,
	304, 309, 3, 361, 304, 1, 3, 361,
	304, 2, 3, 361, 304, 3, 3, 361,
	304, 4, 3, 361, 304, 309, 3, 362,
	304, 1, 3, 362, 304, 2, 3, 362,
	304, 3, 3, 362, 304, 4, 3, 362,
	304, 309, 4, 0, 7, 2, 5, 4,
	0, 7, 3, 5, 4, 0, 7, 4,
	5, 4, 0, 7, 6, 1, 4, 4,
	309, 0, 7, 4, 5, 0, 7, 2,
	4, 5, 0, 7, 3, 4, 5, 0,
	7, 4, 4, 5, 55, 37, 36, 4,
	5, 56, 93, 2, 4, 5, 56, 93,
	3, 4, 5, 56, 93, 4, 4, 6,
	1, 56, 93, 4, 6, 1, 85, 0,
	4, 6, 72, 0, 1, 4, 6, 76,
	0, 1, 4, 6, 85, 0, 1, 4,
	7, 72, 0, 1, 4, 18, 15, 21,
	0, 4, 20, 83, 7, 2, 4, 20,
	83, 7, 3, 4, 20, 83, 7, 4,
	4, 27, 1, 71, 0, 4, 27, 4,
	71, 0, 4, 27, 294, 29, 292, 4,
	29, 292, 288, 0, 4, 29, 296, 292,
	1, 4, 29, 296, 292, 2, 4, 29,
	296, 292, 3, 4, 29, 296, 292, 4,
	4, 31, 1, 94, 90, 4, 31, 2,
	94, 90, 4, 31, 3, 94, 90, 4,
	31, 4, 94, 90, 4, 33, 38, 313,
	8, 4, 33, 50, 38, 313, 4, 37,
	36, 30, 25, 4, 40, 37, 36, 41,
	4, 40, 42, 265, 1, 4, 40, 42,
	265, 2, 4, 40, 42, 265, 3, 4,
	40, 42, 265, 4, 4, 40, 42, 266,
	1, 4, 40, 42, 266, 2, 4, 40,
	42, 266, 3, 4, 40, 42, 266, 4,
	4, 40, 42, 267, 1, 4, 40, 42,
	267, 2, 4, 40, 42, 267, 3, 4,
	40, 42, 267, 4, 4, 40, 42, 268,
	1, 4, 40, 42, 268, 2, 4, 40,
	42, 268, 3, 4, 40, 42, 268, 4,
	4, 40, 42, 269, 1, 4, 40, 42,
	269, 2, 4, 40, 42, 269, 3, 4,
	40, 42, 269, 4, 4, 40, 42, 270,
	1, 4, 40, 42, 270, 2, 4, 40,
	42, 270, 3, 4, 40, 42, 270, 4,
	4, 42, 267, 275, 0, 4, 42, 268,
	275, 0, 4, 42, 269, 275, 0, 4,
	42, 270, 275, 0, 4, 43, 39, 37,
	36, 4, 44, 39, 37, 36, 4, 46,
	146, 292, 1, 4, 46, 146, 292, 2,
	4, 46, 146, 292, 3, 4, 46, 146,
	292, 4, 4, 46, 292, 288, 0, 4,
	48, 304, 1, 309, 4, 48, 304, 4,
	309, 4, 50, 38, 8, 73, 4, 56,
	55, 37, 36, 4, 66, 68, 61, 0,
	4, 75, 23, 13, 14, 4, 82, 23,
	13, 14, 4, 88, 32, 1, 7, 4,
	88, 32, 2, 7, 4, 88, 32, 3,
	7, 4, 88, 32, 4, 7, 4, 97,
	157, 158, 305, 4, 98, 99, 1, 0,
	4, 98, 99, 4, 0, 4, 98, 99,
	29, 292, 4, 100, 101, 1, 0, 4,
	100, 101, 4, 0, 4, 100, 101, 29,
	292, 4, 106, 107, 1, 0, 4, 106,
	107, 4, 0, 4, 148, 146, 292, 1,
	4, 148, 146, 292, 2, 4, 148, 146,
	292, 3, 4, 148, 146, 292, 4, 4,
	148, 297, 37, 36, 4, 208, 1, 258,
	0, 4, 208, 4, 258, 0, 4, 209,
	1, 258, 0, 4, 209, 4, 258, 0,
	4, 210, 1, 258, 0, 4, 210, 4,
	258, 0, 4, 211, 1, 258, 0, 4,
	211, 4, 258, 0, 4, 212, 1, 258,
	0, 4, 212, 4, 258, 0, 4, 213,
	1, 258, 0, 4, 213, 4, 258, 0,
	4, 214, 1, 258, 0, 4, 214, 4,
	258, 0, 4, 215, 1, 258, 0, 4,
	215, 4, 258, 0, 4, 216, 1, 258,
	0, 4, 216, 4, 258, 0, 4, 217,
	1, 258, 0, 4, 217, 4, 258, 0,
	4, 218, 1, 258, 0, 4, 218, 4,
	258, 0, 4, 219, 1, 258, 0, 4,
	219, 4, 258, 0, 4, 220, 1, 258,
	0, 4, 220, 4, 258, 0, 4, 221,
	1, 258, 0, 4, 221, 4, 258, 0,
	4, 222, 1, 258, 0, 4, 222, 4,
	258, 0, 4, 223, 1, 258, 0, 4,
	223, 4, 258, 0, 4, 224, 1, 258,
	0, 4, 224, 4, 258, 0, 4, 225,
	1, 258, 0, 4, 225, 4, 258, 0,
	4, 226, 1, 258, 0, 4, 226, 4,
	258, 0, 4, 227, 1, 258, 0, 4,
	227, 4, 258, 0, 4, 228, 1, 258,
	0, 4, 228, 4, 258, 0, 4, 229,
	1, 258, 0, 4, 229, 4, 258, 0,
	4, 230, 1, 258, 0, 4, 230, 4,
	258, 0, 4, 231, 1, 258, 0, 4,
	231, 4, 258, 0, 4, 232, 1, 258,
	0, 4, 232, 4, 258, 0, 4, 233,
	1, 258, 0, 4, 233, 4, 258, 0,
	4, 234, 1, 258, 0, 4, 234, 4,
	258, 0, 4, 235, 1, 258, 0, 4,
	235, 4, 258, 0, 4, 236, 1, 258,
	0, 4, 236, 4, 258, 0, 4, 237,
	1, 258, 0, 4, 237, 4, 258, 0,
	4, 238, 1, 258, 0, 4, 238, 4,
	258, 0, 4, 239, 1, 258, 0, 4,
	239, 4, 258, 0, 4, 240, 1, 258,
	0, 4, 240, 4, 258, 0, 4, 241,
	1, 258, 0, 4, 241, 4, 258, 0,
	4, 242, 1, 258, 0, 4, 242, 4,
	258, 0, 4, 243, 1, 258, 0, 4,
	243, 4, 258, 0, 4, 244, 1, 258,
	0, 4, 244, 4, 258, 0, 4, 245,
	1, 258, 0, 4, 245, 4, 258, 0,
	4, 246, 1, 258, 0, 4, 246, 4,
	258, 0, 4, 247, 1, 258, 0, 4,
	247, 4, 258, 0, 4, 248, 1, 258,
	0, 4, 248, 4, 258, 0, 4, 249,
	1, 258, 0, 4, 249, 4, 258, 0,
	4, 250, 1, 258, 0, 4, 250, 4,
	258, 0, 4, 251, 1, 258, 0, 4,
	251, 4, 258, 0, 4, 252, 1, 258,
	0, 4, 252, 4, 258, 0, 4, 253,
	1, 258, 0, 4, 253, 4, 258, 0,
	4, 254, 1, 258, 0, 4, 254, 4,
	258, 0, 4, 255, 1, 258, 0, 4,
	255, 4, 258, 0, 4, 256, 1, 258,
	0, 4, 256, 4, 258, 0, 4, 257,
	1, 258, 0, 4, 257, 4, 258, 0,
	4, 287, 1, 288, 0, 4, 287, 4,
	288, 0, 4, 292, 1, 288, 0, 4,
	292, 4, 288, 0, 4, 293, 28, 26,
	69, 4, 309, 0, 7, 1, 4, 309,
	0, 7, 4, 4, 314, 304, 1, 309,
	4, 314, 304, 4, 309, 4, 315, 304,
	1, 309, 4, 315, 304, 4, 309, 4,
	316, 304, 1, 309, 4, 316, 304, 4,
	309, 4, 317, 304, 1, 309, 4, 317,
	304, 4, 309, 4, 318, 304, 1, 309,
	4, 318, 304, 4, 309, 4, 319, 304,
	1, 309, 4, 319, 304, 4, 309, 4,
	320, 304, 1, 309, 4, 320, 304, 4,
	309, 4, 321, 304, 1, 309, 4, 321,
	304, 4, 309, 4, 322, 304, 1, 309,
	4, 322, 304, 4, 309, 4, 323, 304,
	1, 309, 4, 323, 304, 4, 309, 4,
	324, 304, 1, 309, 4, 324, 304, 4,
	309, 4, 325, 304, 1, 309, 4, 325,
	304, 4, 309, 4, 326, 304, 1, 309,
	4, 326, 304, 4, 309, 4, 327, 304,
	1, 309, 4, 327, 304, 4, 309, 4,
	328, 304, 1, 309, 4, 328, 304, 4,
	309, 4, 329, 304, 1, 309, 4, 329,
	304, 4, 309, 4, 330, 304, 1, 309,
	4, 330, 304, 4, 309, 4, 331, 304,
	1, 309, 4, 331, 304, 4, 309, 4,
	332, 304, 1, 309, 4, 332, 304, 4,
	309, 4, 333, 304, 1, 309, 4, 333,
	304, 4, 309, 4, 334, 304, 1, 309,
	4, 334, 304, 4, 309, 4, 335, 304,
	1, 309, 4, 335, 304, 4, 309, 4,
	336, 304, 1, 309, 4, 336, 304, 4,
	309, 4, 337, 304, 1, 309, 4, 337,
	304, 4, 309, 4, 338, 304, 1, 309,
	4, 338, 304, 4, 309, 4, 339, 304,
	1, 309, 4, 339, 304, 4, 309, 4,
	340, 304, 1, 309, 4, 340, 304, 4,
	309, 4, 341, 304, 1, 309, 4, 341,
	304, 4, 309, 4, 342, 304, 1, 309,
	4, 342, 304, 4, 309, 4, 343, 304,
	1, 309, 4, 343, 304, 4, 309, 4,
	344, 304, 1, 309, 4, 344, 304, 4,
	309, 4, 345, 304, 1, 309, 4, 345,
	304, 4, 309, 4, 346, 304, 1, 309,
	4, 346, 304, 4, 309, 4, 347, 304,
	1, 309, 4, 347, 304, 4, 309, 4,
	348, 304, 1, 309, 4, 348, 304, 4,
	309, 4, 349, 304, 1, 309, 4, 349,
	304, 4, 309, 4, 350, 304, 1, 309,
	4, 350, 304, 4, 309, 4, 351, 304,
	1, 309, 4, 351, 304, 4, 309, 4,
	352, 304, 1, 309, 4, 352, 304, 4,
	309, 4, 353, 304, 1, 309, 4, 353,
	304, 4, 309, 4, 354, 304, 1, 309,
	4, 354, 304, 4, 309, 4, 355, 304,
	1, 309, 4, 355, 304, 4, 309, 4,
	356, 304, 1, 309, 4, 356, 304, 4,
	309, 4, 357, 304, 1, 309, 4, 357,
	304, 4, 309, 4, 358, 304, 1, 309,
	4, 358, 304, 4, 309, 4, 359, 304,
	1, 309, 4, 359, 304, 4, 309, 4,
	360, 304, 1, 309, 4, 360, 304, 4,
	309, 4, 361, 304, 1, 309, 4, 361,
	304, 4, 309, 4, 362, 304, 1, 309,
	4, 362, 304, 4, 309, 5, 5, 56,
	55, 37, 36, 5, 20, 7, 76, 0,
	1, 5, 27, 294, 29, 292, 1, 5,
	27, 294, 29, 292, 2, 5, 27, 294,
	29, 292, 3, 5, 27, 294, 29, 292,
	4, 5, 29, 292, 1, 288, 0, 5,
	29, 292, 4, 288, 0, 5, 29, 296,
	292, 288, 0, 5, 40, 42, 267, 275,
	0, 5, 40, 42, 268, 275, 0, 5,
	40, 42, 269, 275, 0, 5, 40, 42,
	270, 275, 0, 5, 42, 267, 1, 275,
	0, 5, 42, 267, 4, 275, 0, 5,
	42, 268, 1, 275, 0, 5, 42, 268,
	4, 275, 0, 5, 42, 269, 1, 275,
	0, 5, 42, 269, 4, 275, 0, 5,
	42, 270, 1, 275, 0, 5, 42, 270,
	4, 275, 0, 5, 46, 146, 292, 288,
	0, 5, 46, 292, 1, 288, 0, 5,
	46, 292, 4, 288, 0, 5, 56, 7,
	72, 0, 1, 5, 80, 7, 85, 0,
	1, 5, 98, 99, 29, 292, 1, 5,
	98, 99, 29, 292, 2, 5, 98, 99,
	29, 292, 3, 5, 98, 99, 29, 292,
	4, 5, 100, 101, 29, 292, 1, 5,
	100, 101, 29, 292, 2, 5, 100, 101,
	29, 292, 3, 5, 100, 101, 29, 292,
	4, 5, 148, 146, 292, 288, 0, 5,
	273, 43, 39, 37, 36, 6, 20, 83,
	7, 85, 0, 1, 6, 27, 294, 29,
	292, 288, 0, 6, 29, 296, 292, 1,
	288, 0, 6, 29, 296, 292, 4, 288,
	0, 6, 40, 42, 267, 1, 275, 0,
	6, 40, 42, 267, 4, 275, 0, 6,
	40, 42, 268, 1, 275, 0, 6, 40,
	42, 268, 4, 275, 0, 6, 40, 42,
	269, 1, 275, 0, 6, 40, 42, 269,
	4, 275, 0, 6, 40, 42, 270, 1,
	275, 0, 6, 40, 42, 270, 4, 275,
	0, 6, 46, 146, 292, 1, 288, 0,
	6, 46, 146, 292, 4, 288, 0, 6,
	98, 99, 29, 292, 288, 0, 6, 100,
	101, 29, 292, 288, 0, 6, 148, 146,
	292, 1, 288, 0, 6, 148, 146, 292,
	4, 288, 0, 7, 27, 294, 29, 292,
	1, 288, 0, 7, 27, 294, 29, 292,
	4, 288, 0, 7, 98, 99, 29, 292,
	1, 288, 0, 7, 98, 99, 29, 292,
	4, 288, 0, 7, 100, 101, 29, 292,
	1, 288, 0, 7, 100, 101, 29, 292,
	4, 288, 0
};

static const short _zone_scanner_cond_offsets[] = {
	0, 0, 2, 4, 6, 8, 10, 10,
	10, 12, 14, 17, 19, 22, 24, 24,
	26, 26, 28, 30, 32, 34, 34, 36,
	39, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 43, 45, 48, 51, 51,
	51, 51, 51, 51, 51, 51, 51, 51,
	53, 55, 58, 60, 62, 64, 67, 72,
	77, 82, 87, 92, 95, 100, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102,
	103, 104, 104, 104, 104, 104, 105, 107,
	109, 111, 113, 113, 115, 115, 117, 120,
	122, 124, 124, 126, 128, 128, 128, 128,
	128, 128, 130, 133, 135, 137, 139, 141,
	141, 143, 145, 145, 145, 145, 145, 145,
	147, 150, 152, 155, 158, 158, 158, 158,
	158, 160, 163, 163, 165, 167, 169, 169,
	169, 171, 174, 174, 174, 176, 176, 176,
	176, 176, 176, 178, 180, 180, 180, 182,
	182, 182, 182, 184, 184, 184, 184, 186,
	186, 186, 186, 186, 188, 188, 188, 188,
	190, 190, 190, 190, 192, 194, 194, 194,
	194, 194, 196, 196, 198, 198, 198, 198,
	198, 200, 200, 200, 200, 202, 202, 202,
	202, 202, 202, 202, 202, 204, 204, 204,
	206, 208, 208, 208, 210, 210, 212, 212,
	214, 216, 216, 216, 216, 216, 218, 220,
	220, 220, 220, 220, 222, 222, 224, 226,
	226, 228, 230, 230, 230, 230, 230, 232,
	232, 232, 232, 232, 232, 232, 232, 232,
	232, 234, 234, 234, 236, 236, 238, 238,
	238, 238, 240, 242, 242, 242, 242, 242,
	242, 244, 244, 246, 246, 248, 248, 250,
	250, 250, 250, 252, 252, 252, 254, 254,
	254, 254, 256, 256, 258, 258, 258, 258,
	260, 260, 260, 262, 262, 262, 262, 262,
	262, 264, 264, 264, 264, 266, 266, 268,
	270, 272, 274, 276, 276, 278, 281, 284,
	287, 289, 291, 293, 295, 295, 297, 300,
	303, 305, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 310,
	312, 312, 312, 312, 312, 312, 314, 317,
	317, 317, 317, 317, 317, 317, 317, 317,
	317, 319, 319, 319, 319, 319, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 325,
	325, 325, 325, 325, 327, 327, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 333, 333, 333, 333,
	333, 333, 333, 333, 335, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 339, 341, 343,
	345, 347, 349, 351, 353, 355, 357, 359,
	361, 361, 361, 361, 361, 364, 366, 366,
	368, 371, 373, 373, 375, 378, 380, 380,
	382, 385, 388, 391, 391, 393, 395, 395,
	398, 398, 400, 402, 402, 405, 405, 407,
	409, 409, 412, 412, 414, 416, 419, 419,
	419, 419, 421, 423, 425, 427, 429, 431,
	433, 435, 437, 439, 441, 443, 445, 447,
	449, 451, 451, 453, 455, 457, 459, 461,
	463, 465, 467, 470, 472, 474, 477, 479,
	481, 483, 486, 488, 490, 492, 495, 497,
	499, 501, 504, 506, 509, 511, 513, 516,
	519, 522, 524, 527, 529, 531, 534, 537,
	537, 539, 541, 543, 545, 547, 549, 549,
	552, 555, 558, 558, 560, 562, 564, 566,
	568, 570, 572, 574, 576, 578, 578, 581,
	584, 587, 590, 593, 593, 595, 597, 599,
	601, 603, 605, 607, 610, 613, 616, 618,
	618, 618, 618, 618, 618, 620, 623, 623,
	623, 623, 623, 625, 627, 629, 631, 633,
	635, 635, 637, 640, 643, 646, 649, 649,
	651, 653, 655, 657, 657, 659, 662, 665,
	668, 668, 670, 672, 674, 676, 678, 680,
	686, 697, 699, 702, 708, 711, 722, 725,
	728, 731, 733, 735, 737, 739, 745, 748,
	751, 753, 755, 757, 759, 765, 768, 771,
	773, 775, 777, 779, 785, 788, 791, 794,
	794, 796, 798, 800, 802, 804, 806, 808,
	810, 812, 814, 816, 818, 820, 822, 824,
	826, 828, 831, 834, 837, 840, 843, 846,
	849, 852, 852, 852, 854, 854, 854, 854,
	856, 856, 858, 858, 858, 860, 860, 860,
	860, 860, 860, 862, 864, 864, 864, 866,
	866, 866, 866, 868, 868, 868, 868, 870,
	870, 870, 870, 870, 872, 872, 872, 872,
	874, 874, 874, 874, 876, 878, 878, 878,
	878, 878, 880, 880, 882, 882, 882, 882,
	882, 884, 884, 884, 884, 886, 886, 886,
	886, 886, 886, 886, 886, 888, 888, 888,
	890, 892, 892, 892, 894, 894, 896, 896,
	898, 900, 900, 900, 900, 900, 902, 904,
	904, 904, 904, 904, 906, 906, 908, 910,
	910, 912, 914, 914, 914, 914, 914, 916,
	916, 916, 916, 916, 916, 916, 916, 916,
	916, 918, 918, 918, 920, 920, 922, 922,
	922, 922, 924, 926, 926, 926, 926, 926,
	926, 928, 928, 930, 930, 932, 932, 934,
	934, 934, 934, 936, 936, 936, 938, 938,
	938, 938, 940, 940, 942, 942, 942, 942,
	944, 944, 944, 946, 946, 946, 946, 946,
	946, 948, 948, 948, 948, 948, 950, 952,
	954, 956, 958, 960, 962, 965, 968, 971,
	971, 973, 973, 975, 977, 979, 981, 983,
	985, 987, 989, 989, 989, 989, 989, 989,
	989, 989, 989, 989, 989, 989, 989, 989,
	989, 992, 992, 994, 997, 1000, 1003, 1003,
	1005, 1007, 1009, 1011, 1013, 1015, 1015, 1015,
	1015, 1018, 1021, 1024, 1024, 1026, 1028, 1030,
	1032, 1034, 1036, 1036, 1038, 1041, 1044, 1047,
	1050, 1050, 1052, 1054, 1054, 1054, 1057, 1057,
	1059, 1061, 1063, 1065, 1067, 1069, 1069, 1071,
	1074, 1077, 1080, 1083, 1083, 1085, 1087, 1087,
	1090, 1090, 1092, 1094, 1094, 1094, 1094, 1094,
	1094, 1094, 1094, 1094, 1094, 1097, 1097, 1097,
	1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097,
	1097, 1097, 1097, 1099, 1101, 1103, 1105, 1105,
	1108, 1111, 1111, 1113, 1115, 1117, 1119, 1119,
	1122, 1125, 1125, 1127, 1129, 1129, 1129, 1132,
	1132, 1134, 1136, 1138, 1140, 1140, 1143, 1146,
	1146, 1148, 1150, 1152, 1154, 1154, 1154, 1157,
	1159, 1161, 1164, 1169, 1174, 1176, 1178, 1183,
	1188, 1188, 1188, 1190, 1190, 1190, 1190, 1192,
	1192, 1194, 1194, 1194, 1196, 1196, 1198, 1198,
	1198, 1198, 1198, 1198, 1200, 1202, 1202, 1202,
	1204, 1204, 1204, 1204, 1206, 1206, 1206, 1206,
	1208, 1208, 1208, 1208, 1208, 1210, 1210, 1210,
	1210, 1212, 1212, 1212, 1212, 1214, 1216, 1216,
	1216, 1216, 1216, 1218, 1218, 1220, 1220, 1220,
	1220, 1220, 1222, 1222, 1222, 1222, 1224, 1224,
	1224, 1224, 1224, 1224, 1224, 1224, 1226, 1226,
	1226, 1228, 1230, 1230, 1230, 1232, 1232, 1234,
	1234, 1236, 1238, 1238, 1238, 1238, 1238, 1240,
	1242, 1242, 1242, 1242, 1242, 1244, 1244, 1246,
	1248, 1248, 1250, 1252, 1252, 1252, 1252, 1252,
	1254, 1254, 1254, 1254, 1254, 1254, 1254, 1254,
	1254, 1254, 1256, 1256, 1256, 1258, 1258, 1260,
	1260, 1260, 1260, 1262, 1264, 1264, 1264, 1264,
	1264, 1264, 1266, 1266, 1268, 1268, 1270, 1270,
	1272, 1272, 1272, 1272, 1274, 1274, 1274, 1276,
	1276, 1276, 1276, 1278, 1278, 1280, 1280, 1280,
	1280, 1282, 1282, 1282, 1284, 1284, 1284, 1284,
	1284, 1284, 1286, 1288, 1290, 1292, 1292, 1292,
	1292, 1292, 1292, 1292, 1292, 1292, 1294, 1294,
	1296, 1299, 1299, 1301, 1304, 1304, 1306, 1309,
	1311, 1311, 1313, 1316, 1319, 1319, 1319, 1321,
	1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
	1324, 1324, 1326, 1329, 1329, 1329, 1331, 1334,
	1336, 1339, 1341, 1344, 1346, 1349, 1349, 1349,
	1349, 1349, 1351, 1354, 1354, 1356, 1359, 1359,
	1361, 1364, 1364, 1370, 1373, 1384, 1387, 1398,
	1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
	1403, 1406, 1406, 1406, 1408, 1411, 1411, 1411,
	1411, 1411, 1411, 1411, 1411, 1411, 1411, 1413
};

static const char _zone_scanner_cond_lengths[] = {
	0, 2, 2, 2, 2, 2, 0, 0,
	2, 2, 3, 2, 3, 2, 0, 2,
	0, 2, 2, 2, 2, 0, 2, 3,
	2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2, 2, 3, 3, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2,
	2, 3, 2, 2, 2, 3, 5, 5,
	5, 5, 5, 3, 5, 2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1,
	1, 0, 0, 0, 0, 1, 2, 2,
	2, 2, 0, 2, 0, 2, 3, 2,
	2, 0, 2, 2, 0, 0, 0, 0,
	0, 2, 3, 2, 2, 2, 2, 0,
	2, 2, 0, 0, 0, 0, 0, 2,
	3, 2, 3, 3, 0, 0, 0, 0,
	2, 3, 0, 2, 2, 2, 0, 0,
	2, 3, 0, 0, 2, 0, 0, 0,
	0, 0, 2, 2, 0, 0, 2, 0,
	0, 0, 2, 0, 0, 0, 2, 0,
	0, 0, 0, 2, 0, 0, 0, 2,
	0, 0, 0, 2, 2, 0, 0, 0,
	0, 2, 0, 2, 0, 0, 0, 0,
	2, 0, 0, 0, 2, 0, 0, 0,
	0, 0, 0, 0, 2, 0, 0, 2,
	2, 0, 0, 2, 0, 2, 0, 2,
	2, 0, 0, 0, 0, 2, 2, 0,
	0, 0, 0, 2, 0, 2, 2, 0,
	2, 2, 0, 0, 0, 0, 2, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	2, 0, 0, 2, 0, 2, 0, 0,
	0, 2, 2, 0, 0, 0, 0, 0,
	2, 0, 2, 0, 2, 0, 2, 0,
	0, 0, 2, 0, 0, 2, 0, 0,
	0, 2, 0, 2, 0, 0, 0, 2,
	0, 0, 2, 0, 0, 0, 0, 0,
	2, 0, 0, 0, 2, 0, 2, 2,
	2, 2, 2, 0, 2, 3, 3, 3,
	2, 2, 2, 2, 0, 2, 3, 3,
	2, 3, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2, 2,
	0, 0, 0, 0, 0, 2, 3, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	2, 0, 0, 0, 0, 2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2, 0,
	0, 0, 0, 2, 0, 2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2, 0, 0, 0, 0,
	0, 0, 0, 2, 2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	0, 0, 0, 0, 3, 2, 0, 2,
	3, 2, 0, 2, 3, 2, 0, 2,
	3, 3, 3, 0, 2, 2, 0, 3,
	0, 2, 2, 0, 3, 0, 2, 2,
	0, 3, 0, 2, 2, 3, 0, 0,
	0, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 0, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 2, 2,
	2, 3, 2, 2, 2, 3, 2, 2,
	2, 3, 2, 3, 2, 2, 3, 3,
	3, 2, 3, 2, 2, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 0, 3,
	3, 3, 0, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 0, 3, 3,
	3, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 3, 3, 3, 2, 0,
	0, 0, 0, 0, 2, 3, 0, 0,
	0, 0, 2, 2, 2, 2, 2, 2,
	0, 2, 3, 3, 3, 3, 0, 2,
	2, 2, 2, 0, 2, 3, 3, 3,
	0, 2, 2, 2, 2, 2, 2, 6,
	11, 2, 3, 6, 3, 11, 3, 3,
	3, 2, 2, 2, 2, 6, 3, 3,
	2, 2, 2, 2, 6, 3, 3, 2,
	2, 2, 2, 6, 3, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3,
	3, 0, 0, 2, 0, 0, 0, 2,
	0, 2, 0, 0, 2, 0, 0, 0,
	0, 0, 2, 2, 0, 0, 2, 0,
	0, 0, 2, 0, 0, 0, 2, 0,
	0, 0, 0, 2, 0, 0, 0, 2,
	0, 0, 0, 2, 2, 0, 0, 0,
	0, 2, 0, 2, 0, 0, 0, 0,
	2, 0, 0, 0, 2, 0, 0, 0,
	0, 0, 0, 0, 2, 0, 0, 2,
	2, 0, 0, 2, 0, 2, 0, 2,
	2, 0, 0, 0, 0, 2, 2, 0,
	0, 0, 0, 2, 0, 2, 2, 0,
	2, 2, 0, 0, 0, 0, 2, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	2, 0, 0, 2, 0, 2, 0, 0,
	0, 2, 2, 0, 0, 0, 0, 0,
	2, 0, 2, 0, 2, 0, 2, 0,
	0, 0, 2, 0, 0, 2, 0, 0,
	0, 2, 0, 2, 0, 0, 0, 2,
	0, 0, 2, 0, 0, 0, 0, 0,
	2, 0, 0, 0, 0, 2, 2, 2,
	2, 2, 2, 2, 3, 3, 3, 0,
	2, 0, 2, 2, 2, 2, 2, 2,
	2, 2, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	3, 0, 2, 3, 3, 3, 0, 2,
	2, 2, 2, 2, 2, 0, 0, 0,
	3, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 0, 2, 3, 3, 3, 3,
	0, 2, 2, 0, 0, 3, 0, 2,
	2, 2, 2, 2, 2, 0, 2, 3,
	3, 3, 3, 0, 2, 2, 0, 3,
	0, 2, 2, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2, 2, 2, 2, 0, 3,
	3, 0, 2, 2, 2, 2, 0, 3,
	3, 0, 2, 2, 0, 0, 3, 0,
	2, 2, 2, 2, 0, 3, 3, 0,
	2, 2, 2, 2, 0, 0, 3, 2,
	2, 3, 5, 5, 2, 2, 5, 5,
	0, 0, 2, 0, 0, 0, 2, 0,
	2, 0, 0, 2, 0, 2, 0, 0,
	0, 0, 0, 2, 2, 0, 0, 2,
	0, 0, 0, 2, 0, 0, 0, 2,
	0, 0, 0, 0, 2, 0, 0, 0,
	2, 0, 0, 0, 2, 2, 0, 0,
	0, 0, 2, 0, 2, 0, 0, 0,
	0, 2, 0, 0, 0, 2, 0, 0,
	0, 0, 0, 0, 0, 2, 0, 0,
	2, 2, 0, 0, 2, 0, 2, 0,
	2, 2, 0, 0, 0, 0, 2, 2,
	0, 0, 0, 0, 2, 0, 2, 2,
	0, 2, 2, 0, 0, 0, 0, 2,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 2, 0, 0, 2, 0, 2, 0,
	0, 0, 2, 2, 0, 0, 0, 0,
	0, 2, 0, 2, 0, 2, 0, 2,
	0, 0, 0, 2, 0, 0, 2, 0,
	0, 0, 2, 0, 2, 0, 0, 0,
	2, 0, 0, 2, 0, 0, 0, 0,
	0, 2, 2, 2, 2, 0, 0, 0,
	0, 0, 0, 0, 0, 2, 0, 2,
	3, 0, 2, 3, 0, 2, 3, 2,
	0, 2, 3, 3, 0, 0, 2, 3,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 2, 3, 0, 0, 2, 3, 2,
	3, 2, 3, 2, 3, 0, 0, 0,
	0, 2, 3, 0, 2, 3, 0, 2,
	3, 0, 6, 3, 11, 3, 11, 3,
	0, 0, 0, 0, 0, 0, 0, 2,
	3, 0, 0, 2, 3, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2, 2
};

static const short _zone_scanner_cond_keys[] = {
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 58, 59, 59, 60, 127,
	-128, 9, 10, 10, 11, 58, 59, 59,
	60, 127, -128, 9, 10, 10, 11, 58,
	59, 59, 60, 127, -128, 9, 10, 10,
	11, 58, 59, 59, 60, 127, -128, 9,
	10, 10, 11, 58, 59, 59, 60, 127,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 58, 59, 59, 60, 127,
	10, 10, 41, 41, 10, 10, 10, 10,
	10, 10, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	9, 9, 10, 10, 32, 32, 40, 40,
	41, 41, 59, 59, 9, 9, 10, 10,
	32, 32, 40, 40, 41, 41, 43, 43,
	47, 47, 48, 57, 59, 59, 65, 90,
	97, 122, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 9, 9, 10, 10,
	32, 32, 40, 40, 41, 41, 59, 59,
	-128, 9, 10, 10, 11, 127, 9, 9,
	10, 10, 32, 32, 40, 40, 41, 41,
	43, 43, 47, 47, 48, 57, 59, 59,
	65, 90, 97, 122, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 9, 9,
	10, 10, 32, 32, 40, 40, 41, 41,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 9, 9,
	10, 10, 32, 32, 40, 40, 41, 41,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 9, 9,
	10, 10, 32, 32, 40, 40, 41, 41,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 58, 59, 59,
	60, 127, -128, 9, 10, 10, 11, 58,
	59, 59, 60, 127, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 58, 59, 59, 60, 127, -128, 9,
	10, 10, 11, 58, 59, 59, 60, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	9, 9, 10, 10, 32, 32, 40, 40,
	41, 41, 59, 59, -128, 9, 10, 10,
	11, 127, 9, 9, 10, 10, 32, 32,
	40, 40, 41, 41, 43, 43, 47, 47,
	48, 57, 59, 59, 65, 90, 97, 122,
	-128, 9, 10, 10, 11, 127, 9, 9,
	10, 10, 32, 32, 40, 40, 41, 41,
	43, 43, 47, 47, 48, 57, 59, 59,
	65, 90, 97, 122, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 0
};

static const char _zone_scanner_cond_spaces[] = {
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2, 3, 4, 4,
	4, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 7, 7,
	0, 0, 0, 7, 7, 7, 7, 7,
	7, 7, 7, 0, 0, 0, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 0, 0, 0, 0,
	0, 0, 0, 0, 7, 7, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 7,
	7, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 7, 7, 7, 7,
	7, 7, 0, 0, 0, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 7, 7, 7, 7,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 0, 0, 0, 7, 7,
	7, 7, 0, 0, 0, 7, 7, 7,
	7, 7, 7, 0, 0, 0, 7, 7,
	7, 7, 7, 7, 0, 0, 0, 7,
	7, 7, 7, 7, 7, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1, 1, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	7, 7, 7, 7, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 7, 7, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 7, 7, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	10, 13, 10, 10, 10, 13, 5, 8,
	5, 5, 5, 5, 5, 5, 8, 5,
	5, 1, 1, 8, 8, 8, 6, 11,
	6, 6, 6, 11, 9, 9, 9, 10,
	13, 10, 10, 10, 5, 5, 5, 13,
	5, 5, 12, 12, 12, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 10, 13, 10, 10, 10,
	13, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 10,
	13, 10, 10, 10, 13, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 10, 13, 10, 10, 10,
	13, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1, 1, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	1, 1, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1, 1, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 7, 7, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 7, 7, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 7, 7, 7, 7, 0, 0,
	0, 0, 0, 0, 0, 7, 7, 7,
	7, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 0, 0,
	0, 0, 0, 0, 0, 0, 7, 7,
	0, 0, 0, 7, 7, 0, 0, 0,
	7, 7, 0, 0, 0, 0, 0, 7,
	7, 0, 0, 0, 0, 0, 0, 7,
	7, 0, 0, 0, 7, 7, 0, 0,
	0, 7, 7, 0, 0, 0, 7, 7,
	0, 0, 0, 7, 7, 0, 0, 0,
	7, 7, 0, 0, 0, 7, 7, 0,
	0, 0, 7, 7, 0, 0, 0, 7,
	7, 0, 0, 0, 6, 11, 6, 6,
	6, 11, 9, 9, 9, 5, 8, 5,
	5, 5, 5, 5, 5, 8, 5, 5,
	8, 8, 8, 10, 13, 10, 10, 10,
	5, 5, 5, 13, 5, 5, 12, 12,
	12, 7, 7, 0, 0, 0, 7, 7,
	0, 0, 0, 7, 7, 0, 0, 0
};

static const short _zone_scanner_key_offsets[] = {
	0, 0, 16, 34, 48, 56, 64, 65,
	67, 73, 85, 88, 94, 97, 105, 117,
	125, 127, 133, 145, 163, 171, 183, 191,
	194, 200, 201, 207, 209, 211, 213, 215,
	217, 219, 225, 231, 245, 248, 254, 256,
	258, 260, 262, 264, 270, 272, 274, 280,
	298, 312, 315, 331, 345, 359, 362, 374,
	396, 434, 452, 470, 499, 517, 526, 527,
	528, 539, 555, 571, 573, 575, 577, 593,
	599, 605, 611, 623, 629, 631, 633, 645,
	653, 661, 667, 673, 675, 677, 685, 691,
	699, 719, 727, 728, 738, 750, 760, 763,
	769, 785, 795, 813, 821, 822, 824, 826,
	828, 838, 846, 849, 855, 867, 875, 893,
	903, 921, 929, 930, 932, 934, 936, 946,
	954, 960, 976, 979, 982, 989, 996, 1004,
	1012, 1029, 1032, 1033, 1043, 1087, 1103, 1105,
	1107, 1117, 1120, 1130, 1132, 1142, 1146, 1148,
	1150, 1152, 1154, 1164, 1174, 1176, 1178, 1188,
	1190, 1192, 1194, 1204, 1206, 1208, 1210, 1220,
	1226, 1228, 1230, 1232, 1242, 1246, 1248, 1250,
	1260, 1262, 1264, 1266, 1276, 1286, 1288, 1290,
	1292, 1293, 1303, 1304, 1314, 1318, 1320, 1322,
	1324, 1334, 1336, 1338, 1340, 1350, 1352, 1354,
	1356, 1358, 1360, 1362, 1364, 1374, 1378, 1380,
	1390, 1400, 1406, 1407, 1417, 1418, 1428, 1430,
	1440, 1450, 1454, 1456, 1458, 1460, 1470, 1480,
	1486, 1488, 1490, 1492, 1502, 1504, 1514, 1526,
	1528, 1539, 1551, 1553, 1555, 1557, 1559, 1569,
	1571, 1573, 1575, 1577, 1579, 1581, 1583, 1585,
	1587, 1597, 1599, 1601, 1611, 1617, 1627, 1629,
	1631, 1633, 1643, 1653, 1665, 1667, 1669, 1671,
	1673, 1683, 1685, 1695, 1697, 1707, 1709, 1719,
	1721, 1723, 1725, 1735, 1737, 1739, 1749, 1755,
	1757, 1759, 1769, 1771, 1781, 1783, 1785, 1787,
	1799, 1801, 1803, 1813, 1815, 1817, 1819, 1821,
	1823, 1833, 1835, 1837, 1839, 1849, 1851, 1861,
	1867, 1875, 1883, 1895, 1901, 1917, 1920, 1923,
	1926, 1932, 1941, 1951, 1963, 1969, 1985, 1988,
	1991, 1999, 2002, 2008, 2009, 2010, 2011, 2019,
	2020, 2021, 2029, 2030, 2031, 2033, 2034, 2035,
	2036, 2037, 2045, 2046, 2047, 2048, 2049, 2057,
	2058, 2059, 2061, 2071, 2072, 2073, 2074, 2075,
	2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 2085, 2093, 2094, 2095, 2096, 2104, 2114,
	2131, 2132, 2133, 2134, 2135, 2142, 2152, 2155,
	2156, 2157, 2158, 2166, 2173, 2180, 2188, 2196,
	2204, 2214, 2215, 2222, 2230, 2238, 2255, 2256,
	2257, 2258, 2260, 2261, 2262, 2263, 2264, 2265,
	2269, 2272, 2277, 2280, 2294, 2297, 2298, 2299,
	2300, 2301, 2302, 2310, 2317, 2326, 2333, 2351,
	2358, 2359, 2360, 2362, 2375, 2381, 2391, 2392,
	2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400,
	2405, 2409, 2411, 2415, 2426, 2430, 2431, 2432,
	2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440,
	2441, 2442, 2443, 2444, 2454, 2455, 2456, 2457,
	2458, 2461, 2463, 2466, 2478, 2494, 2495, 2507,
	2515, 2519, 2525, 2527, 2534, 2536, 2538, 2540,
	2542, 2543, 2544, 2546, 2548, 2550, 2551, 2557,
	2561, 2565, 2566, 2568, 2570, 2572, 2574, 2580,
	2582, 2584, 2586, 2588, 2589, 2590, 2592, 2594,
	2596, 2597, 2598, 2599, 2605, 2606, 2607, 2609,
	2611, 2613, 2614, 2615, 2616, 2622, 2624, 2625,
	2626, 2627, 2628, 2634, 2635, 2636, 2642, 2644,
	2646, 2648, 2650, 2652, 2654, 2656, 2662, 2664,
	2666, 2668, 2670, 2672, 2674, 2678, 2680, 2682,
	2688, 2690, 2692, 2698, 2700, 2702, 2706, 2708,
	2709, 2715, 2717, 2719, 2722, 2729, 2731, 2733,
	2735, 2737, 2738, 2739, 2741, 2743, 2745, 2746,
	2752, 2753, 2754, 2760, 2761, 2762, 2768, 2782,
	2790, 2792, 2794, 2796, 2798, 2800, 2806, 2812,
	2814, 2816, 2818, 2820, 2822, 2828, 2832, 2834,
	2840, 2842, 2844, 2850, 2852, 2854, 2856, 2862,
	2864, 2866, 2872, 2876, 2878, 2884, 2886, 2888,
	2894, 2896, 2898, 2900, 2906, 2908, 2910, 2916,
	2919, 2928, 2937, 2943, 2952, 2958, 2973, 2979,
	2987, 2995, 3003, 3021, 3029, 3047, 3055, 3073,
	3081, 3099, 3107, 3119, 3127, 3130, 3138, 3150,
	3158, 3161, 3169, 3181, 3189, 3192, 3200, 3212,
	3220, 3223, 3226, 3229, 3235, 3241, 3253, 3259,
	3262, 3271, 3277, 3292, 3298, 3301, 3303, 3311,
	3326, 3332, 3335, 3341, 3351, 3367, 3370, 3377,
	3390, 3392, 3400, 3410, 3418, 3428, 3437, 3445,
	3451, 3459, 3467, 3477, 3485, 3495, 3504, 3512,
	3518, 3527, 3529, 3543, 3555, 3569, 3581, 3595,
	3607, 3621, 3631, 3634, 3647, 3660, 3663, 3676,
	3689, 3699, 3702, 3715, 3728, 3738, 3741, 3754,
	3767, 3777, 3780, 3786, 3789, 3797, 3805, 3808,
	3811, 3814, 3820, 3823, 3831, 3839, 3842, 3845,
	3847, 3855, 3863, 3871, 3879, 3887, 3902, 3908,
	3911, 3914, 3917, 3919, 3927, 3935, 3943, 3955,
	3961, 3973, 3979, 3991, 3997, 4012, 4018, 4021,
	4024, 4027, 4030, 4033, 4039, 4045, 4053, 4061,
	4073, 4079, 4092, 4094, 4097, 4100, 4103, 4116,
	4118, 4119, 4122, 4125, 4127, 4139, 4142, 4143,
	4150, 4157, 4159, 4167, 4179, 4185, 4193, 4201,
	4213, 4219, 4235, 4238, 4241, 4244, 4247, 4249,
	4257, 4265, 4273, 4285, 4291, 4307, 4310, 4313,
	4316, 4318, 4326, 4336, 4342, 4350, 4358, 4365,
	4399, 4412, 4414, 4417, 4431, 4434, 4475, 4484,
	4487, 4490, 4496, 4504, 4512, 4521, 4558, 4561,
	4564, 4570, 4578, 4586, 4599, 4640, 4643, 4646,
	4652, 4660, 4668, 4683, 4717, 4720, 4723, 4726,
	4760, 4772, 4784, 4790, 4798, 4806, 4814, 4822,
	4830, 4838, 4846, 4854, 4862, 4870, 4885, 4891,
	4904, 4906, 4909, 4912, 4915, 4918, 4921, 4924,
	4927, 4930, 4932, 4934, 4940, 4942, 4944, 4946,
	4952, 4954, 4960, 4970, 4972, 4978, 4982, 4984,
	4986, 4988, 4990, 4996, 5002, 5004, 5006, 5012,
	5014, 5016, 5018, 5024, 5026, 5028, 5030, 5036,
	5042, 5044, 5046, 5048, 5054, 5058, 5060, 5062,
	5068, 5070, 5072, 5074, 5080, 5086, 5088, 5090,
	5092, 5093, 5099, 5100, 5106, 5110, 5112, 5114,
	5116, 5122, 5124, 5126, 5128, 5134, 5136, 5138,
	5140, 5142, 5144, 5146, 5148, 5154, 5158, 5160,
	5166, 5172, 5178, 5179, 5185, 5186, 5192, 5194,
	5200, 5206, 5210, 5212, 5214, 5216, 5222, 5228,
	5234, 5236, 5238, 5240, 5246, 5248, 5254, 5262,
	5264, 5271, 5279, 5281, 5283, 5285, 5287, 5293,
	5295, 5297, 5299, 5301, 5303, 5305, 5307, 5309,
	5311, 5317, 5319, 5321, 5327, 5333, 5339, 5341,
	5343, 5345, 5351, 5357, 5369, 5371, 5373, 5375,
	5377, 5383, 5385, 5391, 5393, 5399, 5401, 5407,
	5409, 5411, 5413, 5419, 5421, 5423, 5429, 5435,
	5437, 5439, 5445, 5447, 5453, 5455, 5457, 5459,
	5467, 5469, 5471, 5477, 5479, 5481, 5483, 5485,
	5487, 5493, 5502, 5508, 5514, 5516, 5524, 5532,
	5540, 5552, 5558, 5571, 5573, 5576, 5579, 5582,
	5589, 5591, 5593, 5601, 5609, 5617, 5625, 5633,
	5646, 5652, 5664, 5670, 5677, 5683, 5690, 5697,
	5703, 5710, 5722, 5728, 5729, 5730, 5731, 5732,
	5733, 5736, 5742, 5754, 5757, 5760, 5763, 5765,
	5773, 5781, 5789, 5797, 5805, 5818, 5824, 5830,
	5842, 5845, 5848, 5851, 5853, 5861, 5869, 5877,
	5885, 5893, 5905, 5911, 5927, 5930, 5933, 5936,
	5939, 5941, 5949, 5957, 5965, 5971, 5974, 5976,
	5984, 5992, 6000, 6008, 6016, 6028, 6034, 6050,
	6053, 6056, 6059, 6062, 6064, 6072, 6081, 6090,
	6093, 6095, 6103, 6115, 6121, 6127, 6133, 6134,
	6140, 6146, 6152, 6158, 6165, 6168, 6174, 6180,
	6181, 6187, 6193, 6200, 6206, 6212, 6213, 6219,
	6225, 6232, 6234, 6242, 6250, 6258, 6270, 6276,
	6279, 6282, 6284, 6292, 6304, 6310, 6322, 6328,
	6331, 6334, 6336, 6344, 6359, 6365, 6371, 6374,
	6376, 6384, 6396, 6402, 6414, 6420, 6423, 6426,
	6460, 6476, 6493, 6501, 6509, 6510, 6511, 6514,
	6533, 6552, 6558, 6572, 6586, 6600, 6614, 6630,
	6646, 6648, 6650, 6660, 6662, 6664, 6666, 6676,
	6678, 6688, 6698, 6702, 6712, 6714, 6724, 6728,
	6730, 6732, 6734, 6736, 6746, 6756, 6758, 6760,
	6770, 6772, 6774, 6776, 6786, 6788, 6790, 6792,
	6802, 6808, 6810, 6812, 6814, 6824, 6828, 6830,
	6832, 6842, 6844, 6846, 6848, 6858, 6868, 6870,
	6872, 6874, 6875, 6885, 6886, 6896, 6900, 6902,
	6904, 6906, 6916, 6918, 6920, 6922, 6932, 6934,
	6936, 6938, 6940, 6942, 6944, 6946, 6956, 6960,
	6962, 6972, 6982, 6988, 6989, 6999, 7000, 7010,
	7012, 7022, 7032, 7036, 7038, 7040, 7042, 7052,
	7062, 7068, 7070, 7072, 7074, 7084, 7086, 7096,
	7108, 7110, 7121, 7133, 7135, 7137, 7139, 7141,
	7151, 7153, 7155, 7157, 7159, 7161, 7163, 7165,
	7167, 7169, 7179, 7181, 7183, 7193, 7199, 7209,
	7211, 7213, 7215, 7225, 7235, 7247, 7249, 7251,
	7253, 7255, 7265, 7267, 7277, 7279, 7289, 7291,
	7301, 7303, 7305, 7307, 7317, 7319, 7321, 7331,
	7337, 7339, 7341, 7351, 7353, 7363, 7365, 7367,
	7369, 7381, 7383, 7385, 7395, 7397, 7399, 7401,
	7403, 7405, 7415, 7433, 7455, 7473, 7473, 7473,
	7473, 7473, 7485, 7485, 7485, 7485, 7501, 7501,
	7518, 7521, 7521, 7565, 7568, 7568, 7584, 7587,
	7599, 7599, 7615, 7618, 7621, 7621, 7621, 7638,
	7641, 7641, 7641, 7641, 7641, 7641, 7641, 7641,
	7641, 7641, 7657, 7660, 7660, 7660, 7670, 7673,
	7685, 7688, 7700, 7703, 7715, 7718, 7718, 7718,
	7718, 7718, 7731, 7734, 7734, 7750, 7753, 7753,
	7769, 7772, 7772, 7786, 7789, 7802, 7805, 7846,
	7855, 7855, 7855, 7855, 7855, 7855, 7855, 7855,
	7871, 7874, 7874, 7874, 7890, 7893, 7893, 7893,
	7893, 7893, 7893, 7893, 7893, 7893, 7893, 7910
};

static const short _zone_scanner_trans_keys[] = {
	9, 32, 40, 41, 73, 105, 1802, 1851,
	2058, 2107, 48, 57, 65, 90, 97, 122,
	9, 32, 40, 41, 68, 72, 77, 83,
	87, 100, 104, 109, 115, 119, 2058, 2107,
	48, 57, 9, 32, 40, 41, 73, 105,
	2058, 2107, 48, 57, 65, 90, 97, 122,
	9, 32, 40, 41, 1802, 1851, 2058, 2107,
	9, 32, 40, 41, 1802, 1851, 2058, 2107,
	10, 78, 110, 9, 32, 40, 41, 2058,
	2107, 9, 32, 40, 41, 2058, 2107, 48,
	57, 65, 90, 97, 122, 2058, 1920, 2175,
	9, 32, 40, 41, 2058, 2107, 2058, 1920,
	2175, 9, 32, 40, 41, 2058, 2107, 48,
	57, 68, 72, 77, 83, 87, 100, 104,
	109, 115, 119, 48, 57, 9, 32, 40,
	41, 2058, 2107, 48, 57, 78, 110, 9,
	32, 40, 41, 2058, 2107, 9, 32, 40,
	41, 2058, 2107, 48, 57, 65, 90, 97,
	122, 9, 32, 40, 41, 68, 72, 77,
	83, 87, 100, 104, 109, 115, 119, 2058,
	2107, 48, 57, 9, 32, 40, 41, 2058,
	2107, 48, 57, 68, 72, 77, 83, 87,
	100, 104, 109, 115, 119, 48, 57, 9,
	32, 40, 41, 2058, 2107, 48, 57, 2058,
	1920, 2175, 9, 32, 40, 41, 2058, 2107,
	10, 73, 79, 84, 105, 111, 116, 78,
	110, 67, 99, 76, 108, 85, 117, 68,
	100, 69, 101, 32, 59, 9, 10, 40,
	41, 9, 32, 40, 41, 2058, 2107, 9,
	32, 40, 41, 73, 105, 2058, 2107, 48,
	57, 65, 90, 97, 122, 2058, 1920, 2175,
	1802, 2058, 1664, 1919, 1920, 2175, 82, 114,
	73, 105, 71, 103, 73, 105, 78, 110,
	32, 59, 9, 10, 40, 41, 84, 116,
	76, 108, 32, 59, 9, 10, 40, 41,
	9, 32, 40, 41, 68, 72, 77, 83,
	87, 100, 104, 109, 115, 119, 2058, 2107,
	48, 57, 9, 32, 40, 41, 73, 105,
	2058, 2107, 48, 57, 65, 90, 97, 122,
	2058, 1920, 2175, 9, 32, 40, 41, 78,
	110, 1802, 1851, 2058, 2107, -128, 8, 11,
	58, 60, 127, 9, 32, 40, 41, 73,
	105, 2058, 2107, 48, 57, 65, 90, 97,
	122, 9, 32, 40, 41, 73, 105, 2058,
	2107, 48, 57, 65, 90, 97, 122, 2058,
	1920, 2175, 1801, 1824, 1832, 1833, 2057, 2058,
	2080, 2088, 2089, 2107, 1920, 2175, 1801, 1824,
	1832, 1833, 2057, 2058, 2080, 2088, 2089, 2107,
	1840, 1849, 1857, 1882, 1889, 1914, 1920, 2095,
	2096, 2105, 2106, 2175, 1801, 1824, 1832, 1833,
	1860, 1864, 1869, 1875, 1879, 1892, 1896, 1901,
	1907, 1911, 2057, 2058, 2080, 2088, 2089, 2107,
	2116, 2120, 2125, 2131, 2135, 2148, 2152, 2157,
	2163, 2167, 1840, 1849, 1920, 2095, 2096, 2105,
	2106, 2175, 1801, 1824, 1832, 1833, 2057, 2058,
	2080, 2088, 2089, 2107, 1840, 1849, 1857, 1882,
	1889, 1914, 1920, 2175, 1801, 1824, 1832, 1833,
	2057, 2058, 2080, 2088, 2089, 2107, 1840, 1849,
	1920, 2095, 2096, 2105, 2106, 2175, 1860, 1864,
	1869, 1875, 1879, 1892, 1896, 1901, 1907, 1911,
	2058, 2116, 2120, 2125, 2131, 2135, 2148, 2152,
	2157, 2163, 2167, 1840, 1849, 1920, 2095, 2096,
	2105, 2106, 2175, 1801, 1824, 1832, 1833, 2057,
	2058, 2080, 2088, 2089, 2107, 1840, 1849, 1920,
	2095, 2096, 2105, 2106, 2175, 266, 522, 1065,
	-128, 9, 11, 40, 42, 127, 10, 10,
	42, 46, 64, 92, 95, 45, 57, 65,
	90, 97, 122, 32, 42, 46, 59, 92,
	95, 9, 10, 40, 41, 45, 57, 65,
	90, 97, 122, 32, 42, 45, 59, 92,
	95, 9, 10, 40, 41, 47, 57, 65,
	90, 97, 122, 48, 57, 48, 57, 48,
	57, 32, 42, 46, 59, 92, 95, 9,
	10, 40, 41, 45, 57, 65, 90, 97,
	122, 32, 59, 9, 10, 40, 41, 32,
	59, 9, 10, 40, 41, 34, 92, 33,
	58, 60, 126, 32, 33, 59, 92, 9,
	10, 35, 39, 40, 41, 42, 126, 32,
	47, 48, 57, 58, 126, 48, 57, 48,
	57, 32, 33, 59, 92, 9, 10, 35,
	39, 40, 41, 42, 126, 9, 32, 34,
	59, 92, 1546, 33, 126, 9, 32, 34,
	59, 92, 1546, 33, 126, 32, 59, 9,
	10, 40, 41, 32, 47, 48, 57, 58,
	126, 48, 57, 48, 57, 9, 32, 34,
	59, 92, 1546, 33, 126, 9, 32, 40,
	41, 2058, 2107, 9, 32, 40, 41, 2058,
	2107, 48, 57, 9, 32, 40, 41, 68,
	72, 77, 83, 87, 100, 104, 109, 115,
	119, 1802, 1851, 2058, 2107, 48, 57, 9,
	32, 40, 41, 1802, 1851, 2058, 2107, 10,
	9, 32, 40, 41, 1802, 1851, 2058, 2107,
	48, 57, 68, 72, 77, 83, 87, 100,
	104, 109, 115, 119, 48, 57, 9, 32,
	40, 41, 1802, 1851, 2058, 2107, 48, 57,
	2058, 1920, 2175, 9, 32, 40, 41, 2058,
	2107, 9, 32, 40, 41, 42, 46, 92,
	95, 2058, 2107, 45, 57, 65, 90, 97,
	122, 42, 46, 92, 95, 45, 57, 65,
	90, 97, 122, 9, 32, 40, 41, 42,
	45, 92, 95, 1802, 1851, 2058, 2107, 47,
	57, 65, 90, 97, 122, 9, 32, 40,
	41, 1802, 1851, 2058, 2107, 10, 48, 57,
	48, 57, 48, 57, 42, 46, 92, 95,
	45, 57, 65, 90, 97, 122, 9, 32,
	40, 41, 1802, 1851, 2058, 2107, 2058, 1920,
	2175, 9, 32, 40, 41, 2058, 2107, 9,
	32, 40, 41, 2058, 2107, -128, 8, 11,
	58, 60, 127, 9, 32, 40, 41, 1802,
	1851, 2058, 2107, 9, 32, 40, 41, 42,
	46, 92, 95, 1802, 1851, 2058, 2107, 45,
	57, 65, 90, 97, 122, 42, 46, 92,
	95, 45, 57, 65, 90, 97, 122, 9,
	32, 40, 41, 42, 45, 92, 95, 1802,
	1851, 2058, 2107, 47, 57, 65, 90, 97,
	122, 9, 32, 40, 41, 1802, 1851, 2058,
	2107, 10, 48, 57, 48, 57, 48, 57,
	42, 46, 92, 95, 45, 57, 65, 90,
	97, 122, 9, 32, 40, 41, 1802, 1851,
	2058, 2107, 1802, 2058, 1664, 1919, 1920, 2175,
	9, 32, 40, 41, 42, 46, 92, 95,
	2058, 2107, 45, 57, 65, 90, 97, 122,
	2058, 1920, 2175, 2058, 1920, 2175, 43, 47,
	57, 65, 90, 97, 122, 43, 47, 57,
	65, 90, 97, 122, 43, 61, 47, 57,
	65, 90, 97, 122, 43, 61, 47, 57,
	65, 90, 97, 122, 9, 32, 40, 41,
	43, 3082, 3131, 3338, 3387, 3594, 3643, 47,
	57, 65, 90, 97, 122, 2058, 1920, 2175,
	61, 9, 32, 40, 41, 3082, 3131, 3338,
	3387, 3594, 3643, 9, 32, 40, 41, 65,
	67, 68, 69, 72, 73, 75, 76, 77,
	78, 79, 80, 82, 83, 84, 85, 90,
	97, 99, 100, 101, 104, 105, 107, 108,
	109, 110, 111, 112, 114, 115, 116, 117,
	122, 3082, 3131, 3338, 3387, 3594, 3643, 9,
	32, 40, 41, 65, 70, 80, 97, 102,
	112, 3082, 3131, 3338, 3387, 3594, 3643, 65,
	97, 65, 97, 9, 32, 40, 41, 3082,
	3131, 3338, 3387, 3594, 3643, 2058, 1920, 2175,
	65, 68, 69, 78, 83, 97, 100, 101,
	110, 115, 65, 97, 9, 32, 40, 41,
	3082, 3131, 3338, 3387, 3594, 3643, 78, 83,
	110, 115, 83, 115, 75, 107, 69, 101,
	89, 121, 9, 32, 40, 41, 3082, 3131,
	3338, 3387, 3594, 3643, 9, 32, 40, 41,
	3082, 3131, 3338, 3387, 3594, 3643, 82, 114,
	84, 116, 9, 32, 40, 41, 3082, 3131,
	3338, 3387, 3594, 3643, 65, 97, 77, 109,
	69, 101, 9, 32, 40, 41, 3082, 3131,
	3338, 3387, 3594, 3643, 89, 121, 78, 110,
	67, 99, 9, 32, 40, 41, 3082, 3131,
	3338, 3387, 3594, 3643, 72, 78, 83, 104,
	110, 115, 67, 99, 73, 105, 68, 100,
	9, 32, 40, 41, 3082, 3131, 3338, 3387,
	3594, 3643, 65, 83, 97, 115, 77, 109,
	69, 101, 9, 32, 40, 41, 3082, 3131,
	3338, 3387, 3594, 3643, 75, 107, 69, 101,
	89, 121, 9, 32, 40, 41, 3082, 3131,
	3338, 3387, 3594, 3643, 9, 32, 40, 41,
	3082, 3131, 3338, 3387, 3594, 3643, 85, 117,
	73, 105, 52, 54, 56, 9, 32, 40,
	41, 3082, 3131, 3338, 3387, 3594, 3643, 52,
	9, 32, 40, 41, 3082, 3131, 3338, 3387,
	3594, 3643, 73, 84, 105, 116, 78, 110,
	70, 102, 79, 111, 9, 32, 40, 41,
	3082, 3131, 3338, 3387, 3594, 3643, 84, 116,
	80, 112, 83, 115, 9, 32, 40, 41,
	3082, 3131, 3338, 3387, 3594, 3643, 80, 112,
	83, 115, 69, 101, 67, 99, 75, 107,
	69, 101, 89, 121, 9, 32, 40, 41,
	3082, 3131, 3338, 3387, 3594, 3643, 69, 88,
	101, 120, 89, 121, 9, 32, 40, 41,
	3082, 3131, 3338, 3387, 3594, 3643, 9, 32,
	40, 41, 3082, 3131, 3338, 3387, 3594, 3643,
	51, 54, 79, 80, 111, 112, 50, 9,
	32, 40, 41, 3082, 3131, 3338, 3387, 3594,
	3643, 52, 9, 32, 40, 41, 3082, 3131,
	3338, 3387, 3594, 3643, 67, 99, 9, 32,
	40, 41, 3082, 3131, 3338, 3387, 3594, 3643,
	9, 32, 40, 41, 3082, 3131, 3338, 3387,
	3594, 3643, 73, 88, 105, 120, 78, 110,
	70, 102, 79, 111, 9, 32, 40, 41,
	3082, 3131, 3338, 3387, 3594, 3643, 9, 32,
	40, 41, 3082, 3131, 3338, 3387, 3594, 3643,
	65, 73, 83, 97, 105, 115, 80, 112,
	84, 116, 82, 114, 9, 32, 40, 41,
	3082, 3131, 3338, 3387, 3594, 3643, 68, 100,
	9, 32, 40, 41, 3082, 3131, 3338, 3387,
	3594, 3643, 9, 32, 40, 41, 69, 101,
	3082, 3131, 3338, 3387, 3594, 3643, 67, 99,
	9, 32, 40, 41, 51, 3082, 3131, 3338,
	3387, 3594, 3643, 9, 32, 40, 41, 80,
	112, 3082, 3131, 3338, 3387, 3594, 3643, 65,
	97, 82, 114, 65, 97, 77, 109, 9,
	32, 40, 41, 3082, 3131, 3338, 3387, 3594,
	3643, 80, 112, 69, 101, 78, 110, 80,
	112, 71, 103, 80, 112, 75, 107, 69,
	101, 89, 121, 9, 32, 40, 41, 3082,
	3131, 3338, 3387, 3594, 3643, 84, 116, 82,
	114, 9, 32, 40, 41, 3082, 3131, 3338,
	3387, 3594, 3643, 80, 82, 84, 112, 114,
	116, 9, 32, 40, 41, 3082, 3131, 3338,
	3387, 3594, 3643, 83, 115, 73, 105, 71,
	103, 9, 32, 40, 41, 3082, 3131, 3338,
	3387, 3594, 3643, 9, 32, 40, 41, 3082,
	3131, 3338, 3387, 3594, 3643, 77, 79, 80,
	82, 83, 86, 109, 111, 112, 114, 115,
	118, 73, 105, 77, 109, 69, 101, 65,
	97, 9, 32, 40, 41, 3082, 3131, 3338,
	3387, 3594, 3643, 65, 97, 9, 32, 40,
	41, 3082, 3131, 3338, 3387, 3594, 3643, 70,
	102, 9, 32, 40, 41, 3082, 3131, 3338,
	3387, 3594, 3643, 86, 118, 9, 32, 40,
	41, 3082, 3131, 3338, 3387, 3594, 3643, 72,
	104, 70, 102, 80, 112, 9, 32, 40,
	41, 3082, 3131, 3338, 3387, 3594, 3643, 67,
	99, 66, 98, 9, 32, 40, 41, 3082,
	3131, 3338, 3387, 3594, 3643, 76, 88, 89,
	108, 120, 121, 83, 115, 65, 97, 9,
	32, 40, 41, 3082, 3131, 3338, 3387, 3594,
	3643, 84, 116, 9, 32, 40, 41, 3082,
	3131, 3338, 3387, 3594, 3643, 80, 112, 69,
	101, 48, 57, 9, 32, 40, 41, 3082,
	3131, 3338, 3387, 3594, 3643, 48, 57, 82,
	114, 73, 105, 9, 32, 40, 41, 3082,
	3131, 3338, 3387, 3594, 3643, 79, 111, 78,
	110, 69, 101, 77, 109, 68, 100, 9,
	32, 40, 41, 3082, 3131, 3338, 3387, 3594,
	3643, 83, 115, 68, 100, 66, 98, 9,
	32, 40, 41, 3082, 3131, 3338, 3387, 3594,
	3643, 76, 108, 9, 32, 40, 41, 3082,
	3131, 3338, 3387, 3594, 3643, 9, 32, 40,
	41, 2058, 2107, 9, 32, 40, 41, 2058,
	2107, 48, 57, 9, 32, 40, 41, 2058,
	2107, 48, 57, 9, 32, 40, 41, 2058,
	2107, 48, 57, 65, 70, 97, 102, 48,
	57, 65, 70, 97, 102, 9, 32, 40,
	41, 3082, 3131, 3338, 3387, 3594, 3643, 48,
	57, 65, 70, 97, 102, 2058, 1920, 2175,
	2058, 1920, 2175, 2058, 1920, 2175, 9, 32,
	40, 41, 2058, 2107, 9, 32, 40, 41,
	48, 2058, 2107, 49, 57, 9, 32, 40,
	41, 1802, 1851, 2058, 2107, 48, 57, 9,
	32, 40, 41, 2058, 2107, 48, 57, 65,
	70, 97, 102, 48, 57, 65, 70, 97,
	102, 9, 32, 40, 41, 3082, 3131, 3338,
	3387, 3594, 3643, 48, 57, 65, 70, 97,
	102, 2058, 1920, 2175, 2058, 1920, 2175, 9,
	32, 40, 41, 2058, 2107, 48, 57, 2058,
	1920, 2175, 97, 101, 105, 107, 110, 112,
	108, 112, 110, 32, 34, 44, 59, 9,
	10, 40, 41, 99, 104, 32, 34, 44,
	59, 9, 10, 40, 41, 112, 118, 52,
	54, 104, 105, 110, 116, 32, 34, 44,
	59, 9, 10, 40, 41, 104, 105, 110,
	116, 32, 34, 44, 59, 9, 10, 40,
	41, 101, 121, 48, 57, 32, 34, 44,
	59, 9, 10, 40, 41, 48, 57, 111,
	45, 100, 101, 102, 97, 117, 108, 116,
	45, 97, 108, 112, 110, 32, 34, 44,
	59, 9, 10, 40, 41, 111, 114, 116,
	32, 34, 44, 59, 9, 10, 40, 41,
	9, 32, 40, 41, 3082, 3131, 3338, 3387,
	3594, 3643, 9, 32, 40, 41, 97, 101,
	105, 107, 109, 110, 112, 3082, 3131, 3338,
	3387, 3594, 3643, 108, 112, 110, 61, 32,
	34, 59, 9, 10, 40, 41, 9, 32,
	40, 41, 3082, 3131, 3338, 3387, 3594, 3643,
	2058, 1920, 2175, 99, 104, 61, 34, 43,
	47, 57, 65, 90, 97, 122, 43, 47,
	57, 65, 90, 97, 122, 43, 47, 57,
	65, 90, 97, 122, 43, 61, 47, 57,
	65, 90, 97, 122, 43, 61, 47, 57,
	65, 90, 97, 122, 34, 43, 47, 57,
	65, 90, 97, 122, 9, 32, 40, 41,
	3082, 3131, 3338, 3387, 3594, 3643, 61, 43,
	47, 57, 65, 90, 97, 122, 43, 61,
	47, 57, 65, 90, 97, 122, 43, 61,
	47, 57, 65, 90, 97, 122, 9, 32,
	40, 41, 43, 3082, 3131, 3338, 3387, 3594,
	3643, 47, 57, 65, 90, 97, 122, 61,
	112, 118, 52, 54, 104, 105, 110, 116,
	61, 34, 46, 48, 57, 46, 48, 57,
	34, 44, 46, 48, 57, 46, 48, 57,
	9, 32, 40, 41, 44, 46, 3082, 3131,
	3338, 3387, 3594, 3643, 48, 57, 46, 48,
	57, 104, 105, 110, 116, 61, 34, 46,
	48, 58, 65, 70, 97, 102, 46, 48,
	58, 65, 70, 97, 102, 34, 44, 46,
	48, 58, 65, 70, 97, 102, 46, 48,
	58, 65, 70, 97, 102, 9, 32, 40,
	41, 44, 46, 3082, 3131, 3338, 3387, 3594,
	3643, 48, 58, 65, 70, 97, 102, 46,
	48, 58, 65, 70, 97, 102, 101, 121,
	48, 57, 9, 32, 40, 41, 61, 3082,
	3131, 3338, 3387, 3594, 3643, 48, 57, 32,
	59, 9, 10, 40, 41, 9, 32, 40,
	41, 3082, 3131, 3338, 3387, 3594, 3643, 97,
	110, 100, 97, 116, 111, 114, 121, 61,
	34, 65, 90, 97, 122, 65, 90, 97,
	122, 34, 44, 65, 90, 97, 122, 9,
	32, 40, 41, 44, 3082, 3131, 3338, 3387,
	3594, 3643, 65, 90, 97, 122, 111, 45,
	100, 101, 102, 97, 117, 108, 116, 45,
	97, 108, 112, 110, 9, 32, 40, 41,
	3082, 3131, 3338, 3387, 3594, 3643, 111, 114,
	116, 61, 34, 48, 57, 48, 57, 34,
	48, 57, 9, 32, 40, 41, 3082, 3131,
	3338, 3387, 3594, 3643, 48, 57, 9, 32,
	40, 41, 3082, 3131, 3338, 3387, 3594, 3643,
	-128, 8, 11, 58, 60, 127, 34, 68,
	69, 73, 80, 82, 100, 101, 105, 112,
	114, 48, 57, 32, 59, 9, 10, 40,
	41, 48, 57, 72, 83, 104, 115, 32,
	59, 9, 10, 40, 41, 65, 97, 32,
	45, 59, 9, 10, 40, 41, 78, 110,
	83, 115, 69, 101, 67, 99, 51, 45,
	83, 115, 72, 104, 65, 97, 49, 32,
	59, 9, 10, 40, 41, 67, 68, 99,
	100, 67, 68, 99, 100, 45, 71, 103,
	79, 111, 83, 115, 84, 116, 32, 59,
	9, 10, 40, 41, 83, 115, 65, 97,
	80, 112, 50, 51, 53, 54, 83, 115,
	72, 104, 65, 97, 50, 53, 54, 32,
	59, 9, 10, 40, 41, 56, 52, 83,
	115, 72, 104, 65, 97, 51, 56, 52,
	32, 59, 9, 10, 40, 41, 50, 52,
	53, 53, 49, 57, 32, 59, 9, 10,
	40, 41, 52, 56, 32, 59, 9, 10,
	40, 41, 78, 110, 68, 100, 73, 105,
	82, 114, 69, 101, 67, 99, 84, 116,
	32, 59, 9, 10, 40, 41, 82, 114,
	73, 105, 86, 118, 65, 97, 84, 116,
	69, 101, 68, 79, 100, 111, 78, 110,
	83, 115, 32, 59, 9, 10, 40, 41,
	73, 105, 68, 100, 32, 59, 9, 10,
	40, 41, 83, 115, 65, 97, 77, 83,
	109, 115, 68, 100, 53, 32, 59, 9,
	10, 40, 41, 72, 104, 65, 97, 49,
	50, 53, 32, 45, 59, 9, 10, 40,
	41, 78, 110, 83, 115, 69, 101, 67,
	99, 51, 45, 83, 115, 72, 104, 65,
	97, 49, 32, 59, 9, 10, 40, 41,
	53, 54, 32, 59, 9, 10, 40, 41,
	49, 50, 32, 59, 9, 10, 40, 41,
	65, 73, 79, 80, 83, 85, 97, 105,
	111, 112, 115, 117, 48, 57, 32, 59,
	9, 10, 40, 41, 48, 57, 67, 99,
	80, 112, 75, 107, 73, 105, 88, 120,
	32, 59, 9, 10, 40, 41, 65, 80,
	83, 97, 112, 115, 67, 99, 80, 112,
	75, 107, 73, 105, 88, 120, 32, 59,
	9, 10, 40, 41, 71, 75, 103, 107,
	80, 112, 32, 59, 9, 10, 40, 41,
	73, 105, 88, 120, 32, 59, 9, 10,
	40, 41, 80, 112, 75, 107, 73, 105,
	32, 59, 9, 10, 40, 41, 73, 105,
	68, 100, 32, 59, 9, 10, 40, 41,
	71, 75, 103, 107, 80, 112, 32, 59,
	9, 10, 40, 41, 73, 105, 88, 120,
	32, 59, 9, 10, 40, 41, 80, 112,
	75, 107, 73, 105, 32, 59, 9, 10,
	40, 41, 82, 114, 73, 105, 32, 59,
	9, 10, 40, 41, 46, 48, 57, 32,
	46, 59, 9, 10, 40, 41, 48, 57,
	42, 92, 95, 45, 57, 64, 90, 97,
	122, 32, 59, 9, 10, 40, 41, 42,
	92, 95, 45, 57, 64, 90, 97, 122,
	9, 32, 40, 41, 2058, 2107, 9, 32,
	40, 41, 42, 92, 95, 2058, 2107, 45,
	57, 64, 90, 97, 122, 9, 32, 40,
	41, 2058, 2107, 9, 32, 40, 41, 2058,
	2107, 48, 57, 9, 32, 40, 41, 2058,
	2107, 48, 57, 9, 32, 40, 41, 2058,
	2107, 48, 57, 9, 32, 40, 41, 68,
	72, 77, 83, 87, 100, 104, 109, 115,
	119, 2058, 2107, 48, 57, 9, 32, 40,
	41, 2058, 2107, 48, 57, 9, 32, 40,
	41, 68, 72, 77, 83, 87, 100, 104,
	109, 115, 119, 2058, 2107, 48, 57, 9,
	32, 40, 41, 2058, 2107, 48, 57, 9,
	32, 40, 41, 68, 72, 77, 83, 87,
	100, 104, 109, 115, 119, 2058, 2107, 48,
	57, 9, 32, 40, 41, 2058, 2107, 48,
	57, 32, 59, 68, 72, 77, 83, 87,
	100, 104, 109, 115, 119, 9, 10, 40,
	41, 48, 57, 32, 59, 9, 10, 40,
	41, 48, 57, 68, 72, 77, 83, 87,
	100, 104, 109, 115, 119, 48, 57, 32,
	59, 9, 10, 40, 41, 48, 57, 2058,
	1920, 2175, 9, 32, 40, 41, 2058, 2107,
	48, 57, 68, 72, 77, 83, 87, 100,
	104, 109, 115, 119, 48, 57, 9, 32,
	40, 41, 2058, 2107, 48, 57, 2058, 1920,
	2175, 9, 32, 40, 41, 2058, 2107, 48,
	57, 68, 72, 77, 83, 87, 100, 104,
	109, 115, 119, 48, 57, 9, 32, 40,
	41, 2058, 2107, 48, 57, 2058, 1920, 2175,
	9, 32, 40, 41, 2058, 2107, 48, 57,
	68, 72, 77, 83, 87, 100, 104, 109,
	115, 119, 48, 57, 9, 32, 40, 41,
	2058, 2107, 48, 57, 2058, 1920, 2175, 2058,
	1920, 2175, 2058, 1920, 2175, 32, 59, 9,
	10, 40, 41, 9, 32, 40, 41, 2058,
	2107, 9, 32, 40, 41, 2058, 2107, -128,
	8, 11, 58, 60, 127, 32, 59, 9,
	10, 40, 41, 2058, 1920, 2175, 42, 92,
	95, 45, 57, 64, 90, 97, 122, 9,
	32, 40, 41, 2058, 2107, 9, 32, 40,
	41, 42, 92, 95, 2058, 2107, 45, 57,
	64, 90, 97, 122, 32, 59, 9, 10,
	40, 41, 2058, 1920, 2175, 48, 57, 9,
	32, 40, 41, 2058, 2107, 48, 57, 9,
	32, 40, 41, 42, 92, 95, 2058, 2107,
	45, 57, 64, 90, 97, 122, 32, 59,
	9, 10, 40, 41, 2058, 1920, 2175, 32,
	59, 9, 10, 40, 41, 9, 32, 40,
	41, 3082, 3131, 3338, 3387, 3594, 3643, 9,
	32, 40, 41, 3082, 3131, 3338, 3387, 3594,
	3643, -128, 8, 11, 58, 60, 127, 2058,
	1920, 2175, 46, 48, 58, 65, 70, 97,
	102, 32, 46, 59, 9, 10, 40, 41,
	48, 58, 65, 70, 97, 102, 48, 57,
	9, 32, 40, 41, 2058, 2107, 48, 57,
	9, 32, 40, 41, 78, 83, 2058, 2107,
	48, 57, 9, 32, 40, 41, 2058, 2107,
	48, 57, 9, 32, 40, 41, 78, 83,
	2058, 2107, 48, 57, 9, 32, 40, 41,
	46, 2058, 2107, 48, 57, 9, 32, 40,
	41, 78, 83, 2058, 2107, 9, 32, 40,
	41, 2058, 2107, 9, 32, 40, 41, 2058,
	2107, 48, 57, 9, 32, 40, 41, 2058,
	2107, 48, 57, 9, 32, 40, 41, 69,
	87, 2058, 2107, 48, 57, 9, 32, 40,
	41, 2058, 2107, 48, 57, 9, 32, 40,
	41, 69, 87, 2058, 2107, 48, 57, 9,
	32, 40, 41, 46, 2058, 2107, 48, 57,
	9, 32, 40, 41, 69, 87, 2058, 2107,
	9, 32, 40, 41, 2058, 2107, 9, 32,
	40, 41, 45, 2058, 2107, 48, 57, 48,
	57, 9, 32, 40, 41, 46, 109, 3082,
	3131, 3338, 3387, 3594, 3643, 48, 57, 9,
	32, 40, 41, 3082, 3131, 3338, 3387, 3594,
	3643, 48, 57, 9, 32, 40, 41, 46,
	109, 3082, 3131, 3338, 3387, 3594, 3643, 48,
	57, 9, 32, 40, 41, 3082, 3131, 3338,
	3387, 3594, 3643, 48, 57, 9, 32, 40,
	41, 46, 109, 3082, 3131, 3338, 3387, 3594,
	3643, 48, 57, 9, 32, 40, 41, 3082,
	3131, 3338, 3387, 3594, 3643, 48, 57, 9,
	32, 40, 41, 46, 109, 3082, 3131, 3338,
	3387, 3594, 3643, 48, 57, 9, 32, 40,
	41, 3082, 3131, 3338, 3387, 3594, 3643, 2058,
	1920, 2175, 9, 32, 40, 41, 109, 3082,
	3131, 3338, 3387, 3594, 3643, 48, 57, 9,
	32, 40, 41, 109, 3082, 3131, 3338, 3387,
	3594, 3643, 48, 57, 2058, 1920, 2175, 9,
	32, 40, 41, 109, 3082, 3131, 3338, 3387,
	3594, 3643, 48, 57, 9, 32, 40, 41,
	109, 3082, 3131, 3338, 3387, 3594, 3643, 48,
	57, 9, 32, 40, 41, 3082, 3131, 3338,
	3387, 3594, 3643, 2058, 1920, 2175, 9, 32,
	40, 41, 109, 3082, 3131, 3338, 3387, 3594,
	3643, 48, 57, 9, 32, 40, 41, 109,
	3082, 3131, 3338, 3387, 3594, 3643, 48, 57,
	9, 32, 40, 41, 3082, 3131, 3338, 3387,
	3594, 3643, 2058, 1920, 2175, 9, 32, 40,
	41, 109, 3082, 3131, 3338, 3387, 3594, 3643,
	48, 57, 9, 32, 40, 41, 109, 3082,
	3131, 3338, 3387, 3594, 3643, 48, 57, 9,
	32, 40, 41, 3082, 3131, 3338, 3387, 3594,
	3643, 2058, 1920, 2175, 9, 32, 40, 41,
	2058, 2107, 2058, 1920, 2175, 9, 32, 40,
	41, 2058, 2107, 48, 57, 9, 32, 40,
	41, 2058, 2107, 48, 57, 2058, 1920, 2175,
	2058, 1920, 2175, 2058, 1920, 2175, 9, 32,
	40, 41, 2058, 2107, 2058, 1920, 2175, 9,
	32, 40, 41, 2058, 2107, 48, 57, 9,
	32, 40, 41, 2058, 2107, 48, 57, 2058,
	1920, 2175, 2058, 1920, 2175, 48, 57, 9,
	32, 40, 41, 2058, 2107, 48, 57, 9,
	32, 40, 41, 2058, 2107, 48, 57, 9,
	32, 40, 41, 2058, 2107, 48, 57, 9,
	32, 40, 41, 2058, 2107, 48, 57, 9,
	32, 40, 41, 2058, 2107, 48, 57, 9,
	32, 40, 41, 42, 92, 95, 2058, 2107,
	45, 57, 64, 90, 97, 122, 32, 59,
	9, 10, 40, 41, 2058, 1920, 2175, 2058,
	1920, 2175, 2058, 1920, 2175, 48, 57, 9,
	32, 40, 41, 2058, 2107, 48, 57, 9,
	32, 40, 41, 2058, 2107, 48, 57, 9,
	32, 40, 41, 2058, 2107, 48, 57, 9,
	32, 40, 41, 2058, 2107, -128, 8, 11,
	58, 60, 127, 9, 32, 40, 41, 2058,
	2107, 9, 32, 40, 41, 2058, 2107, -128,
	8, 11, 58, 60, 127, 9, 32, 40,
	41, 2058, 2107, 9, 32, 40, 41, 2058,
	2107, -128, 8, 11, 58, 60, 127, 9,
	32, 40, 41, 2058, 2107, 9, 32, 40,
	41, 42, 92, 95, 2058, 2107, 45, 57,
	64, 90, 97, 122, 32, 59, 9, 10,
	40, 41, 2058, 1920, 2175, 2058, 1920, 2175,
	2058, 1920, 2175, 2058, 1920, 2175, 2058, 1920,
	2175, 48, 57, 65, 90, 97, 122, 9,
	32, 40, 41, 2058, 2107, 9, 32, 40,
	41, 2058, 2107, 48, 57, 9, 32, 40,
	41, 2058, 2107, 48, 57, 9, 32, 40,
	41, 2058, 2107, 48, 57, 65, 90, 97,
	122, 9, 32, 40, 41, 2058, 2107, 9,
	32, 40, 41, 43, 2058, 2107, 47, 57,
	65, 90, 97, 122, 2570, 2619, 2058, 1920,
	2175, 2058, 1920, 2175, 2058, 1920, 2175, 9,
	32, 33, 40, 41, 49, 50, 3082, 3131,
	3338, 3387, 3594, 3643, 49, 50, 58, 46,
	48, 57, 47, 46, 57, 48, 57, 9,
	32, 40, 41, 3082, 3131, 3338, 3387, 3594,
	3643, 48, 57, 2058, 1920, 2175, 58, 46,
	48, 58, 65, 70, 97, 102, 47, 46,
	58, 65, 70, 97, 102, 48, 57, 9,
	32, 40, 41, 2058, 2107, 48, 57, 9,
	32, 40, 41, 2058, 2107, 48, 57, 65,
	90, 97, 122, 9, 32, 40, 41, 2058,
	2107, 9, 32, 40, 41, 2058, 2107, 48,
	57, 9, 32, 40, 41, 2058, 2107, 48,
	57, 9, 32, 40, 41, 2058, 2107, 48,
	57, 65, 70, 97, 102, 48, 57, 65,
	70, 97, 102, 9, 32, 40, 41, 3082,
	3131, 3338, 3387, 3594, 3643, 48, 57, 65,
	70, 97, 102, 2058, 1920, 2175, 2058, 1920,
	2175, 2058, 1920, 2175, 2058, 1920, 2175, 48,
	57, 9, 32, 40, 41, 2058, 2107, 48,
	57, 9, 32, 40, 41, 2058, 2107, 48,
	57, 9, 32, 40, 41, 2058, 2107, 48,
	57, 9, 32, 40, 41, 2058, 2107, 48,
	57, 65, 70, 97, 102, 48, 57, 65,
	70, 97, 102, 9, 32, 40, 41, 3082,
	3131, 3338, 3387, 3594, 3643, 48, 57, 65,
	70, 97, 102, 2058, 1920, 2175, 2058, 1920,
	2175, 2058, 1920, 2175, 48, 57, 9, 32,
	40, 41, 2058, 2107, 48, 57, 9, 32,
	40, 41, 48, 49, 50, 51, 2058, 2107,
	9, 32, 40, 41, 2058, 2107, 9, 32,
	40, 41, 2058, 2107, 48, 57, 9, 32,
	40, 41, 2058, 2107, 48, 57, 9, 32,
	40, 41, 46, 2058, 2107, 7177, 7200, 7208,
	7209, 7433, 7456, 7464, 7465, 7689, 7712, 7720,
	7721, 10506, 10555, 10762, 10811, 11274, 11323, 11530,
	11579, 11786, 11835, 12298, 12347, 12554, 12603, 12810,
	12859, 13322, 13371, 13578, 13627, 13834, 13883, 4105,
	4128, 4136, 4137, 4139, 5130, 5179, 4143, 4153,
	4161, 4186, 4193, 4218, 2570, 2619, 5130, 4992,
	5247, 5641, 5664, 5672, 5673, 14602, 14651, 14858,
	14907, 15370, 15419, 15626, 15675, 15882, 15931, 6666,
	6528, 6783, 4139, 7177, 7200, 7208, 7209, 7433,
	7456, 7464, 7465, 7689, 7712, 7720, 7721, 10506,
	10555, 10762, 10811, 11274, 11323, 11530, 11579, 11786,
	11835, 12298, 12347, 12554, 12603, 12810, 12859, 13322,
	13371, 13578, 13627, 13834, 13883, 4143, 4153, 4161,
	4186, 4193, 4218, 8714, 9226, 9738, 8576, 8831,
	9088, 9343, 9600, 9855, 2058, 1920, 2175, 2058,
	1920, 2175, 9, 32, 40, 41, 2058, 2107,
	9, 32, 40, 41, 2058, 2107, 48, 57,
	9, 32, 40, 41, 2058, 2107, 48, 57,
	9, 32, 40, 41, 46, 2058, 2107, 48,
	57, 46, 7177, 7200, 7208, 7209, 7433, 7456,
	7464, 7465, 7689, 7712, 7720, 7721, 10506, 10555,
	10762, 10811, 11274, 11323, 11530, 11579, 11786, 11835,
	12298, 12347, 12554, 12603, 12810, 12859, 13322, 13371,
	13578, 13627, 13834, 13883, 48, 57, 2058, 1920,
	2175, 2058, 1920, 2175, 9, 32, 40, 41,
	2058, 2107, 9, 32, 40, 41, 2058, 2107,
	48, 57, 9, 32, 40, 41, 2058, 2107,
	48, 57, 9, 32, 40, 41, 46, 2058,
	2107, 48, 58, 65, 70, 97, 102, 46,
	7177, 7200, 7208, 7209, 7433, 7456, 7464, 7465,
	7689, 7712, 7720, 7721, 10506, 10555, 10762, 10811,
	11274, 11323, 11530, 11579, 11786, 11835, 12298, 12347,
	12554, 12603, 12810, 12859, 13322, 13371, 13578, 13627,
	13834, 13883, 48, 58, 65, 70, 97, 102,
	2058, 1920, 2175, 2058, 1920, 2175, 9, 32,
	40, 41, 2058, 2107, 9, 32, 40, 41,
	2058, 2107, 48, 57, 9, 32, 40, 41,
	2058, 2107, 48, 57, 9, 32, 40, 41,
	42, 92, 95, 2058, 2107, 45, 57, 64,
	90, 97, 122, 7177, 7200, 7208, 7209, 7433,
	7456, 7464, 7465, 7689, 7712, 7720, 7721, 10506,
	10555, 10762, 10811, 11274, 11323, 11530, 11579, 11786,
	11835, 12298, 12347, 12554, 12603, 12810, 12859, 13322,
	13371, 13578, 13627, 13834, 13883, 2058, 1920, 2175,
	2058, 1920, 2175, 2058, 1920, 2175, 65, 67,
	68, 69, 72, 73, 75, 76, 77, 78,
	79, 80, 82, 83, 84, 85, 90, 97,
	99, 100, 101, 104, 105, 107, 108, 109,
	110, 111, 112, 114, 115, 116, 117, 122,
	9, 32, 40, 41, 65, 70, 80, 97,
	102, 112, 2058, 2107, 9, 32, 40, 41,
	2058, 2107, 48, 57, 65, 90, 97, 122,
	9, 32, 40, 41, 2058, 2107, 9, 32,
	40, 41, 2058, 2107, 48, 57, 9, 32,
	40, 41, 2058, 2107, 48, 57, 9, 32,
	40, 41, 2058, 2107, 48, 57, 9, 32,
	40, 41, 2058, 2107, 48, 57, 9, 32,
	40, 41, 2058, 2107, 48, 57, 9, 32,
	40, 41, 2058, 2107, 48, 57, 9, 32,
	40, 41, 2058, 2107, 48, 57, 9, 32,
	40, 41, 2058, 2107, 48, 57, 9, 32,
	40, 41, 2058, 2107, 48, 57, 9, 32,
	40, 41, 2058, 2107, 48, 57, 9, 32,
	40, 41, 42, 92, 95, 2058, 2107, 45,
	57, 64, 90, 97, 122, 9, 32, 40,
	41, 2058, 2107, 9, 32, 40, 41, 43,
	2058, 2107, 47, 57, 65, 90, 97, 122,
	2570, 2619, 2058, 1920, 2175, 2058, 1920, 2175,
	2058, 1920, 2175, 2058, 1920, 2175, 2058, 1920,
	2175, 2058, 1920, 2175, 2058, 1920, 2175, 2058,
	1920, 2175, 65, 97, 65, 97, 9, 32,
	40, 41, 2058, 2107, 83, 115, 68, 100,
	66, 98, 9, 32, 40, 41, 2058, 2107,
	76, 108, 9, 32, 40, 41, 2058, 2107,
	65, 68, 69, 78, 83, 97, 100, 101,
	110, 115, 65, 97, 9, 32, 40, 41,
	2058, 2107, 78, 83, 110, 115, 83, 115,
	75, 107, 69, 101, 89, 121, 9, 32,
	40, 41, 2058, 2107, 9, 32, 40, 41,
	2058, 2107, 82, 114, 84, 116, 9, 32,
	40, 41, 2058, 2107, 65, 97, 77, 109,
	69, 101, 9, 32, 40, 41, 2058, 2107,
	89, 121, 78, 110, 67, 99, 9, 32,
	40, 41, 2058, 2107, 72, 78, 83, 104,
	110, 115, 67, 99, 73, 105, 68, 100,
	9, 32, 40, 41, 2058, 2107, 65, 83,
	97, 115, 77, 109, 69, 101, 9, 32,
	40, 41, 2058, 2107, 75, 107, 69, 101,
	89, 121, 9, 32, 40, 41, 2058, 2107,
	9, 32, 40, 41, 2058, 2107, 85, 117,
	73, 105, 52, 54, 56, 9, 32, 40,
	41, 2058, 2107, 52, 9, 32, 40, 41,
	2058, 2107, 73, 84, 105, 116, 78, 110,
	70, 102, 79, 111, 9, 32, 40, 41,
	2058, 2107, 84, 116, 80, 112, 83, 115,
	9, 32, 40, 41, 2058, 2107, 80, 112,
	83, 115, 69, 101, 67, 99, 75, 107,
	69, 101, 89, 121, 9, 32, 40, 41,
	2058, 2107, 69, 88, 101, 120, 89, 121,
	9, 32, 40, 41, 2058, 2107, 9, 32,
	40, 41, 2058, 2107, 51, 54, 79, 80,
	111, 112, 50, 9, 32, 40, 41, 2058,
	2107, 52, 9, 32, 40, 41, 2058, 2107,
	67, 99, 9, 32, 40, 41, 2058, 2107,
	9, 32, 40, 41, 2058, 2107, 73, 88,
	105, 120, 78, 110, 70, 102, 79, 111,
	9, 32, 40, 41, 2058, 2107, 9, 32,
	40, 41, 2058, 2107, 65, 73, 83, 97,
	105, 115, 80, 112, 84, 116, 82, 114,
	9, 32, 40, 41, 2058, 2107, 68, 100,
	9, 32, 40, 41, 2058, 2107, 9, 32,
	40, 41, 69, 101, 2058, 2107, 67, 99,
	9, 32, 40, 41, 51, 2058, 2107, 9,
	32, 40, 41, 80, 112, 2058, 2107, 65,
	97, 82, 114, 65, 97, 77, 109, 9,
	32, 40, 41, 2058, 2107, 80, 112, 69,
	101, 78, 110, 80, 112, 71, 103, 80,
	112, 75, 107, 69, 101, 89, 121, 9,
	32, 40, 41, 2058, 2107, 84, 116, 82,
	114, 9, 32, 40, 41, 2058, 2107, 80,
	82, 84, 112, 114, 116, 9, 32, 40,
	41, 2058, 2107, 83, 115, 73, 105, 71,
	103, 9, 32, 40, 41, 2058, 2107, 9,
	32, 40, 41, 2058, 2107, 77, 79, 80,
	82, 83, 86, 109, 111, 112, 114, 115,
	118, 73, 105, 77, 109, 69, 101, 65,
	97, 9, 32, 40, 41, 2058, 2107, 65,
	97, 9, 32, 40, 41, 2058, 2107, 70,
	102, 9, 32, 40, 41, 2058, 2107, 86,
	118, 9, 32, 40, 41, 2058, 2107, 72,
	104, 70, 102, 80, 112, 9, 32, 40,
	41, 2058, 2107, 67, 99, 66, 98, 9,
	32, 40, 41, 2058, 2107, 76, 88, 89,
	108, 120, 121, 83, 115, 65, 97, 9,
	32, 40, 41, 2058, 2107, 84, 116, 9,
	32, 40, 41, 2058, 2107, 80, 112, 69,
	101, 48, 57, 9, 32, 40, 41, 2058,
	2107, 48, 57, 82, 114, 73, 105, 9,
	32, 40, 41, 2058, 2107, 79, 111, 78,
	110, 69, 101, 77, 109, 68, 100, 9,
	32, 40, 41, 2058, 2107, 42, 92, 95,
	45, 57, 64, 90, 97, 122, 32, 59,
	9, 10, 40, 41, 32, 59, 9, 10,
	40, 41, 48, 57, 9, 32, 40, 41,
	2058, 2107, 48, 57, 9, 32, 40, 41,
	2058, 2107, 48, 57, 9, 32, 40, 41,
	2058, 2107, 48, 57, 9, 32, 40, 41,
	2058, 2107, 48, 57, 65, 90, 97, 122,
	9, 32, 40, 41, 2058, 2107, 9, 32,
	40, 41, 43, 2058, 2107, 47, 57, 65,
	90, 97, 122, 2570, 2619, 2058, 1920, 2175,
	2058, 1920, 2175, 2058, 1920, 2175, 43, 47,
	57, 65, 90, 97, 122, 2570, 2619, 48,
	57, 9, 32, 40, 41, 2058, 2107, 48,
	57, 9, 32, 40, 41, 2058, 2107, 48,
	57, 9, 32, 40, 41, 2058, 2107, 48,
	57, 9, 32, 40, 41, 2058, 2107, 48,
	57, 9, 32, 40, 41, 2058, 2107, 48,
	57, 9, 32, 40, 41, 45, 2058, 2107,
	48, 57, 65, 70, 97, 102, 9, 32,
	40, 41, 2058, 2107, 9, 32, 40, 41,
	2058, 2107, 48, 57, 65, 86, 97, 118,
	48, 57, 65, 86, 97, 118, 61, 48,
	57, 65, 86, 97, 118, 48, 57, 65,
	86, 97, 118, 61, 48, 57, 65, 86,
	97, 118, 61, 48, 57, 65, 86, 97,
	118, 48, 57, 65, 86, 97, 118, 61,
	48, 57, 65, 86, 97, 118, 32, 59,
	9, 10, 40, 41, 48, 57, 65, 86,
	97, 118, 32, 59, 9, 10, 40, 41,
	61, 61, 61, 61, 61, 2058, 1920, 2175,
	48, 57, 65, 70, 97, 102, 9, 32,
	40, 41, 2058, 2107, 48, 57, 65, 70,
	97, 102, 2058, 1920, 2175, 2058, 1920, 2175,
	2058, 1920, 2175, 48, 57, 9, 32, 40,
	41, 2058, 2107, 48, 57, 9, 32, 40,
	41, 2058, 2107, 48, 57, 9, 32, 40,
	41, 2058, 2107, 48, 57, 9, 32, 40,
	41, 2058, 2107, 48, 57, 9, 32, 40,
	41, 2058, 2107, 48, 57, 9, 32, 40,
	41, 45, 2058, 2107, 48, 57, 65, 70,
	97, 102, 32, 59, 9, 10, 40, 41,
	48, 57, 65, 70, 97, 102, 32, 59,
	9, 10, 40, 41, 48, 57, 65, 70,
	97, 102, 2058, 1920, 2175, 2058, 1920, 2175,
	2058, 1920, 2175, 48, 57, 9, 32, 40,
	41, 2058, 2107, 48, 57, 9, 32, 40,
	41, 2058, 2107, 48, 57, 9, 32, 40,
	41, 2058, 2107, 48, 57, 9, 32, 40,
	41, 2058, 2107, 48, 57, 9, 32, 40,
	41, 2058, 2107, 48, 57, 9, 32, 40,
	41, 2058, 2107, 48, 57, 65, 70, 97,
	102, 48, 57, 65, 70, 97, 102, 9,
	32, 40, 41, 3082, 3131, 3338, 3387, 3594,
	3643, 48, 57, 65, 70, 97, 102, 2058,
	1920, 2175, 2058, 1920, 2175, 2058, 1920, 2175,
	2058, 1920, 2175, 48, 57, 9, 32, 40,
	41, 2058, 2107, 48, 57, 9, 32, 40,
	41, 2058, 2107, 48, 57, 32, 59, 9,
	10, 40, 41, 48, 57, 32, 59, 9,
	10, 40, 41, 2058, 1920, 2175, 48, 57,
	9, 32, 40, 41, 2058, 2107, 48, 57,
	9, 32, 40, 41, 2058, 2107, 48, 57,
	9, 32, 40, 41, 2058, 2107, 48, 57,
	9, 32, 40, 41, 2058, 2107, 48, 57,
	9, 32, 40, 41, 2058, 2107, 48, 57,
	9, 32, 40, 41, 2058, 2107, 48, 57,
	65, 70, 97, 102, 48, 57, 65, 70,
	97, 102, 9, 32, 40, 41, 3082, 3131,
	3338, 3387, 3594, 3643, 48, 57, 65, 70,
	97, 102, 2058, 1920, 2175, 2058, 1920, 2175,
	2058, 1920, 2175, 2058, 1920, 2175, 48, 57,
	9, 32, 40, 41, 2058, 2107, 48, 57,
	9, 32, 40, 41, 46, 2058, 2107, 48,
	57, 32, 46, 59, 9, 10, 40, 41,
	48, 57, 2058, 1920, 2175, 48, 57, 9,
	32, 40, 41, 2058, 2107, 48, 57, 9,
	32, 40, 41, 2058, 2107, 48, 57, 65,
	70, 97, 102, 48, 57, 65, 70, 97,
	102, 48, 57, 65, 70, 97, 102, 48,
	57, 65, 70, 97, 102, 58, 48, 57,
	65, 70, 97, 102, 48, 57, 65, 70,
	97, 102, 48, 57, 65, 70, 97, 102,
	48, 57, 65, 70, 97, 102, 32, 58,
	59, 9, 10, 40, 41, 2058, 1920, 2175,
	48, 57, 65, 70, 97, 102, 48, 57,
	65, 70, 97, 102, 45, 48, 57, 65,
	70, 97, 102, 48, 57, 65, 70, 97,
	102, 32, 45, 59, 9, 10, 40, 41,
	48, 57, 65, 70, 97, 102, 48, 57,
	65, 70, 97, 102, 45, 48, 57, 65,
	70, 97, 102, 48, 57, 65, 70, 97,
	102, 32, 45, 59, 9, 10, 40, 41,
	48, 57, 9, 32, 40, 41, 2058, 2107,
	48, 57, 9, 32, 40, 41, 2058, 2107,
	48, 57, 9, 32, 40, 41, 2058, 2107,
	48, 57, 9, 32, 40, 41, 2058, 2107,
	-128, 8, 11, 58, 60, 127, 32, 59,
	9, 10, 40, 41, 2058, 1920, 2175, 2058,
	1920, 2175, 48, 57, 9, 32, 40, 41,
	2058, 2107, 48, 57, 9, 32, 40, 41,
	2058, 2107, -128, 8, 11, 58, 60, 127,
	9, 32, 40, 41, 2058, 2107, 9, 32,
	40, 41, 2058, 2107, -128, 8, 11, 58,
	60, 127, 32, 59, 9, 10, 40, 41,
	2058, 1920, 2175, 2058, 1920, 2175, 48, 57,
	9, 32, 40, 41, 2058, 2107, 48, 57,
	9, 32, 40, 41, 42, 92, 95, 2058,
	2107, 45, 57, 64, 90, 97, 122, 32,
	59, 9, 10, 40, 41, 32, 59, 9,
	10, 40, 41, 2058, 1920, 2175, 48, 57,
	9, 32, 40, 41, 2058, 2107, 48, 57,
	9, 32, 40, 41, 2058, 2107, -128, 8,
	11, 58, 60, 127, 9, 32, 40, 41,
	2058, 2107, 9, 32, 40, 41, 2058, 2107,
	48, 57, 65, 90, 97, 122, 32, 59,
	9, 10, 40, 41, 2058, 1920, 2175, 2058,
	1920, 2175, 65, 67, 68, 69, 72, 73,
	75, 76, 77, 78, 79, 80, 82, 83,
	84, 85, 90, 97, 99, 100, 101, 104,
	105, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 122, 9, 32, 40, 41,
	65, 70, 80, 97, 102, 112, 3082, 3131,
	3338, 3387, 3594, 3643, 9, 32, 40, 41,
	92, 3082, 3131, 3338, 3387, 3594, 3643, -128,
	8, 11, 58, 60, 127, 9, 32, 40,
	41, 1802, 1851, 2058, 2107, 9, 32, 40,
	41, 1802, 1851, 2058, 2107, 10, 35, 2058,
	1920, 2175, 9, 32, 40, 41, 92, 2826,
	2875, 3082, 3131, 3338, 3387, 3594, 3643, -128,
	8, 11, 58, 60, 127, 9, 32, 40,
	41, 92, 2826, 2875, 3082, 3131, 3338, 3387,
	3594, 3643, -128, 8, 11, 58, 60, 127,
	1802, 2058, 1664, 1919, 1920, 2175, 1801, 1802,
	1824, 1832, 1833, 1851, 2057, 2058, 2080, 2088,
	2089, 2107, 1920, 2175, 1801, 1802, 1824, 1832,
	1833, 1851, 2057, 2058, 2080, 2088, 2089, 2107,
	1920, 2175, 9, 32, 40, 41, 1802, 1851,
	2058, 2107, -128, 8, 11, 58, 60, 127,
	9, 32, 40, 41, 1802, 1851, 2058, 2107,
	-128, 8, 11, 58, 60, 127, 1801, 1802,
	1824, 1832, 1833, 1851, 2057, 2058, 2080, 2088,
	2089, 2107, 1664, 1919, 1920, 2175, 1801, 1802,
	1824, 1832, 1833, 1851, 2057, 2058, 2080, 2088,
	2089, 2107, 1664, 1919, 1920, 2175, 65, 97,
	65, 97, 9, 32, 40, 41, 3082, 3131,
	3338, 3387, 3594, 3643, 83, 115, 68, 100,
	66, 98, 9, 32, 40, 41, 3082, 3131,
	3338, 3387, 3594, 3643, 76, 108, 9, 32,
	40, 41, 3082, 3131, 3338, 3387, 3594, 3643,
	65, 68, 69, 78, 83, 97, 100, 101,
	110, 115, 65, 83, 97, 115, 9, 32,
	40, 41, 3082, 3131, 3338, 3387, 3594, 3643,
	69, 101, 9, 32, 40, 41, 3082, 3131,
	3338, 3387, 3594, 3643, 78, 83, 110, 115,
	83, 115, 75, 107, 69, 101, 89, 121,
	9, 32, 40, 41, 3082, 3131, 3338, 3387,
	3594, 3643, 9, 32, 40, 41, 3082, 3131,
	3338, 3387, 3594, 3643, 82, 114, 84, 116,
	9, 32, 40, 41, 3082, 3131, 3338, 3387,
	3594, 3643, 65, 97, 77, 109, 69, 101,
	9, 32, 40, 41, 3082, 3131, 3338, 3387,
	3594, 3643, 89, 121, 78, 110, 67, 99,
	9, 32, 40, 41, 3082, 3131, 3338, 3387,
	3594, 3643, 72, 78, 83, 104, 110, 115,
	67, 99, 73, 105, 68, 100, 9, 32,
	40, 41, 3082, 3131, 3338, 3387, 3594, 3643,
	65, 83, 97, 115, 77, 109, 69, 101,
	9, 32, 40, 41, 3082, 3131, 3338, 3387,
	3594, 3643, 75, 107, 69, 101, 89, 121,
	9, 32, 40, 41, 3082, 3131, 3338, 3387,
	3594, 3643, 9, 32, 40, 41, 3082, 3131,
	3338, 3387, 3594, 3643, 85, 117, 73, 105,
	52, 54, 56, 9, 32, 40, 41, 3082,
	3131, 3338, 3387, 3594, 3643, 52, 9, 32,
	40, 41, 3082, 3131, 3338, 3387, 3594, 3643,
	73, 84, 105, 116, 78, 110, 70, 102,
	79, 111, 9, 32, 40, 41, 3082, 3131,
	3338, 3387, 3594, 3643, 84, 116, 80, 112,
	83, 115, 9, 32, 40, 41, 3082, 3131,
	3338, 3387, 3594, 3643, 80, 112, 83, 115,
	69, 101, 67, 99, 75, 107, 69, 101,
	89, 121, 9, 32, 40, 41, 3082, 3131,
	3338, 3387, 3594, 3643, 69, 88, 101, 120,
	89, 121, 9, 32, 40, 41, 3082, 3131,
	3338, 3387, 3594, 3643, 9, 32, 40, 41,
	3082, 3131, 3338, 3387, 3594, 3643, 51, 54,
	79, 80, 111, 112, 50, 9, 32, 40,
	41, 3082, 3131, 3338, 3387, 3594, 3643, 52,
	9, 32, 40, 41, 3082, 3131, 3338, 3387,
	3594, 3643, 67, 99, 9, 32, 40, 41,
	3082, 3131, 3338, 3387, 3594, 3643, 9, 32,
	40, 41, 3082, 3131, 3338, 3387, 3594, 3643,
	73, 88, 105, 120, 78, 110, 70, 102,
	79, 111, 9, 32, 40, 41, 3082, 3131,
	3338, 3387, 3594, 3643, 9, 32, 40, 41,
	3082, 3131, 3338, 3387, 3594, 3643, 65, 73,
	83, 97, 105, 115, 80, 112, 84, 116,
	82, 114, 9, 32, 40, 41, 3082, 3131,
	3338, 3387, 3594, 3643, 68, 100, 9, 32,
	40, 41, 3082, 3131, 3338, 3387, 3594, 3643,
	9, 32, 40, 41, 69, 101, 3082, 3131,
	3338, 3387, 3594, 3643, 67, 99, 9, 32,
	40, 41, 51, 3082, 3131, 3338, 3387, 3594,
	3643, 9, 32, 40, 41, 80, 112, 3082,
	3131, 3338, 3387, 3594, 3643, 65, 97, 82,
	114, 65, 97, 77, 109, 9, 32, 40,
	41, 3082, 3131, 3338, 3387, 3594, 3643, 80,
	112, 69, 101, 78, 110, 80, 112, 71,
	103, 80, 112, 75, 107, 69, 101, 89,
	121, 9, 32, 40, 41, 3082, 3131, 3338,
	3387, 3594, 3643, 84, 116, 82, 114, 9,
	32, 40, 41, 3082, 3131, 3338, 3387, 3594,
	3643, 80, 82, 84, 112, 114, 116, 9,
	32, 40, 41, 3082, 3131, 3338, 3387, 3594,
	3643, 83, 115, 73, 105, 71, 103, 9,
	32, 40, 41, 3082, 3131, 3338, 3387, 3594,
	3643, 9, 32, 40, 41, 3082, 3131, 3338,
	3387, 3594, 3643, 77, 79, 80, 82, 83,
	86, 109, 111, 112, 114, 115, 118, 73,
	105, 77, 109, 69, 101, 65, 97, 9,
	32, 40, 41, 3082, 3131, 3338, 3387, 3594,
	3643, 65, 97, 9, 32, 40, 41, 3082,
	3131, 3338, 3387, 3594, 3643, 70, 102, 9,
	32, 40, 41, 3082, 3131, 3338, 3387, 3594,
	3643, 86, 118, 9, 32, 40, 41, 3082,
	3131, 3338, 3387, 3594, 3643, 72, 104, 70,
	102, 80, 112, 9, 32, 40, 41, 3082,
	3131, 3338, 3387, 3594, 3643, 67, 99, 66,
	98, 9, 32, 40, 41, 3082, 3131, 3338,
	3387, 3594, 3643, 76, 88, 89, 108, 120,
	121, 83, 115, 65, 97, 9, 32, 40,
	41, 3082, 3131, 3338, 3387, 3594, 3643, 84,
	116, 9, 32, 40, 41, 3082, 3131, 3338,
	3387, 3594, 3643, 80, 112, 69, 101, 48,
	57, 9, 32, 40, 41, 3082, 3131, 3338,
	3387, 3594, 3643, 48, 57, 82, 114, 73,
	105, 9, 32, 40, 41, 3082, 3131, 3338,
	3387, 3594, 3643, 79, 111, 78, 110, 69,
	101, 77, 109, 68, 100, 9, 32, 40,
	41, 3082, 3131, 3338, 3387, 3594, 3643, 9,
	32, 36, 40, 41, 42, 92, 95, 1802,
	1851, 2058, 2107, 45, 57, 64, 90, 97,
	122, 9, 32, 36, 40, 41, 42, 73,
	92, 95, 105, 1802, 1851, 2058, 2107, 45,
	47, 48, 57, 64, 90, 97, 122, 9,
	32, 36, 40, 41, 42, 92, 95, 1802,
	1851, 2058, 2107, 45, 57, 64, 90, 97,
	122, 32, 33, 59, 92, 9, 10, 35,
	39, 40, 41, 42, 126, 9, 32, 40,
	41, 42, 46, 92, 95, 2058, 2107, 45,
	57, 65, 90, 97, 122, 9, 32, 40,
	41, 43, 3082, 3131, 3338, 3387, 3594, 3643,
	47, 57, 65, 90, 97, 122, 2058, 1920,
	2175, 9, 32, 40, 41, 65, 67, 68,
	69, 72, 73, 75, 76, 77, 78, 79,
	80, 82, 83, 84, 85, 90, 97, 99,
	100, 101, 104, 105, 107, 108, 109, 110,
	111, 112, 114, 115, 116, 117, 122, 3082,
	3131, 3338, 3387, 3594, 3643, 2058, 1920, 2175,
	9, 32, 40, 41, 3082, 3131, 3338, 3387,
	3594, 3643, 48, 57, 65, 70, 97, 102,
	2058, 1920, 2175, 9, 32, 40, 41, 2058,
	2107, 48, 57, 65, 70, 97, 102, 9,
	32, 40, 41, 3082, 3131, 3338, 3387, 3594,
	3643, 48, 57, 65, 70, 97, 102, 2058,
	1920, 2175, 2058, 1920, 2175, 9, 32, 40,
	41, 97, 101, 105, 107, 109, 110, 112,
	3082, 3131, 3338, 3387, 3594, 3643, 2058, 1920,
	2175, 9, 32, 40, 41, 3082, 3131, 3338,
	3387, 3594, 3643, -128, 8, 11, 58, 60,
	127, 2058, 1920, 2175, 9, 32, 40, 41,
	3082, 3131, 3338, 3387, 3594, 3643, 2058, 1920,
	2175, 9, 32, 40, 41, 3082, 3131, 3338,
	3387, 3594, 3643, 48, 57, 2058, 1920, 2175,
	9, 32, 40, 41, 3082, 3131, 3338, 3387,
	3594, 3643, 48, 57, 2058, 1920, 2175, 9,
	32, 40, 41, 3082, 3131, 3338, 3387, 3594,
	3643, 48, 57, 2058, 1920, 2175, 9, 32,
	33, 40, 41, 49, 50, 3082, 3131, 3338,
	3387, 3594, 3643, 2058, 1920, 2175, 9, 32,
	40, 41, 3082, 3131, 3338, 3387, 3594, 3643,
	48, 57, 65, 70, 97, 102, 2058, 1920,
	2175, 9, 32, 40, 41, 3082, 3131, 3338,
	3387, 3594, 3643, 48, 57, 65, 70, 97,
	102, 2058, 1920, 2175, 5641, 5664, 5672, 5673,
	14602, 14651, 14858, 14907, 15370, 15419, 15626, 15675,
	15882, 15931, 6666, 6528, 6783, 4105, 4128, 4136,
	4137, 4139, 5130, 5179, 4143, 4153, 4161, 4186,
	4193, 4218, 5130, 4992, 5247, 4139, 7177, 7200,
	7208, 7209, 7433, 7456, 7464, 7465, 7689, 7712,
	7720, 7721, 10506, 10555, 10762, 10811, 11274, 11323,
	11530, 11579, 11786, 11835, 12298, 12347, 12554, 12603,
	12810, 12859, 13322, 13371, 13578, 13627, 13834, 13883,
	4143, 4153, 4161, 4186, 4193, 4218, 8714, 9226,
	9738, 8576, 8831, 9088, 9343, 9600, 9855, 9,
	32, 40, 41, 3082, 3131, 3338, 3387, 3594,
	3643, 48, 57, 65, 70, 97, 102, 2058,
	1920, 2175, 9, 32, 40, 41, 3082, 3131,
	3338, 3387, 3594, 3643, 48, 57, 65, 70,
	97, 102, 2058, 1920, 2175, 9, 32, 40,
	41, 92, 3082, 3131, 3338, 3387, 3594, 3643,
	-128, 8, 11, 58, 60, 127, 9, 32,
	40, 41, 1802, 1851, 2058, 2107, 0
};

static const char _zone_scanner_single_lengths[] = {
	0, 10, 16, 8, 8, 8, 1, 2,
	6, 6, 1, 6, 1, 6, 10, 6,
	2, 6, 6, 16, 6, 10, 6, 1,
	6, 1, 6, 2, 2, 2, 2, 2,
	2, 2, 6, 8, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 16,
	8, 1, 10, 8, 8, 1, 10, 10,
	30, 10, 10, 21, 10, 3, 1, 1,
	5, 6, 6, 0, 0, 0, 6, 2,
	2, 2, 4, 0, 0, 0, 4, 6,
	6, 2, 0, 0, 0, 6, 6, 6,
	18, 8, 1, 8, 10, 8, 1, 6,
	10, 4, 12, 8, 1, 0, 0, 0,
	4, 8, 1, 6, 6, 8, 12, 4,
	12, 8, 1, 0, 0, 0, 4, 8,
	2, 10, 1, 1, 1, 1, 2, 2,
	11, 1, 1, 10, 44, 16, 2, 2,
	10, 1, 10, 2, 10, 4, 2, 2,
	2, 2, 10, 10, 2, 2, 10, 2,
	2, 2, 10, 2, 2, 2, 10, 6,
	2, 2, 2, 10, 4, 2, 2, 10,
	2, 2, 2, 10, 10, 2, 2, 2,
	1, 10, 1, 10, 4, 2, 2, 2,
	10, 2, 2, 2, 10, 2, 2, 2,
	2, 2, 2, 2, 10, 4, 2, 10,
	10, 6, 1, 10, 1, 10, 2, 10,
	10, 4, 2, 2, 2, 10, 10, 6,
	2, 2, 2, 10, 2, 10, 12, 2,
	11, 12, 2, 2, 2, 2, 10, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	10, 2, 2, 10, 6, 10, 2, 2,
	2, 10, 10, 12, 2, 2, 2, 2,
	10, 2, 10, 2, 10, 2, 10, 2,
	2, 2, 10, 2, 2, 10, 6, 2,
	2, 10, 2, 10, 2, 2, 0, 10,
	2, 2, 10, 2, 2, 2, 2, 2,
	10, 2, 2, 2, 10, 2, 10, 6,
	6, 6, 6, 0, 10, 1, 1, 1,
	6, 7, 8, 6, 0, 10, 1, 1,
	6, 1, 6, 1, 1, 1, 4, 1,
	1, 4, 1, 1, 2, 1, 1, 1,
	1, 4, 1, 1, 1, 1, 4, 1,
	1, 0, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 1, 1, 1, 4, 10, 17,
	1, 1, 1, 1, 3, 10, 1, 1,
	1, 1, 2, 1, 1, 2, 2, 2,
	10, 1, 1, 2, 2, 11, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 2,
	1, 3, 1, 12, 1, 1, 1, 1,
	1, 1, 2, 1, 3, 1, 12, 1,
	1, 1, 0, 11, 2, 10, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 11, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 10, 1, 1, 1, 1,
	1, 0, 1, 10, 10, 1, 10, 2,
	4, 2, 2, 3, 2, 2, 2, 2,
	1, 1, 2, 2, 2, 1, 2, 4,
	4, 1, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 2, 2,
	1, 1, 1, 2, 1, 1, 2, 2,
	2, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 2, 1, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 4, 2, 2, 2,
	2, 2, 2, 2, 2, 4, 2, 1,
	2, 2, 2, 3, 3, 2, 2, 2,
	2, 1, 1, 2, 2, 2, 1, 2,
	1, 1, 2, 1, 1, 2, 12, 2,
	2, 2, 2, 2, 2, 2, 6, 2,
	2, 2, 2, 2, 2, 4, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 4, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 1,
	3, 3, 2, 3, 6, 9, 6, 6,
	6, 6, 16, 6, 16, 6, 16, 6,
	12, 2, 10, 2, 1, 6, 10, 6,
	1, 6, 10, 6, 1, 6, 10, 6,
	1, 1, 1, 2, 6, 6, 2, 1,
	3, 6, 9, 2, 1, 0, 6, 9,
	2, 1, 2, 10, 10, 1, 1, 3,
	0, 6, 8, 6, 8, 7, 8, 6,
	6, 6, 8, 6, 8, 7, 8, 6,
	7, 0, 12, 10, 12, 10, 12, 10,
	12, 10, 1, 11, 11, 1, 11, 11,
	10, 1, 11, 11, 10, 1, 11, 11,
	10, 1, 6, 1, 6, 6, 1, 1,
	1, 6, 1, 6, 6, 1, 1, 0,
	6, 6, 6, 6, 6, 9, 2, 1,
	1, 1, 0, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 9, 2, 1, 1,
	1, 1, 1, 0, 6, 6, 6, 6,
	6, 7, 2, 1, 1, 1, 13, 2,
	1, 1, 1, 0, 10, 1, 1, 1,
	1, 0, 6, 6, 6, 6, 6, 6,
	0, 10, 1, 1, 1, 1, 0, 6,
	6, 6, 6, 0, 10, 1, 1, 1,
	0, 6, 10, 6, 6, 6, 7, 34,
	7, 2, 1, 14, 1, 35, 3, 1,
	1, 6, 6, 6, 7, 35, 1, 1,
	6, 6, 6, 7, 35, 1, 1, 6,
	6, 6, 9, 34, 1, 1, 1, 34,
	12, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 9, 6, 7,
	2, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 6, 2, 2, 2, 6,
	2, 6, 10, 2, 6, 4, 2, 2,
	2, 2, 6, 6, 2, 2, 6, 2,
	2, 2, 6, 2, 2, 2, 6, 6,
	2, 2, 2, 6, 4, 2, 2, 6,
	2, 2, 2, 6, 6, 2, 2, 2,
	1, 6, 1, 6, 4, 2, 2, 2,
	6, 2, 2, 2, 6, 2, 2, 2,
	2, 2, 2, 2, 6, 4, 2, 6,
	6, 6, 1, 6, 1, 6, 2, 6,
	6, 4, 2, 2, 2, 6, 6, 6,
	2, 2, 2, 6, 2, 6, 8, 2,
	7, 8, 2, 2, 2, 2, 6, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	6, 2, 2, 6, 6, 6, 2, 2,
	2, 6, 6, 12, 2, 2, 2, 2,
	6, 2, 6, 2, 6, 2, 6, 2,
	2, 2, 6, 2, 2, 6, 6, 2,
	2, 6, 2, 6, 2, 2, 0, 6,
	2, 2, 6, 2, 2, 2, 2, 2,
	6, 3, 2, 2, 0, 6, 6, 6,
	6, 6, 7, 2, 1, 1, 1, 1,
	2, 0, 6, 6, 6, 6, 6, 7,
	6, 6, 0, 1, 0, 1, 1, 0,
	1, 2, 2, 1, 1, 1, 1, 1,
	1, 0, 6, 1, 1, 1, 0, 6,
	6, 6, 6, 6, 7, 2, 0, 2,
	1, 1, 1, 0, 6, 6, 6, 6,
	6, 6, 0, 10, 1, 1, 1, 1,
	0, 6, 6, 2, 2, 1, 0, 6,
	6, 6, 6, 6, 6, 0, 10, 1,
	1, 1, 1, 0, 6, 7, 3, 1,
	0, 6, 6, 0, 0, 0, 1, 0,
	0, 0, 0, 3, 1, 0, 0, 1,
	0, 0, 3, 0, 0, 1, 0, 0,
	3, 0, 6, 6, 6, 6, 2, 1,
	1, 0, 6, 6, 6, 6, 2, 1,
	1, 0, 6, 9, 2, 2, 1, 0,
	6, 6, 6, 6, 2, 1, 1, 34,
	16, 11, 8, 8, 1, 1, 1, 13,
	13, 2, 12, 12, 8, 8, 12, 12,
	2, 2, 10, 2, 2, 2, 10, 2,
	10, 10, 4, 10, 2, 10, 4, 2,
	2, 2, 2, 10, 10, 2, 2, 10,
	2, 2, 2, 10, 2, 2, 2, 10,
	6, 2, 2, 2, 10, 4, 2, 2,
	10, 2, 2, 2, 10, 10, 2, 2,
	2, 1, 10, 1, 10, 4, 2, 2,
	2, 10, 2, 2, 2, 10, 2, 2,
	2, 2, 2, 2, 2, 10, 4, 2,
	10, 10, 6, 1, 10, 1, 10, 2,
	10, 10, 4, 2, 2, 2, 10, 10,
	6, 2, 2, 2, 10, 2, 10, 12,
	2, 11, 12, 2, 2, 2, 2, 10,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 10, 2, 2, 10, 6, 10, 2,
	2, 2, 10, 10, 12, 2, 2, 2,
	2, 10, 2, 10, 2, 10, 2, 10,
	2, 2, 2, 10, 2, 2, 10, 6,
	2, 2, 10, 2, 10, 2, 2, 0,
	10, 2, 2, 10, 2, 2, 2, 2,
	2, 10, 12, 14, 12, 0, 0, 0,
	0, 4, 0, 0, 0, 10, 0, 11,
	1, 0, 44, 1, 0, 10, 1, 6,
	0, 10, 1, 1, 0, 0, 17, 1,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 10, 1, 0, 0, 10, 1, 10,
	1, 10, 1, 10, 1, 0, 0, 0,
	0, 13, 1, 0, 10, 1, 0, 10,
	1, 0, 14, 1, 7, 1, 35, 3,
	0, 0, 0, 0, 0, 0, 0, 10,
	1, 0, 0, 10, 1, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 11, 8
};

static const char _zone_scanner_range_lengths[] = {
	0, 3, 1, 3, 0, 0, 0, 0,
	0, 3, 1, 0, 1, 1, 1, 1,
	0, 0, 3, 1, 1, 1, 1, 1,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 2, 0, 3, 1, 2, 0, 0,
	0, 0, 0, 2, 0, 0, 2, 1,
	3, 1, 3, 3, 3, 1, 1, 6,
	4, 4, 4, 4, 4, 3, 0, 0,
	3, 5, 5, 1, 1, 1, 5, 2,
	2, 2, 4, 3, 1, 1, 4, 1,
	1, 2, 3, 1, 1, 1, 0, 1,
	1, 0, 0, 1, 1, 1, 1, 0,
	3, 3, 3, 0, 0, 1, 1, 1,
	3, 0, 1, 0, 3, 0, 3, 3,
	3, 0, 0, 1, 1, 1, 3, 0,
	2, 3, 1, 1, 3, 3, 3, 3,
	3, 1, 0, 0, 0, 0, 0, 0,
	0, 1, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1, 1,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	1, 1, 3, 3, 3, 1, 1, 1,
	0, 1, 1, 3, 3, 3, 1, 1,
	1, 1, 0, 0, 0, 0, 2, 0,
	0, 2, 0, 0, 0, 0, 0, 0,
	0, 2, 0, 0, 0, 0, 2, 0,
	0, 1, 3, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 2, 0, 0, 0, 2, 0, 0,
	0, 0, 0, 0, 2, 0, 1, 0,
	0, 0, 3, 3, 3, 3, 3, 3,
	0, 0, 3, 3, 3, 3, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1,
	1, 1, 1, 1, 1, 0, 0, 0,
	0, 0, 3, 3, 3, 3, 3, 3,
	0, 0, 1, 1, 2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2,
	2, 0, 2, 0, 2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	1, 1, 1, 1, 3, 0, 1, 3,
	0, 2, 0, 2, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2, 0,
	0, 0, 0, 0, 0, 0, 2, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2, 0, 0, 0, 0,
	0, 0, 0, 0, 2, 0, 0, 0,
	0, 0, 2, 0, 0, 2, 0, 0,
	0, 0, 0, 0, 0, 2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2,
	0, 0, 2, 0, 0, 0, 0, 0,
	2, 0, 0, 0, 2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2,
	0, 0, 2, 0, 0, 2, 1, 3,
	0, 0, 0, 0, 0, 2, 0, 0,
	0, 0, 0, 0, 2, 0, 0, 2,
	0, 0, 2, 0, 0, 0, 2, 0,
	0, 2, 0, 0, 2, 0, 0, 2,
	0, 0, 0, 2, 0, 0, 2, 1,
	3, 3, 2, 3, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 0, 3, 2, 1,
	3, 0, 3, 2, 1, 1, 1, 3,
	2, 1, 2, 0, 3, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 0, 0,
	1, 1, 1, 1, 1, 1, 0, 0,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 0, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 3, 0, 3, 2, 1, 1,
	1, 1, 1, 3, 0, 1, 1, 3,
	0, 3, 0, 1, 1, 1, 0, 0,
	0, 1, 1, 1, 1, 1, 0, 3,
	3, 1, 1, 3, 0, 1, 1, 3,
	3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 1, 1, 1,
	1, 1, 0, 0, 1, 1, 0, 0,
	3, 0, 1, 0, 1, 3, 3, 1,
	1, 0, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 3, 3, 1, 1, 0,
	1, 1, 3, 0, 1, 1, 1, 0,
	0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1, 1,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 3, 2, 2, 1, 1, 1, 1,
	3, 0, 3, 0, 1, 1, 1, 3,
	0, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 3, 3, 3, 3, 3, 3,
	3, 5, 2, 0, 0, 0, 0, 0,
	1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 3, 3, 3, 3, 0, 3,
	3, 3, 3, 2, 1, 3, 3, 0,
	3, 3, 2, 3, 3, 0, 3, 3,
	2, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 3, 0, 3, 2, 1,
	1, 1, 1, 3, 2, 2, 1, 1,
	1, 3, 0, 3, 2, 1, 1, 0,
	0, 3, 0, 0, 0, 0, 1, 3,
	3, 2, 1, 1, 3, 3, 2, 2,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1,
	1, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3, 4, 3, 0, 0, 0,
	0, 4, 0, 0, 0, 3, 0, 3,
	1, 0, 0, 1, 0, 3, 1, 3,
	0, 3, 1, 1, 0, 0, 0, 1,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 3, 1, 0, 0, 0, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 0,
	0, 0, 1, 0, 3, 1, 0, 3,
	1, 0, 0, 1, 3, 1, 3, 3,
	0, 0, 0, 0, 0, 0, 0, 3,
	1, 0, 0, 3, 1, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3, 0
};

static const short _zone_scanner_index_offsets[] = {
	0, 0, 14, 32, 44, 53, 62, 64,
	67, 74, 84, 87, 94, 97, 105, 117,
	125, 128, 135, 145, 163, 171, 183, 191,
	194, 201, 203, 210, 213, 216, 219, 222,
	225, 228, 233, 240, 252, 255, 260, 263,
	266, 269, 272, 275, 280, 283, 286, 291,
	309, 321, 324, 338, 350, 362, 365, 377,
	394, 429, 444, 459, 485, 500, 507, 509,
	511, 520, 532, 544, 546, 548, 550, 562,
	567, 572, 577, 586, 590, 592, 594, 603,
	611, 619, 624, 628, 630, 632, 640, 647,
	655, 675, 684, 686, 696, 708, 718, 721,
	728, 742, 750, 766, 775, 777, 779, 781,
	783, 791, 800, 803, 810, 820, 829, 845,
	853, 869, 878, 880, 882, 884, 886, 894,
	903, 908, 922, 925, 928, 933, 938, 944,
	950, 965, 968, 970, 981, 1026, 1043, 1046,
	1049, 1060, 1063, 1074, 1077, 1088, 1093, 1096,
	1099, 1102, 1105, 1116, 1127, 1130, 1133, 1144,
	1147, 1150, 1153, 1164, 1167, 1170, 1173, 1184,
	1191, 1194, 1197, 1200, 1211, 1216, 1219, 1222,
	1233, 1236, 1239, 1242, 1253, 1264, 1267, 1270,
	1273, 1275, 1286, 1288, 1299, 1304, 1307, 1310,
	1313, 1324, 1327, 1330, 1333, 1344, 1347, 1350,
	1353, 1356, 1359, 1362, 1365, 1376, 1381, 1384,
	1395, 1406, 1413, 1415, 1426, 1428, 1439, 1442,
	1453, 1464, 1469, 1472, 1475, 1478, 1489, 1500,
	1507, 1510, 1513, 1516, 1527, 1530, 1541, 1554,
	1557, 1569, 1582, 1585, 1588, 1591, 1594, 1605,
	1608, 1611, 1614, 1617, 1620, 1623, 1626, 1629,
	1632, 1643, 1646, 1649, 1660, 1667, 1678, 1681,
	1684, 1687, 1698, 1709, 1722, 1725, 1728, 1731,
	1734, 1745, 1748, 1759, 1762, 1773, 1776, 1787,
	1790, 1793, 1796, 1807, 1810, 1813, 1824, 1831,
	1834, 1837, 1848, 1851, 1862, 1865, 1868, 1870,
	1882, 1885, 1888, 1899, 1902, 1905, 1908, 1911,
	1914, 1925, 1928, 1931, 1934, 1945, 1948, 1959,
	1966, 1974, 1982, 1992, 1996, 2010, 2013, 2016,
	2019, 2026, 2035, 2045, 2055, 2059, 2073, 2076,
	2079, 2087, 2090, 2097, 2099, 2101, 2103, 2110,
	2112, 2114, 2121, 2123, 2125, 2128, 2130, 2132,
	2134, 2136, 2143, 2145, 2147, 2149, 2151, 2158,
	2160, 2162, 2164, 2172, 2174, 2176, 2178, 2180,
	2182, 2184, 2186, 2188, 2190, 2192, 2194, 2196,
	2198, 2200, 2207, 2209, 2211, 2213, 2220, 2231,
	2249, 2251, 2253, 2255, 2257, 2263, 2274, 2277,
	2279, 2281, 2283, 2289, 2294, 2299, 2305, 2311,
	2317, 2328, 2330, 2335, 2341, 2347, 2362, 2364,
	2366, 2368, 2371, 2373, 2375, 2377, 2379, 2381,
	2385, 2388, 2393, 2396, 2410, 2413, 2415, 2417,
	2419, 2421, 2423, 2429, 2434, 2441, 2446, 2462,
	2467, 2469, 2471, 2473, 2486, 2491, 2502, 2504,
	2506, 2508, 2510, 2512, 2514, 2516, 2518, 2520,
	2524, 2527, 2530, 2533, 2545, 2548, 2550, 2552,
	2554, 2556, 2558, 2560, 2562, 2564, 2566, 2568,
	2570, 2572, 2574, 2576, 2587, 2589, 2591, 2593,
	2595, 2598, 2600, 2603, 2615, 2629, 2631, 2643,
	2649, 2654, 2659, 2662, 2668, 2671, 2674, 2677,
	2680, 2682, 2684, 2687, 2690, 2693, 2695, 2700,
	2705, 2710, 2712, 2715, 2718, 2721, 2724, 2729,
	2732, 2735, 2738, 2741, 2743, 2745, 2748, 2751,
	2754, 2756, 2758, 2760, 2765, 2767, 2769, 2772,
	2775, 2778, 2780, 2782, 2784, 2789, 2792, 2794,
	2796, 2798, 2800, 2805, 2807, 2809, 2814, 2817,
	2820, 2823, 2826, 2829, 2832, 2835, 2840, 2843,
	2846, 2849, 2852, 2855, 2858, 2863, 2866, 2869,
	2874, 2877, 2880, 2885, 2888, 2891, 2896, 2899,
	2901, 2906, 2909, 2912, 2916, 2922, 2925, 2928,
	2931, 2934, 2936, 2938, 2941, 2944, 2947, 2949,
	2954, 2956, 2958, 2963, 2965, 2967, 2972, 2986,
	2992, 2995, 2998, 3001, 3004, 3007, 3012, 3019,
	3022, 3025, 3028, 3031, 3034, 3039, 3044, 3047,
	3052, 3055, 3058, 3063, 3066, 3069, 3072, 3077,
	3080, 3083, 3088, 3093, 3096, 3101, 3104, 3107,
	3112, 3115, 3118, 3121, 3126, 3129, 3132, 3137,
	3140, 3147, 3154, 3159, 3166, 3173, 3186, 3193,
	3201, 3209, 3217, 3235, 3243, 3261, 3269, 3287,
	3295, 3311, 3317, 3329, 3335, 3338, 3346, 3358,
	3366, 3369, 3377, 3389, 3397, 3400, 3408, 3420,
	3428, 3431, 3434, 3437, 3442, 3449, 3459, 3464,
	3467, 3474, 3481, 3494, 3499, 3502, 3504, 3512,
	3525, 3530, 3533, 3538, 3549, 3563, 3566, 3571,
	3580, 3582, 3590, 3600, 3608, 3618, 3627, 3636,
	3643, 3651, 3659, 3669, 3677, 3687, 3696, 3705,
	3712, 3721, 3723, 3737, 3749, 3763, 3775, 3789,
	3801, 3815, 3826, 3829, 3842, 3855, 3858, 3871,
	3884, 3895, 3898, 3911, 3924, 3935, 3938, 3951,
	3964, 3975, 3978, 3985, 3988, 3996, 4004, 4007,
	4010, 4013, 4020, 4023, 4031, 4039, 4042, 4045,
	4047, 4055, 4063, 4071, 4079, 4087, 4100, 4105,
	4108, 4111, 4114, 4116, 4124, 4132, 4140, 4150,
	4157, 4167, 4174, 4184, 4191, 4204, 4209, 4212,
	4215, 4218, 4221, 4224, 4228, 4235, 4243, 4251,
	4261, 4268, 4279, 4282, 4285, 4288, 4291, 4305,
	4308, 4310, 4313, 4316, 4318, 4330, 4333, 4335,
	4340, 4345, 4347, 4355, 4365, 4372, 4380, 4388,
	4398, 4402, 4416, 4419, 4422, 4425, 4428, 4430,
	4438, 4446, 4454, 4464, 4468, 4482, 4485, 4488,
	4491, 4493, 4501, 4512, 4519, 4527, 4535, 4543,
	4578, 4589, 4592, 4595, 4610, 4613, 4652, 4659,
	4662, 4665, 4672, 4680, 4688, 4697, 4734, 4737,
	4740, 4747, 4755, 4763, 4774, 4813, 4816, 4819,
	4826, 4834, 4842, 4855, 4890, 4893, 4896, 4899,
	4934, 4947, 4957, 4964, 4972, 4980, 4988, 4996,
	5004, 5012, 5020, 5028, 5036, 5044, 5057, 5064,
	5075, 5078, 5081, 5084, 5087, 5090, 5093, 5096,
	5099, 5102, 5105, 5108, 5115, 5118, 5121, 5124,
	5131, 5134, 5141, 5152, 5155, 5162, 5167, 5170,
	5173, 5176, 5179, 5186, 5193, 5196, 5199, 5206,
	5209, 5212, 5215, 5222, 5225, 5228, 5231, 5238,
	5245, 5248, 5251, 5254, 5261, 5266, 5269, 5272,
	5279, 5282, 5285, 5288, 5295, 5302, 5305, 5308,
	5311, 5313, 5320, 5322, 5329, 5334, 5337, 5340,
	5343, 5350, 5353, 5356, 5359, 5366, 5369, 5372,
	5375, 5378, 5381, 5384, 5387, 5394, 5399, 5402,
	5409, 5416, 5423, 5425, 5432, 5434, 5441, 5444,
	5451, 5458, 5463, 5466, 5469, 5472, 5479, 5486,
	5493, 5496, 5499, 5502, 5509, 5512, 5519, 5528,
	5531, 5539, 5548, 5551, 5554, 5557, 5560, 5567,
	5570, 5573, 5576, 5579, 5582, 5585, 5588, 5591,
	5594, 5601, 5604, 5607, 5614, 5621, 5628, 5631,
	5634, 5637, 5644, 5651, 5664, 5667, 5670, 5673,
	5676, 5683, 5686, 5693, 5696, 5703, 5706, 5713,
	5716, 5719, 5722, 5729, 5732, 5735, 5742, 5749,
	5752, 5755, 5762, 5765, 5772, 5775, 5778, 5780,
	5788, 5791, 5794, 5801, 5804, 5807, 5810, 5813,
	5816, 5823, 5830, 5835, 5840, 5842, 5850, 5858,
	5866, 5876, 5883, 5894, 5897, 5900, 5903, 5906,
	5911, 5914, 5916, 5924, 5932, 5940, 5948, 5956,
	5967, 5974, 5984, 5988, 5993, 5997, 6002, 6007,
	6011, 6016, 6024, 6029, 6031, 6033, 6035, 6037,
	6039, 6042, 6046, 6056, 6059, 6062, 6065, 6067,
	6075, 6083, 6091, 6099, 6107, 6118, 6123, 6127,
	6135, 6138, 6141, 6144, 6146, 6154, 6162, 6170,
	6178, 6186, 6196, 6200, 6214, 6217, 6220, 6223,
	6226, 6228, 6236, 6244, 6250, 6255, 6258, 6260,
	6268, 6276, 6284, 6292, 6300, 6310, 6314, 6328,
	6331, 6334, 6337, 6340, 6342, 6350, 6359, 6366,
	6369, 6371, 6379, 6389, 6393, 6397, 6401, 6403,
	6407, 6411, 6415, 6419, 6425, 6428, 6432, 6436,
	6438, 6442, 6446, 6452, 6456, 6460, 6462, 6466,
	6470, 6476, 6478, 6486, 6494, 6502, 6512, 6517,
	6520, 6523, 6525, 6533, 6543, 6550, 6560, 6565,
	6568, 6571, 6573, 6581, 6594, 6599, 6604, 6607,
	6609, 6617, 6627, 6634, 6644, 6649, 6652, 6655,
	6690, 6707, 6722, 6731, 6740, 6742, 6744, 6747,
	6764, 6781, 6786, 6800, 6814, 6826, 6838, 6853,
	6868, 6871, 6874, 6885, 6888, 6891, 6894, 6905,
	6908, 6919, 6930, 6935, 6946, 6949, 6960, 6965,
	6968, 6971, 6974, 6977, 6988, 6999, 7002, 7005,
	7016, 7019, 7022, 7025, 7036, 7039, 7042, 7045,
	7056, 7063, 7066, 7069, 7072, 7083, 7088, 7091,
	7094, 7105, 7108, 7111, 7114, 7125, 7136, 7139,
	7142, 7145, 7147, 7158, 7160, 7171, 7176, 7179,
	7182, 7185, 7196, 7199, 7202, 7205, 7216, 7219,
	7222, 7225, 7228, 7231, 7234, 7237, 7248, 7253,
	7256, 7267, 7278, 7285, 7287, 7298, 7300, 7311,
	7314, 7325, 7336, 7341, 7344, 7347, 7350, 7361,
	7372, 7379, 7382, 7385, 7388, 7399, 7402, 7413,
	7426, 7429, 7441, 7454, 7457, 7460, 7463, 7466,
	7477, 7480, 7483, 7486, 7489, 7492, 7495, 7498,
	7501, 7504, 7515, 7518, 7521, 7532, 7539, 7550,
	7553, 7556, 7559, 7570, 7581, 7594, 7597, 7600,
	7603, 7606, 7617, 7620, 7631, 7634, 7645, 7648,
	7659, 7662, 7665, 7668, 7679, 7682, 7685, 7696,
	7703, 7706, 7709, 7720, 7723, 7734, 7737, 7740,
	7742, 7754, 7757, 7760, 7771, 7774, 7777, 7780,
	7783, 7786, 7797, 7813, 7832, 7848, 7849, 7850,
	7851, 7852, 7861, 7862, 7863, 7864, 7878, 7879,
	7894, 7897, 7898, 7943, 7946, 7947, 7961, 7964,
	7974, 7975, 7989, 7992, 7995, 7996, 7997, 8015,
	8018, 8019, 8020, 8021, 8022, 8023, 8024, 8025,
	8026, 8027, 8041, 8044, 8045, 8046, 8057, 8060,
	8072, 8075, 8087, 8090, 8102, 8105, 8106, 8107,
	8108, 8109, 8123, 8126, 8127, 8141, 8144, 8145,
	8159, 8162, 8163, 8178, 8181, 8192, 8195, 8234,
	8241, 8242, 8243, 8244, 8245, 8246, 8247, 8248,
	8262, 8265, 8266, 8267, 8281, 8284, 8285, 8286,
	8287, 8288, 8289, 8290, 8291, 8292, 8293, 8308
};

static const short _zone_scanner_indicies[] = {
	1, 1, 2, 3, 6, 6, 7, 8,
	9, 10, 4, 5, 5, 0, 12, 12,
	13, 14, 16, 17, 18, 19, 20, 16,
	17, 18, 19, 20, 21, 22, 15, 11,
	24, 24, 25, 26, 28, 28, 29, 30,
	27, 27, 27, 23, 32, 32, 33, 34,
	35, 36, 35, 36, 31, 37, 37, 38,
	39, 40, 41, 40, 41, 31, 43, 42,
	45, 45, 44, 46, 46, 47, 48, 49,
	50, 23, 46, 46, 47, 48, 49, 50,
	51, 51, 51, 23, 53, 52, 23, 54,
	54, 55, 56, 57, 58, 23, 60, 59,
	23, 12, 12, 13, 14, 21, 22, 61,
	11, 63, 64, 65, 66, 67, 63, 64,
	65, 66, 67, 62, 11, 68, 68, 69,
	70, 72, 73, 71, 11, 75, 75, 74,
	76, 76, 77, 78, 79, 80, 23, 76,
	76, 77, 78, 79, 80, 82, 83, 83,
	81, 84, 84, 85, 86, 88, 89, 90,
	91, 92, 88, 89, 90, 91, 92, 93,
	94, 87, 11, 84, 84, 85, 86, 93,
	94, 95, 11, 97, 98, 99, 100, 101,
	97, 98, 99, 100, 101, 96, 11, 102,
	102, 103, 104, 106, 107, 105, 11, 109,
	108, 23, 110, 110, 111, 112, 113, 114,
	23, 116, 115, 118, 119, 120, 118, 119,
	120, 117, 121, 121, 117, 122, 122, 117,
	123, 123, 117, 124, 124, 117, 125, 125,
	117, 126, 126, 117, 127, 127, 127, 127,
	117, 129, 129, 130, 131, 132, 133, 128,
	134, 134, 135, 136, 6, 6, 137, 138,
	4, 5, 5, 81, 141, 139, 140, 116,
	143, 115, 142, 31, 144, 144, 117, 145,
	145, 117, 146, 146, 117, 147, 147, 117,
	148, 148, 117, 149, 149, 149, 149, 117,
	150, 150, 117, 151, 151, 117, 152, 152,
	152, 152, 117, 154, 154, 155, 156, 16,
	17, 18, 19, 20, 16, 17, 18, 19,
	20, 157, 158, 15, 153, 159, 159, 160,
	161, 6, 6, 162, 163, 4, 5, 5,
	81, 165, 164, 23, 166, 166, 168, 169,
	75, 75, 74, 74, 170, 171, 74, 74,
	74, 167, 172, 172, 173, 174, 6, 6,
	175, 176, 4, 5, 5, 81, 172, 172,
	173, 174, 6, 6, 175, 176, 4, 177,
	177, 81, 179, 178, 23, 76, 76, 77,
	78, 180, 179, 180, 181, 182, 183, 139,
	23, 76, 76, 77, 78, 180, 179, 180,
	181, 182, 183, 82, 83, 83, 139, 184,
	139, 81, 84, 84, 85, 86, 88, 89,
	90, 91, 92, 88, 89, 90, 91, 92,
	185, 186, 185, 187, 188, 190, 191, 192,
	193, 194, 195, 191, 192, 193, 194, 195,
	87, 139, 189, 139, 11, 46, 46, 47,
	48, 196, 165, 196, 197, 198, 199, 51,
	51, 51, 139, 23, 84, 84, 85, 86,
	185, 186, 185, 187, 188, 190, 95, 139,
	200, 139, 11, 97, 98, 99, 100, 101,
	97, 98, 99, 100, 101, 141, 202, 203,
	204, 205, 206, 202, 203, 204, 205, 206,
	96, 139, 201, 139, 11, 102, 102, 103,
	104, 207, 208, 207, 209, 210, 212, 105,
	139, 211, 139, 11, 214, 215, 216, 213,
	213, 213, 140, 218, 217, 220, 219, 222,
	223, 224, 225, 222, 222, 222, 222, 221,
	226, 227, 228, 226, 229, 227, 226, 226,
	227, 227, 227, 221, 230, 231, 231, 230,
	232, 231, 230, 230, 231, 231, 231, 221,
	233, 227, 235, 234, 236, 234, 237, 238,
	239, 237, 240, 238, 237, 237, 238, 238,
	238, 234, 230, 230, 230, 230, 221, 241,
	241, 241, 241, 221, 244, 245, 243, 243,
	242, 246, 247, 246, 249, 246, 247, 248,
	247, 242, 243, 251, 243, 250, 252, 250,
	253, 250, 254, 255, 254, 257, 254, 255,
	256, 255, 250, 258, 258, 260, 258, 261,
	258, 259, 242, 262, 262, 264, 262, 265,
	262, 263, 242, 267, 267, 267, 267, 266,
	259, 268, 259, 250, 269, 250, 270, 250,
	271, 271, 273, 271, 274, 271, 272, 250,
	276, 276, 277, 278, 279, 280, 275, 276,
	276, 277, 278, 279, 280, 282, 281, 284,
	284, 285, 286, 288, 289, 290, 291, 292,
	288, 289, 290, 291, 292, 293, 294, 293,
	294, 287, 283, 296, 296, 297, 298, 299,
	300, 299, 300, 295, 302, 301, 284, 284,
	285, 286, 293, 294, 293, 294, 303, 283,
	306, 307, 308, 309, 310, 306, 307, 308,
	309, 310, 305, 304, 311, 311, 312, 313,
	315, 316, 315, 316, 314, 283, 318, 317,
	275, 320, 320, 321, 322, 323, 324, 319,
	320, 320, 321, 322, 325, 326, 327, 325,
	323, 324, 325, 325, 325, 319, 328, 329,
	330, 328, 328, 328, 328, 319, 332, 332,
	333, 334, 335, 335, 336, 335, 337, 338,
	337, 338, 335, 335, 335, 331, 339, 339,
	340, 341, 342, 343, 342, 343, 331, 345,
	344, 346, 328, 348, 347, 349, 347, 350,
	351, 352, 350, 350, 350, 350, 347, 332,
	332, 333, 334, 337, 338, 337, 338, 331,
	354, 353, 319, 355, 355, 356, 357, 358,
	359, 140, 355, 355, 356, 357, 358, 359,
	360, 360, 360, 361, 363, 363, 364, 365,
	366, 367, 366, 368, 362, 370, 370, 371,
	372, 373, 374, 375, 373, 376, 377, 376,
	378, 373, 373, 373, 369, 380, 381, 382,
	380, 380, 380, 380, 379, 383, 383, 384,
	385, 386, 386, 387, 386, 388, 389, 388,
	389, 386, 386, 386, 369, 390, 390, 391,
	392, 376, 377, 376, 377, 31, 394, 393,
	395, 380, 397, 396, 398, 396, 399, 400,
	401, 399, 399, 399, 399, 396, 383, 383,
	384, 385, 388, 389, 388, 389, 369, 394,
	403, 393, 402, 31, 404, 404, 405, 406,
	373, 374, 375, 373, 407, 408, 373, 373,
	373, 379, 410, 409, 140, 412, 411, 140,
	414, 414, 414, 414, 413, 415, 415, 415,
	415, 413, 416, 417, 416, 416, 416, 413,
	418, 419, 418, 418, 418, 413, 419, 419,
	420, 421, 414, 422, 423, 424, 424, 425,
	426, 414, 414, 414, 413, 428, 427, 413,
	419, 413, 430, 430, 431, 432, 433, 434,
	435, 435, 436, 437, 429, 438, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 460, 460, 461,
	462, 429, 463, 463, 464, 465, 466, 467,
	468, 466, 467, 468, 469, 470, 471, 471,
	472, 473, 429, 474, 474, 429, 475, 475,
	429, 476, 476, 477, 478, 479, 480, 481,
	481, 482, 483, 429, 485, 484, 429, 486,
	487, 488, 489, 490, 486, 487, 488, 489,
	490, 429, 491, 491, 429, 492, 492, 493,
	494, 495, 496, 497, 497, 498, 499, 429,
	500, 501, 500, 501, 429, 502, 502, 429,
	503, 503, 429, 504, 504, 429, 505, 505,
	429, 506, 506, 507, 508, 509, 510, 511,
	511, 512, 513, 429, 514, 514, 515, 516,
	517, 518, 519, 519, 520, 521, 429, 522,
	522, 429, 523, 523, 429, 524, 524, 525,
	526, 527, 528, 529, 529, 530, 531, 429,
	532, 532, 429, 533, 533, 429, 534, 534,
	429, 535, 535, 536, 537, 538, 539, 540,
	540, 541, 542, 429, 543, 543, 429, 544,
	544, 429, 545, 545, 429, 546, 546, 547,
	548, 549, 550, 551, 551, 552, 553, 429,
	554, 555, 556, 554, 555, 556, 429, 557,
	557, 429, 558, 558, 429, 559, 559, 429,
	560, 560, 561, 562, 563, 564, 565, 565,
	566, 567, 429, 568, 569, 568, 569, 429,
	570, 570, 429, 571, 571, 429, 572, 572,
	573, 574, 575, 576, 577, 577, 578, 579,
	429, 580, 580, 429, 581, 581, 429, 582,
	582, 429, 583, 583, 584, 585, 586, 587,
	588, 588, 589, 590, 429, 591, 591, 592,
	593, 594, 595, 596, 596, 597, 598, 429,
	599, 599, 429, 600, 600, 429, 601, 602,
	429, 603, 429, 604, 604, 605, 606, 607,
	608, 609, 609, 610, 611, 429, 612, 429,
	613, 613, 614, 615, 616, 617, 618, 618,
	619, 620, 429, 621, 622, 621, 622, 429,
	623, 623, 429, 624, 624, 429, 625, 625,
	429, 626, 626, 627, 628, 629, 630, 631,
	631, 632, 633, 429, 634, 634, 429, 635,
	635, 429, 636, 636, 429, 637, 637, 638,
	639, 640, 641, 642, 642, 643, 644, 429,
	645, 645, 429, 646, 646, 429, 647, 647,
	429, 648, 648, 429, 649, 649, 429, 650,
	650, 429, 651, 651, 429, 652, 652, 653,
	654, 655, 656, 657, 657, 658, 659, 429,
	660, 661, 660, 661, 429, 662, 662, 429,
	663, 663, 664, 665, 666, 667, 668, 668,
	669, 670, 429, 671, 671, 672, 673, 674,
	675, 676, 676, 677, 678, 429, 679, 680,
	681, 682, 681, 682, 429, 683, 429, 684,
	684, 685, 686, 687, 688, 689, 689, 690,
	691, 429, 692, 429, 693, 693, 694, 695,
	696, 697, 698, 698, 699, 700, 429, 701,
	701, 429, 702, 702, 703, 704, 705, 706,
	707, 707, 708, 709, 429, 710, 710, 711,
	712, 713, 714, 715, 715, 716, 717, 429,
	718, 719, 718, 719, 429, 720, 720, 429,
	721, 721, 429, 722, 722, 429, 723, 723,
	724, 725, 726, 727, 728, 728, 729, 730,
	429, 731, 731, 732, 733, 734, 735, 736,
	736, 737, 738, 429, 739, 740, 741, 739,
	740, 741, 429, 742, 742, 429, 743, 743,
	429, 744, 744, 429, 745, 745, 746, 747,
	748, 749, 750, 750, 751, 752, 429, 753,
	753, 429, 754, 754, 755, 756, 757, 758,
	759, 759, 760, 761, 429, 762, 762, 763,
	764, 765, 765, 766, 767, 768, 768, 769,
	770, 429, 771, 771, 429, 772, 772, 773,
	774, 775, 776, 777, 778, 778, 779, 780,
	429, 781, 781, 782, 783, 784, 784, 785,
	786, 787, 787, 788, 789, 429, 790, 790,
	429, 791, 791, 429, 792, 792, 429, 793,
	793, 429, 794, 794, 795, 796, 797, 798,
	799, 799, 800, 801, 429, 802, 802, 429,
	803, 803, 429, 804, 804, 429, 805, 805,
	429, 806, 806, 429, 807, 807, 429, 808,
	808, 429, 809, 809, 429, 810, 810, 429,
	811, 811, 812, 813, 814, 815, 816, 816,
	817, 818, 429, 819, 819, 429, 820, 820,
	429, 821, 821, 822, 823, 824, 825, 826,
	826, 827, 828, 429, 829, 830, 831, 829,
	830, 831, 429, 832, 832, 833, 834, 835,
	836, 837, 837, 838, 839, 429, 840, 840,
	429, 841, 841, 429, 842, 842, 429, 843,
	843, 844, 845, 846, 847, 848, 848, 849,
	850, 429, 851, 851, 852, 853, 854, 855,
	856, 856, 857, 858, 429, 859, 860, 861,
	862, 863, 864, 859, 860, 861, 862, 863,
	864, 429, 865, 865, 429, 866, 866, 429,
	867, 867, 429, 868, 868, 429, 869, 869,
	870, 871, 872, 873, 874, 874, 875, 876,
	429, 877, 877, 429, 878, 878, 879, 880,
	881, 882, 883, 883, 884, 885, 429, 886,
	886, 429, 887, 887, 888, 889, 890, 891,
	892, 892, 893, 894, 429, 895, 895, 429,
	896, 896, 897, 898, 899, 900, 901, 901,
	902, 903, 429, 904, 904, 429, 905, 905,
	429, 906, 906, 429, 907, 907, 908, 909,
	910, 911, 912, 912, 913, 914, 429, 915,
	915, 429, 916, 916, 429, 917, 917, 918,
	919, 920, 921, 922, 922, 923, 924, 429,
	925, 926, 927, 925, 926, 927, 429, 928,
	928, 429, 929, 929, 429, 930, 930, 931,
	932, 933, 934, 935, 935, 936, 937, 429,
	938, 938, 429, 939, 939, 940, 941, 942,
	943, 944, 944, 945, 946, 429, 947, 947,
	429, 948, 948, 429, 949, 429, 950, 950,
	951, 952, 954, 955, 956, 956, 957, 958,
	953, 429, 959, 959, 429, 960, 960, 429,
	961, 961, 962, 963, 964, 965, 966, 966,
	967, 968, 429, 969, 969, 429, 970, 970,
	429, 971, 971, 429, 972, 972, 429, 973,
	973, 429, 974, 974, 975, 976, 977, 978,
	979, 979, 980, 981, 429, 982, 982, 429,
	983, 983, 429, 984, 984, 429, 985, 985,
	986, 987, 988, 989, 990, 990, 991, 992,
	429, 993, 993, 429, 994, 994, 995, 996,
	997, 998, 999, 999, 1000, 1001, 429, 1003,
	1003, 1004, 1005, 1006, 1007, 1002, 1003, 1003,
	1004, 1005, 1006, 1007, 1009, 1008, 1010, 1010,
	1011, 1012, 1014, 1015, 1013, 1008, 1017, 1017,
	1018, 1019, 1021, 1022, 1020, 1020, 1020, 1016,
	1023, 1023, 1023, 1016, 1024, 1024, 1025, 1026,
	1027, 1028, 1029, 1029, 1030, 1031, 1020, 1020,
	1020, 1016, 1033, 1032, 1016, 1035, 1034, 1002,
	1037, 1036, 1002, 1038, 1038, 1039, 1040, 1041,
	1042, 1002, 1038, 1038, 1039, 1040, 1043, 1041,
	1042, 1044, 1008, 1045, 1045, 1046, 1047, 1049,
	1049, 1050, 1051, 1048, 1008, 1052, 1052, 1053,
	1054, 1056, 1057, 1055, 1055, 1055, 1016, 1058,
	1058, 1058, 1016, 1059, 1059, 1060, 1061, 1062,
	1063, 1064, 1064, 1065, 1066, 1055, 1055, 1055,
	1016, 1068, 1067, 1016, 1070, 1069, 1002, 1071,
	1071, 1072, 1073, 1074, 1075, 1048, 1008, 1077,
	1076, 1002, 1079, 1080, 1081, 1082, 1083, 1084,
	1078, 1085, 1078, 1086, 1078, 1087, 1078, 1088,
	1088, 1088, 1088, 1088, 1088, 1078, 1089, 1078,
	1090, 1078, 1091, 1091, 1091, 1091, 1091, 1091,
	1078, 1092, 1078, 1093, 1078, 1094, 1095, 1078,
	1096, 1078, 1097, 1078, 1098, 1078, 1099, 1078,
	1100, 1100, 1100, 1100, 1100, 1100, 1078, 1101,
	1078, 1102, 1078, 1103, 1078, 1104, 1078, 1105,
	1105, 1105, 1105, 1105, 1105, 1078, 1106, 1078,
	1107, 1078, 1109, 1108, 1110, 1110, 1110, 1110,
	1110, 1110, 1111, 1108, 1112, 1078, 1113, 1078,
	1114, 1078, 1115, 1078, 1116, 1078, 1117, 1078,
	1118, 1078, 1119, 1078, 1120, 1078, 1121, 1078,
	1122, 1078, 1123, 1078, 1124, 1078, 1125, 1078,
	1126, 1126, 1126, 1126, 1126, 1126, 1078, 1127,
	1078, 1128, 1078, 1129, 1078, 1130, 1130, 1130,
	1130, 1130, 1130, 1078, 1132, 1132, 1133, 1134,
	1135, 1136, 1137, 1137, 1138, 1139, 1131, 1140,
	1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147,
	1148, 1149, 1150, 1151, 1152, 1152, 1153, 1154,
	1131, 1155, 1131, 1156, 1131, 1157, 1131, 1158,
	1131, 1131, 1160, 1131, 1131, 1131, 1159, 1161,
	1161, 1162, 1163, 1164, 1165, 1166, 1166, 1167,
	1168, 1131, 1170, 1169, 1131, 1171, 1131, 1172,
	1131, 1173, 1131, 1174, 1175, 1175, 1175, 1175,
	1131, 1176, 1176, 1176, 1176, 1131, 1177, 1177,
	1177, 1177, 1131, 1178, 1179, 1178, 1178, 1178,
	1131, 1180, 1181, 1180, 1180, 1180, 1131, 1182,
	1183, 1183, 1183, 1183, 1131, 1184, 1184, 1185,
	1186, 1187, 1188, 1189, 1189, 1190, 1191, 1131,
	1181, 1131, 1192, 1192, 1192, 1192, 1131, 1193,
	1194, 1193, 1193, 1193, 1131, 1195, 1196, 1195,
	1195, 1195, 1131, 1197, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1203, 1204, 1205, 1200, 1200,
	1200, 1131, 1196, 1131, 1206, 1131, 1207, 1131,
	1208, 1209, 1131, 1210, 1131, 1211, 1131, 1212,
	1131, 1213, 1131, 1214, 1131, 1216, 1217, 1217,
	1215, 1218, 1218, 1215, 1219, 1220, 1221, 1221,
	1215, 1222, 1222, 1215, 1223, 1223, 1224, 1225,
	1226, 1227, 1228, 1229, 1230, 1230, 1231, 1232,
	1227, 1215, 1233, 1233, 1215, 1234, 1131, 1235,
	1131, 1236, 1131, 1237, 1131, 1238, 1131, 1239,
	1240, 1240, 1240, 1240, 1215, 1241, 1241, 1241,
	1241, 1215, 1242, 1243, 1244, 1244, 1244, 1244,
	1215, 1245, 1245, 1245, 1245, 1215, 1246, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1253,
	1254, 1255, 1250, 1250, 1250, 1215, 1256, 1256,
	1256, 1256, 1215, 1257, 1131, 1258, 1131, 1260,
	1259, 1261, 1261, 1262, 1263, 1265, 1266, 1267,
	1268, 1268, 1269, 1270, 1264, 1259, 1131, 1131,
	1131, 1131, 1271, 1197, 1197, 1198, 1199, 1201,
	1202, 1203, 1203, 1204, 1205, 1131, 1272, 1131,
	1273, 1131, 1274, 1131, 1275, 1131, 1276, 1131,
	1277, 1131, 1278, 1131, 1279, 1131, 1280, 1131,
	1281, 1282, 1282, 1131, 1283, 1283, 1131, 1284,
	1285, 1131, 1286, 1286, 1131, 1287, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1293, 1294, 1295,
	1131, 1296, 1296, 1131, 1297, 1131, 1298, 1131,
	1299, 1131, 1300, 1131, 1301, 1131, 1302, 1131,
	1303, 1131, 1304, 1131, 1305, 1131, 1306, 1131,
	1307, 1131, 1308, 1131, 1309, 1131, 1310, 1131,
	1311, 1311, 1312, 1313, 1314, 1315, 1316, 1316,
	1317, 1318, 1131, 1319, 1131, 1320, 1131, 1321,
	1131, 1322, 1131, 1323, 1324, 1259, 1325, 1259,
	1326, 1327, 1259, 1328, 1328, 1329, 1330, 1332,
	1333, 1334, 1334, 1335, 1336, 1331, 1259, 1161,
	1161, 1162, 1163, 1164, 1165, 1166, 1166, 1167,
	1168, 1337, 1337, 1337, 1131, 1338, 1131, 1341,
	1342, 1343, 1344, 1345, 1341, 1342, 1343, 1344,
	1345, 1340, 1339, 1346, 1346, 1346, 1346, 1347,
	1339, 1348, 1349, 1348, 1349, 1339, 1350, 1350,
	1350, 1350, 1339, 1351, 1351, 1339, 1352, 1353,
	1352, 1352, 1352, 1339, 1354, 1354, 1339, 1355,
	1355, 1339, 1356, 1356, 1339, 1357, 1357, 1339,
	1358, 1339, 1359, 1339, 1360, 1360, 1339, 1361,
	1361, 1339, 1362, 1362, 1339, 1363, 1339, 1364,
	1364, 1364, 1364, 1339, 1365, 1366, 1365, 1366,
	1339, 1367, 1368, 1367, 1368, 1339, 1369, 1339,
	1370, 1370, 1339, 1371, 1371, 1339, 1372, 1372,
	1339, 1373, 1373, 1339, 1374, 1374, 1374, 1374,
	1339, 1375, 1375, 1339, 1376, 1376, 1339, 1377,
	1377, 1339, 1378, 1379, 1339, 1380, 1339, 1381,
	1339, 1382, 1382, 1339, 1383, 1383, 1339, 1384,
	1384, 1339, 1385, 1339, 1386, 1339, 1387, 1339,
	1388, 1388, 1388, 1388, 1339, 1389, 1339, 1390,
	1339, 1391, 1391, 1339, 1392, 1392, 1339, 1393,
	1393, 1339, 1394, 1339, 1395, 1339, 1396, 1339,
	1397, 1397, 1397, 1397, 1339, 1398, 1399, 1339,
	1400, 1339, 1401, 1339, 1402, 1339, 1403, 1339,
	1404, 1404, 1404, 1404, 1339, 1405, 1339, 1406,
	1339, 1407, 1407, 1407, 1407, 1339, 1408, 1408,
	1339, 1409, 1409, 1339, 1410, 1410, 1339, 1411,
	1411, 1339, 1412, 1412, 1339, 1413, 1413, 1339,
	1414, 1414, 1339, 1415, 1415, 1415, 1415, 1339,
	1416, 1416, 1339, 1417, 1417, 1339, 1418, 1418,
	1339, 1419, 1419, 1339, 1420, 1420, 1339, 1421,
	1421, 1339, 1422, 1423, 1422, 1423, 1339, 1424,
	1424, 1339, 1425, 1425, 1339, 1426, 1426, 1426,
	1426, 1339, 1427, 1427, 1339, 1428, 1428, 1339,
	1429, 1429, 1429, 1429, 1339, 1430, 1430, 1339,
	1431, 1431, 1339, 1432, 1433, 1432, 1433, 1339,
	1434, 1434, 1339, 1435, 1339, 1436, 1436, 1436,
	1436, 1339, 1437, 1437, 1339, 1438, 1438, 1339,
	1439, 1440, 1441, 1339, 1442, 1443, 1442, 1442,
	1442, 1339, 1444, 1444, 1339, 1445, 1445, 1339,
	1446, 1446, 1339, 1447, 1447, 1339, 1448, 1339,
	1449, 1339, 1450, 1450, 1339, 1451, 1451, 1339,
	1452, 1452, 1339, 1453, 1339, 1454, 1454, 1454,
	1454, 1339, 1455, 1339, 1456, 1339, 1457, 1457,
	1457, 1457, 1339, 1458, 1339, 1459, 1339, 1460,
	1460, 1460, 1460, 1339, 1463, 1464, 1465, 1466,
	1467, 1468, 1463, 1464, 1465, 1466, 1467, 1468,
	1462, 1461, 1469, 1469, 1469, 1469, 1470, 1461,
	1471, 1471, 1461, 1472, 1472, 1461, 1473, 1473,
	1461, 1474, 1474, 1461, 1475, 1475, 1461, 1476,
	1476, 1476, 1476, 1461, 1477, 1478, 1479, 1477,
	1478, 1479, 1461, 1480, 1480, 1461, 1481, 1481,
	1461, 1482, 1482, 1461, 1483, 1483, 1461, 1484,
	1484, 1461, 1485, 1485, 1485, 1485, 1461, 1486,
	1487, 1486, 1487, 1461, 1488, 1488, 1461, 1489,
	1489, 1489, 1489, 1461, 1490, 1490, 1461, 1491,
	1491, 1461, 1492, 1492, 1492, 1492, 1461, 1493,
	1493, 1461, 1494, 1494, 1461, 1495, 1495, 1461,
	1496, 1496, 1496, 1496, 1461, 1497, 1497, 1461,
	1498, 1498, 1461, 1499, 1499, 1499, 1499, 1461,
	1500, 1501, 1500, 1501, 1461, 1502, 1502, 1461,
	1503, 1503, 1503, 1503, 1461, 1504, 1504, 1461,
	1505, 1505, 1461, 1506, 1506, 1506, 1506, 1461,
	1507, 1507, 1461, 1508, 1508, 1461, 1509, 1509,
	1461, 1510, 1510, 1510, 1510, 1461, 1511, 1511,
	1461, 1512, 1512, 1461, 1513, 1513, 1513, 1513,
	1461, 1515, 1515, 1514, 1516, 1517, 1516, 1516,
	1516, 1517, 1514, 1519, 1519, 1519, 1519, 1519,
	1519, 1518, 1520, 1520, 1520, 1520, 1518, 1521,
	1521, 1521, 1521, 1521, 1521, 1518, 1522, 1522,
	1523, 1524, 1525, 1526, 1518, 1527, 1527, 1528,
	1529, 1530, 1530, 1530, 1531, 1532, 1530, 1530,
	1530, 1518, 1533, 1533, 1534, 1535, 1536, 1537,
	1518, 1539, 1539, 1540, 1541, 1543, 1544, 1542,
	1538, 1545, 1545, 1546, 1547, 1549, 1550, 1548,
	1538, 1551, 1551, 1552, 1553, 1555, 1556, 1554,
	1538, 1558, 1558, 1559, 1560, 1562, 1563, 1564,
	1565, 1566, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1561, 1557, 1569, 1569, 1570, 1571, 1573,
	1574, 1572, 1538, 1575, 1575, 1576, 1577, 1579,
	1580, 1581, 1582, 1583, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1578, 1557, 1586, 1586, 1587,
	1588, 1590, 1591, 1589, 1538, 1592, 1592, 1593,
	1594, 1596, 1597, 1598, 1599, 1600, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1595, 1557, 1603,
	1603, 1604, 1605, 1607, 1608, 1606, 1538, 1609,
	1609, 1611, 1612, 1613, 1614, 1615, 1611, 1612,
	1613, 1614, 1615, 1609, 1609, 1610, 1557, 1609,
	1609, 1609, 1609, 1616, 1557, 1618, 1619, 1620,
	1621, 1622, 1618, 1619, 1620, 1621, 1622, 1617,
	1557, 1623, 1623, 1623, 1623, 1624, 1557, 1626,
	1625, 1518, 1592, 1592, 1593, 1594, 1601, 1602,
	1627, 1557, 1629, 1630, 1631, 1632, 1633, 1629,
	1630, 1631, 1632, 1633, 1628, 1557, 1634, 1634,
	1635, 1636, 1638, 1639, 1637, 1557, 1641, 1640,
	1518, 1575, 1575, 1576, 1577, 1584, 1585, 1642,
	1557, 1644, 1645, 1646, 1647, 1648, 1644, 1645,
	1646, 1647, 1648, 1643, 1557, 1649, 1649, 1650,
	1651, 1653, 1654, 1652, 1557, 1656, 1655, 1518,
	1558, 1558, 1559, 1560, 1567, 1568, 1657, 1557,
	1659, 1660, 1661, 1662, 1663, 1659, 1660, 1661,
	1662, 1663, 1658, 1557, 1664, 1664, 1665, 1666,
	1668, 1669, 1667, 1557, 1671, 1670, 1518, 1673,
	1672, 1518, 1675, 1674, 1518, 1518, 1518, 1518,
	1518, 1676, 1677, 1677, 1678, 1679, 1680, 1681,
	1518, 1683, 1683, 1684, 1685, 1686, 1687, 1682,
	1682, 1682, 1518, 1688, 1688, 1688, 1688, 1518,
	1690, 1689, 1518, 1691, 1691, 1691, 1691, 1691,
	1691, 1518, 1692, 1692, 1693, 1694, 1695, 1696,
	1518, 1697, 1697, 1698, 1699, 1700, 1700, 1700,
	1701, 1702, 1700, 1700, 1700, 1518, 1703, 1703,
	1703, 1703, 1518, 1705, 1704, 1518, 1706, 1538,
	1707, 1707, 1708, 1709, 1711, 1712, 1710, 1538,
	1713, 1713, 1714, 1715, 1716, 1716, 1716, 1717,
	1718, 1716, 1716, 1716, 1518, 1719, 1719, 1719,
	1719, 1518, 1721, 1720, 1518, 1723, 1723, 1723,
	1723, 1722, 1724, 1724, 1725, 1726, 1727, 1728,
	1729, 1729, 1730, 1731, 1723, 1733, 1733, 1734,
	1735, 1736, 1737, 1738, 1738, 1739, 1740, 1732,
	1732, 1732, 1723, 1742, 1741, 1723, 1743, 1743,
	1743, 1743, 1514, 1744, 1745, 1744, 1744, 1744,
	1745, 1745, 1745, 1514, 1747, 1746, 1748, 1748,
	1749, 1750, 1752, 1753, 1751, 1746, 1754, 1754,
	1755, 1756, 1758, 1759, 1760, 1761, 1757, 1746,
	1762, 1762, 1763, 1764, 1766, 1767, 1765, 1746,
	1768, 1768, 1769, 1770, 1758, 1759, 1772, 1773,
	1771, 1746, 1774, 1774, 1775, 1776, 1777, 1779,
	1780, 1778, 1746, 1781, 1781, 1782, 1783, 1758,
	1759, 1784, 1785, 1746, 1786, 1786, 1787, 1788,
	1789, 1790, 1746, 1786, 1786, 1787, 1788, 1789,
	1790, 1791, 1746, 1792, 1792, 1793, 1794, 1796,
	1797, 1795, 1746, 1798, 1798, 1799, 1800, 1802,
	1803, 1804, 1805, 1801, 1746, 1806, 1806, 1807,
	1808, 1810, 1811, 1809, 1746, 1812, 1812, 1813,
	1814, 1802, 1803, 1816, 1817, 1815, 1746, 1818,
	1818, 1819, 1820, 1821, 1823, 1824, 1822, 1746,
	1825, 1825, 1826, 1827, 1802, 1803, 1828, 1829,
	1746, 1830, 1830, 1831, 1832, 1833, 1834, 1746,
	1830, 1830, 1831, 1832, 1835, 1833, 1834, 1836,
	1746, 1837, 1746, 1838, 1838, 1839, 1840, 1841,
	1843, 1844, 1845, 1846, 1846, 1847, 1848, 1842,
	1746, 1849, 1849, 1850, 1851, 1853, 1854, 1855,
	1855, 1856, 1857, 1852, 1746, 1858, 1858, 1859,
	1860, 1861, 1863, 1864, 1865, 1866, 1866, 1867,
	1868, 1862, 1746, 1869, 1869, 1870, 1871, 1873,
	1874, 1855, 1855, 1875, 1876, 1872, 1746, 1877,
	1877, 1878, 1879, 1880, 1882, 1883, 1884, 1885,
	1885, 1886, 1887, 1881, 1746, 1888, 1888, 1889,
	1890, 1892, 1893, 1855, 1855, 1894, 1895, 1891,
	1746, 1896, 1896, 1897, 1898, 1899, 1896, 1901,
	1902, 1903, 1903, 1904, 1905, 1900, 1746, 1906,
	1906, 1907, 1908, 1909, 1910, 1855, 1855, 1911,
	1912, 1746, 1914, 1913, 1746, 1915, 1915, 1916,
	1917, 1915, 1919, 1920, 1921, 1921, 1922, 1923,
	1918, 1746, 1896, 1896, 1897, 1898, 1896, 1901,
	1902, 1903, 1903, 1904, 1905, 1924, 1746, 1926,
	1925, 1746, 1927, 1927, 1928, 1929, 1931, 1932,
	1933, 1934, 1934, 1935, 1936, 1930, 1746, 1877,
	1877, 1878, 1879, 1882, 1883, 1884, 1885, 1885,
	1886, 1887, 1937, 1746, 1888, 1888, 1889, 1890,
	1892, 1893, 1855, 1855, 1894, 1895, 1746, 1939,
	1938, 1746, 1940, 1940, 1941, 1942, 1944, 1945,
	1946, 1947, 1947, 1948, 1949, 1943, 1746, 1858,
	1858, 1859, 1860, 1863, 1864, 1865, 1866, 1866,
	1867, 1868, 1950, 1746, 1869, 1869, 1870, 1871,
	1873, 1874, 1855, 1855, 1875, 1876, 1746, 1952,
	1951, 1746, 1953, 1953, 1954, 1955, 1957, 1958,
	1959, 1960, 1960, 1961, 1962, 1956, 1746, 1838,
	1838, 1839, 1840, 1843, 1844, 1845, 1846, 1846,
	1847, 1848, 1963, 1746, 1849, 1849, 1850, 1851,
	1853, 1854, 1855, 1855, 1856, 1857, 1746, 1965,
	1964, 1746, 1966, 1966, 1967, 1968, 1969, 1970,
	1746, 1972, 1971, 1746, 1973, 1973, 1974, 1975,
	1977, 1978, 1976, 1746, 1818, 1818, 1819, 1820,
	1823, 1824, 1979, 1746, 1981, 1980, 1746, 1983,
	1982, 1746, 1985, 1984, 1746, 1986, 1986, 1987,
	1988, 1989, 1990, 1746, 1992, 1991, 1746, 1993,
	1993, 1994, 1995, 1997, 1998, 1996, 1746, 1774,
	1774, 1775, 1776, 1779, 1780, 1999, 1746, 2001,
	2000, 1746, 2003, 2002, 1746, 2004, 1538, 2005,
	2005, 2006, 2007, 2009, 2010, 2008, 1538, 2011,
	2011, 2012, 2013, 2015, 2016, 2014, 1538, 2017,
	2017, 2018, 2019, 2021, 2022, 2020, 1538, 2023,
	2023, 2024, 2025, 2027, 2028, 2026, 1538, 2029,
	2029, 2030, 2031, 2033, 2034, 2032, 1538, 2035,
	2035, 2036, 2037, 2038, 2038, 2038, 2039, 2040,
	2038, 2038, 2038, 1518, 2041, 2041, 2041, 2041,
	1518, 2043, 2042, 1518, 2045, 2044, 1518, 2047,
	2046, 1518, 2048, 1538, 2049, 2049, 2050, 2051,
	2053, 2054, 2052, 1538, 2055, 2055, 2056, 2057,
	2059, 2060, 2058, 1538, 2061, 2061, 2062, 2063,
	2065, 2066, 2064, 1538, 2068, 2068, 2069, 2070,
	2071, 2072, 2067, 2067, 2067, 1518, 2073, 2073,
	2074, 2075, 2076, 2077, 1518, 2079, 2079, 2080,
	2081, 2082, 2083, 2078, 2078, 2078, 1518, 2084,
	2084, 2085, 2086, 2087, 2088, 1518, 2090, 2090,
	2091, 2092, 2093, 2094, 2089, 2089, 2089, 1518,
	2095, 2095, 2096, 2097, 2098, 2099, 1518, 2100,
	2100, 2101, 2102, 2103, 2103, 2103, 2104, 2105,
	2103, 2103, 2103, 1518, 2106, 2106, 2106, 2106,
	1518, 2108, 2107, 1518, 2110, 2109, 1518, 2112,
	2111, 1518, 2114, 2113, 1518, 2116, 2115, 1518,
	2117, 2117, 2117, 1518, 2118, 2118, 2119, 2120,
	2121, 2122, 1518, 2118, 2118, 2119, 2120, 2121,
	2122, 2123, 1538, 2124, 2124, 2125, 2126, 2128,
	2129, 2127, 1538, 2130, 2130, 2131, 2132, 2134,
	2135, 2133, 2133, 2133, 1518, 2136, 2136, 2137,
	2138, 2139, 2140, 1518, 2136, 2136, 2137, 2138,
	2141, 2139, 2140, 2141, 2141, 2141, 1518, 2142,
	2142, 1518, 2144, 2143, 1518, 2146, 2145, 1518,
	2148, 2147, 1518, 2150, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2158, 2159, 2160,
	2149, 2161, 2162, 2149, 2163, 2149, 2165, 2165,
	2164, 2167, 2166, 2164, 2168, 2149, 2169, 2169,
	2170, 2171, 2173, 2174, 2175, 2175, 2176, 2177,
	2172, 2149, 2179, 2178, 1518, 2180, 2149, 2181,
	2181, 2181, 2181, 2164, 2183, 2182, 2182, 2182,
	2164, 2184, 1538, 2185, 2185, 2186, 2187, 2189,
	2190, 2188, 1538, 2191, 2191, 2192, 2193, 2195,
	2196, 2194, 2194, 2194, 1518, 2197, 2197, 2198,
	2199, 2200, 2201, 1518, 2197, 2197, 2198, 2199,
	2200, 2201, 2202, 1538, 2203, 2203, 2204, 2205,
	2207, 2208, 2206, 1538, 2210, 2210, 2211, 2212,
	2214, 2215, 2213, 2213, 2213, 2209, 2216, 2216,
	2216, 2209, 2217, 2217, 2218, 2219, 2220, 2221,
	2222, 2222, 2223, 2224, 2213, 2213, 2213, 2209,
	2226, 2225, 2209, 2228, 2227, 1518, 2230, 2229,
	1518, 2232, 2231, 1518, 2233, 1538, 2234, 2234,
	2235, 2236, 2238, 2239, 2237, 1538, 2240, 2240,
	2241, 2242, 2244, 2245, 2243, 1538, 2246, 2246,
	2247, 2248, 2250, 2251, 2249, 1538, 2252, 2252,
	2253, 2254, 2256, 2257, 2255, 2255, 2255, 2209,
	2258, 2258, 2258, 2209, 2259, 2259, 2260, 2261,
	2262, 2263, 2264, 2264, 2265, 2266, 2255, 2255,
	2255, 2209, 2268, 2267, 2209, 2270, 2269, 1518,
	2272, 2271, 1518, 2273, 1538, 2274, 2274, 2275,
	2276, 2278, 2279, 2277, 1538, 2281, 2281, 2282,
	2283, 2284, 2285, 2286, 2287, 2288, 2289, 2280,
	2290, 2290, 2291, 2292, 2293, 2294, 2280, 2290,
	2290, 2291, 2292, 2293, 2294, 2296, 2295, 2297,
	2297, 2298, 2299, 2301, 2302, 2300, 2295, 2303,
	2303, 2304, 2305, 2306, 2307, 2308, 2280, 2310,
	2310, 2311, 2312, 2313, 2313, 2314, 2315, 2316,
	2316, 2317, 2318, 2319, 2319, 2319, 2319, 2320,
	2321, 2319, 2319, 2322, 2323, 2324, 2325, 2319,
	2319, 2326, 2327, 2328, 2329, 2319, 2319, 2330,
	2331, 2309, 2310, 2310, 2311, 2312, 2333, 2320,
	2321, 2333, 2333, 2333, 2332, 2319, 2319, 2332,
	2335, 2334, 2332, 2313, 2313, 2314, 2315, 2319,
	2319, 2319, 2319, 2324, 2325, 2319, 2319, 2326,
	2327, 2332, 2337, 2336, 2332, 2333, 2310, 2310,
	2311, 2312, 2313, 2313, 2314, 2315, 2316, 2316,
	2317, 2318, 2319, 2319, 2319, 2319, 2320, 2321,
	2319, 2319, 2322, 2323, 2324, 2325, 2319, 2319,
	2326, 2327, 2328, 2329, 2319, 2319, 2330, 2331,
	2333, 2333, 2333, 2332, 2335, 2337, 2339, 2334,
	2336, 2338, 2332, 2341, 2340, 2280, 2343, 2342,
	2280, 2344, 2344, 2345, 2346, 2347, 2348, 2280,
	2344, 2344, 2345, 2346, 2347, 2348, 2349, 2295,
	2350, 2350, 2351, 2352, 2354, 2355, 2353, 2295,
	2357, 2357, 2358, 2359, 2360, 2361, 2362, 2360,
	2356, 2364, 2365, 2365, 2366, 2367, 2368, 2368,
	2369, 2370, 2371, 2371, 2372, 2373, 2374, 2374,
	2374, 2374, 2375, 2376, 2374, 2374, 2377, 2378,
	2379, 2380, 2374, 2374, 2381, 2382, 2383, 2384,
	2374, 2374, 2385, 2386, 2364, 2363, 2388, 2387,
	2280, 2390, 2389, 2280, 2391, 2391, 2392, 2393,
	2394, 2395, 2280, 2391, 2391, 2392, 2393, 2394,
	2395, 2396, 2295, 2397, 2397, 2398, 2399, 2401,
	2402, 2400, 2295, 2403, 2403, 2404, 2405, 2406,
	2407, 2408, 2406, 2406, 2406, 2356, 2409, 2410,
	2410, 2411, 2412, 2413, 2413, 2414, 2415, 2416,
	2416, 2417, 2418, 2419, 2419, 2419, 2419, 2420,
	2421, 2419, 2419, 2422, 2423, 2424, 2425, 2419,
	2419, 2426, 2427, 2428, 2429, 2419, 2419, 2430,
	2431, 2409, 2409, 2409, 2363, 2433, 2432, 2280,
	2435, 2434, 2280, 2436, 2436, 2437, 2438, 2439,
	2440, 2280, 2436, 2436, 2437, 2438, 2439, 2440,
	2441, 2295, 2442, 2442, 2443, 2444, 2446, 2447,
	2445, 2295, 2448, 2448, 2449, 2450, 2451, 2451,
	2451, 2452, 2453, 2451, 2451, 2451, 2280, 2454,
	2454, 2455, 2456, 2457, 2457, 2458, 2459, 2460,
	2460, 2461, 2462, 2463, 2463, 2463, 2463, 2464,
	2465, 2463, 2463, 2466, 2467, 2468, 2469, 2463,
	2463, 2470, 2471, 2472, 2473, 2463, 2463, 2474,
	2475, 2309, 2477, 2476, 2280, 2479, 2478, 2280,
	2481, 2480, 1518, 2483, 2484, 2485, 2486, 2487,
	2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495,
	2496, 2497, 2498, 2499, 2483, 2484, 2485, 2486,
	2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494,
	2495, 2496, 2497, 2498, 2499, 2482, 2500, 2500,
	2501, 2502, 2503, 2504, 2505, 2503, 2504, 2505,
	2506, 2507, 2482, 2508, 2508, 2509, 2510, 2512,
	2513, 2511, 2511, 2511, 1518, 2514, 2514, 2515,
	2516, 2517, 2518, 1518, 2514, 2514, 2515, 2516,
	2517, 2518, 2519, 1538, 2520, 2520, 2521, 2522,
	2524, 2525, 2523, 1538, 2526, 2526, 2527, 2528,
	2530, 2531, 2529, 1538, 2532, 2532, 2533, 2534,
	2536, 2537, 2535, 1538, 2539, 2539, 2540, 2541,
	2543, 2544, 2542, 2538, 2545, 2545, 2546, 2547,
	2549, 2550, 2548, 2538, 2551, 2551, 2552, 2553,
	2555, 2556, 2554, 2538, 2557, 2557, 2558, 2559,
	2561, 2562, 2560, 2538, 2563, 2563, 2564, 2565,
	2567, 2568, 2566, 1538, 2569, 2569, 2570, 2571,
	2573, 2574, 2572, 1538, 2575, 2575, 2576, 2577,
	2578, 2578, 2578, 2579, 2580, 2578, 2578, 2578,
	1518, 2581, 2581, 2582, 2583, 2584, 2585, 1518,
	2586, 2586, 2587, 2588, 2589, 2590, 2591, 2589,
	2589, 2589, 1518, 2592, 2592, 1518, 2594, 2593,
	1518, 2596, 2595, 1518, 2598, 2597, 1518, 2600,
	2599, 1518, 2602, 2601, 1518, 2604, 2603, 1518,
	2606, 2605, 1518, 2608, 2607, 1518, 2609, 2609,
	2482, 2610, 2610, 2482, 2611, 2611, 2612, 2613,
	2614, 2615, 2482, 2616, 2616, 2482, 2617, 2617,
	2482, 2618, 2618, 2482, 2619, 2619, 2620, 2621,
	2622, 2623, 2482, 2624, 2624, 2482, 2625, 2625,
	2626, 2627, 2628, 2629, 2482, 2630, 2631, 2632,
	2633, 2634, 2630, 2631, 2632, 2633, 2634, 2482,
	2635, 2635, 2482, 2636, 2636, 2637, 2638, 2639,
	2640, 2482, 2641, 2642, 2641, 2642, 2482, 2643,
	2643, 2482, 2644, 2644, 2482, 2645, 2645, 2482,
	2646, 2646, 2482, 2647, 2647, 2648, 2649, 2650,
	2651, 2482, 2652, 2652, 2653, 2654, 2655, 2656,
	2482, 2657, 2657, 2482, 2658, 2658, 2482, 2659,
	2659, 2660, 2661, 2662, 2663, 2482, 2664, 2664,
	2482, 2665, 2665, 2482, 2666, 2666, 2482, 2667,
	2667, 2668, 2669, 2670, 2671, 2482, 2672, 2672,
	2482, 2673, 2673, 2482, 2674, 2674, 2482, 2675,
	2675, 2676, 2677, 2678, 2679, 2482, 2680, 2681,
	2682, 2680, 2681, 2682, 2482, 2683, 2683, 2482,
	2684, 2684, 2482, 2685, 2685, 2482, 2686, 2686,
	2687, 2688, 2689, 2690, 2482, 2691, 2692, 2691,
	2692, 2482, 2693, 2693, 2482, 2694, 2694, 2482,
	2695, 2695, 2696, 2697, 2698, 2699, 2482, 2700,
	2700, 2482, 2701, 2701, 2482, 2702, 2702, 2482,
	2703, 2703, 2704, 2705, 2706, 2707, 2482, 2708,
	2708, 2709, 2710, 2711, 2712, 2482, 2713, 2713,
	2482, 2714, 2714, 2482, 2715, 2716, 2482, 2717,
	2482, 2718, 2718, 2719, 2720, 2721, 2722, 2482,
	2723, 2482, 2724, 2724, 2725, 2726, 2727, 2728,
	2482, 2729, 2730, 2729, 2730, 2482, 2731, 2731,
	2482, 2732, 2732, 2482, 2733, 2733, 2482, 2734,
	2734, 2735, 2736, 2737, 2738, 2482, 2739, 2739,
	2482, 2740, 2740, 2482, 2741, 2741, 2482, 2742,
	2742, 2743, 2744, 2745, 2746, 2482, 2747, 2747,
	2482, 2748, 2748, 2482, 2749, 2749, 2482, 2750,
	2750, 2482, 2751, 2751, 2482, 2752, 2752, 2482,
	2753, 2753, 2482, 2754, 2754, 2755, 2756, 2757,
	2758, 2482, 2759, 2760, 2759, 2760, 2482, 2761,
	2761, 2482, 2762, 2762, 2763, 2764, 2765, 2766,
	2482, 2767, 2767, 2768, 2769, 2770, 2771, 2482,
	2772, 2773, 2774, 2775, 2774, 2775, 2482, 2776,
	2482, 2777, 2777, 2778, 2779, 2780, 2781, 2482,
	2782, 2482, 2783, 2783, 2784, 2785, 2786, 2787,
	2482, 2788, 2788, 2482, 2789, 2789, 2790, 2791,
	2792, 2793, 2482, 2794, 2794, 2795, 2796, 2797,
	2798, 2482, 2799, 2800, 2799, 2800, 2482, 2801,
	2801, 2482, 2802, 2802, 2482, 2803, 2803, 2482,
	2804, 2804, 2805, 2806, 2807, 2808, 2482, 2809,
	2809, 2810, 2811, 2812, 2813, 2482, 2814, 2815,
	2816, 2814, 2815, 2816, 2482, 2817, 2817, 2482,
	2818, 2818, 2482, 2819, 2819, 2482, 2820, 2820,
	2821, 2822, 2823, 2824, 2482, 2825, 2825, 2482,
	2826, 2826, 2827, 2828, 2829, 2830, 2482, 2831,
	2831, 2832, 2833, 2834, 2834, 2835, 2836, 2482,
	2837, 2837, 2482, 2838, 2838, 2839, 2840, 2841,
	2842, 2843, 2482, 2844, 2844, 2845, 2846, 2847,
	2847, 2848, 2849, 2482, 2850, 2850, 2482, 2851,
	2851, 2482, 2852, 2852, 2482, 2853, 2853, 2482,
	2854, 2854, 2855, 2856, 2857, 2858, 2482, 2859,
	2859, 2482, 2860, 2860, 2482, 2861, 2861, 2482,
	2862, 2862, 2482, 2863, 2863, 2482, 2864, 2864,
	2482, 2865, 2865, 2482, 2866, 2866, 2482, 2867,
	2867, 2482, 2868, 2868, 2869, 2870, 2871, 2872,
	2482, 2873, 2873, 2482, 2874, 2874, 2482, 2875,
	2875, 2876, 2877, 2878, 2879, 2482, 2880, 2881,
	2882, 2880, 2881, 2882, 2482, 2883, 2883, 2884,
	2885, 2886, 2887, 2482, 2888, 2888, 2482, 2889,
	2889, 2482, 2890, 2890, 2482, 2891, 2891, 2892,
	2893, 2894, 2895, 2482, 2896, 2896, 2897, 2898,
	2899, 2900, 2482, 2901, 2902, 2903, 2904, 2905,
	2906, 2901, 2902, 2903, 2904, 2905, 2906, 2482,
	2907, 2907, 2482, 2908, 2908, 2482, 2909, 2909,
	2482, 2910, 2910, 2482, 2911, 2911, 2912, 2913,
	2914, 2915, 2482, 2916, 2916, 2482, 2917, 2917,
	2918, 2919, 2920, 2921, 2482, 2922, 2922, 2482,
	2923, 2923, 2924, 2925, 2926, 2927, 2482, 2928,
	2928, 2482, 2929, 2929, 2930, 2931, 2932, 2933,
	2482, 2934, 2934, 2482, 2935, 2935, 2482, 2936,
	2936, 2482, 2937, 2937, 2938, 2939, 2940, 2941,
	2482, 2942, 2942, 2482, 2943, 2943, 2482, 2944,
	2944, 2945, 2946, 2947, 2948, 2482, 2949, 2950,
	2951, 2949, 2950, 2951, 2482, 2952, 2952, 2482,
	2953, 2953, 2482, 2954, 2954, 2955, 2956, 2957,
	2958, 2482, 2959, 2959, 2482, 2960, 2960, 2961,
	2962, 2963, 2964, 2482, 2965, 2965, 2482, 2966,
	2966, 2482, 2968, 2967, 2969, 2969, 2970, 2971,
	2973, 2974, 2972, 2967, 2975, 2975, 2482, 2976,
	2976, 2482, 2977, 2977, 2978, 2979, 2980, 2981,
	2482, 2982, 2982, 2482, 2983, 2983, 2482, 2984,
	2984, 2482, 2985, 2985, 2482, 2986, 2986, 2482,
	2987, 2987, 2988, 2989, 2990, 2991, 2482, 2992,
	2992, 2992, 2992, 2992, 2992, 1518, 2993, 2993,
	2993, 2993, 1518, 2994, 2994, 2994, 2994, 1518,
	2995, 1538, 2996, 2996, 2997, 2998, 3000, 3001,
	2999, 1538, 3002, 3002, 3003, 3004, 3006, 3007,
	3005, 1538, 3008, 3008, 3009, 3010, 3012, 3013,
	3011, 1538, 3014, 3014, 3015, 3016, 3018, 3019,
	3017, 3017, 3017, 1518, 3020, 3020, 3021, 3022,
	3023, 3024, 1518, 3020, 3020, 3021, 3022, 3025,
	3023, 3024, 3025, 3025, 3025, 1518, 3026, 3026,
	1518, 3028, 3027, 1518, 3030, 3029, 1518, 3032,
	3031, 1518, 3033, 3033, 3033, 3033, 1518, 3034,
	3034, 1518, 3035, 1538, 3036, 3036, 3037, 3038,
	3040, 3041, 3039, 1538, 3042, 3042, 3043, 3044,
	3046, 3047, 3045, 1538, 3048, 3048, 3049, 3050,
	3052, 3053, 3051, 1538, 3054, 3054, 3055, 3056,
	3058, 3059, 3057, 1538, 3060, 3060, 3061, 3062,
	3064, 3065, 3063, 1538, 3066, 3066, 3067, 3068,
	3069, 3071, 3072, 3070, 3070, 3070, 2209, 3073,
	3073, 3074, 3075, 3076, 3077, 2209, 3079, 3079,
	3080, 3081, 3083, 3084, 3082, 3082, 3082, 3078,
	3085, 3085, 3085, 3078, 3087, 3086, 3086, 3086,
	3078, 3088, 3088, 3088, 3078, 3090, 3089, 3089,
	3089, 3078, 3092, 3091, 3091, 3091, 3078, 3093,
	3093, 3093, 3078, 3095, 3094, 3094, 3094, 3078,
	3096, 3096, 3096, 3096, 3097, 3097, 3097, 3078,
	3098, 3098, 3098, 3098, 1518, 3099, 3078, 3095,
	3078, 3092, 3078, 3100, 3078, 3090, 3078, 3102,
	3101, 1518, 3103, 3103, 3103, 2209, 3073, 3073,
	3074, 3075, 3076, 3077, 3104, 3104, 3104, 2209,
	3106, 3105, 1518, 3108, 3107, 1518, 3110, 3109,
	1518, 3111, 1538, 3112, 3112, 3113, 3114, 3116,
	3117, 3115, 1538, 3118, 3118, 3119, 3120, 3122,
	3123, 3121, 1538, 3124, 3124, 3125, 3126, 3128,
	3129, 3127, 1538, 3130, 3130, 3131, 3132, 3134,
	3135, 3133, 1538, 3136, 3136, 3137, 3138, 3140,
	3141, 3139, 1538, 3142, 3142, 3143, 3144, 3145,
	3147, 3148, 3146, 3146, 3146, 2209, 3149, 3149,
	3149, 3149, 2209, 3150, 3150, 3150, 2209, 3149,
	3149, 3149, 3149, 3151, 3151, 3151, 2209, 3153,
	3152, 1518, 3155, 3154, 1518, 3157, 3156, 1518,
	3158, 1538, 3159, 3159, 3160, 3161, 3163, 3164,
	3162, 1538, 3165, 3165, 3166, 3167, 3169, 3170,
	3168, 1538, 3171, 3171, 3172, 3173, 3175, 3176,
	3174, 1538, 3177, 3177, 3178, 3179, 3181, 3182,
	3180, 1538, 3183, 3183, 3184, 3185, 3187, 3188,
	3186, 1538, 3189, 3189, 3190, 3191, 3193, 3194,
	3192, 3192, 3192, 2209, 3195, 3195, 3195, 2209,
	3196, 3196, 3197, 3198, 3199, 3200, 3201, 3201,
	3202, 3203, 3192, 3192, 3192, 2209, 3205, 3204,
	2209, 3207, 3206, 1518, 3209, 3208, 1518, 3211,
	3210, 1518, 3212, 1538, 3213, 3213, 3214, 3215,
	3217, 3218, 3216, 1538, 3219, 3219, 3220, 3221,
	3223, 3224, 3222, 1538, 3225, 3225, 3225, 3225,
	3226, 1538, 3227, 3227, 3227, 3227, 1518, 3229,
	3228, 1518, 3230, 1538, 3231, 3231, 3232, 3233,
	3235, 3236, 3234, 1538, 3237, 3237, 3238, 3239,
	3241, 3242, 3240, 1538, 3243, 3243, 3244, 3245,
	3247, 3248, 3246, 1538, 3249, 3249, 3250, 3251,
	3253, 3254, 3252, 1538, 3255, 3255, 3256, 3257,
	3259, 3260, 3258, 1538, 3261, 3261, 3262, 3263,
	3265, 3266, 3264, 3264, 3264, 2209, 3267, 3267,
	3267, 2209, 3268, 3268, 3269, 3270, 3271, 3272,
	3273, 3273, 3274, 3275, 3264, 3264, 3264, 2209,
	3277, 3276, 2209, 3279, 3278, 1518, 3281, 3280,
	1518, 3283, 3282, 1518, 3284, 1538, 3285, 3285,
	3286, 3287, 3289, 3290, 3288, 1538, 3291, 3291,
	3292, 3293, 3294, 3295, 3296, 3294, 1514, 3297,
	3298, 3297, 3297, 3297, 3298, 1514, 3300, 3299,
	1518, 3301, 1538, 3302, 3302, 3303, 3304, 3306,
	3307, 3305, 1538, 3308, 3308, 3309, 3310, 3312,
	3313, 3311, 3311, 3311, 2209, 3314, 3314, 3314,
	2209, 3315, 3315, 3315, 2209, 3316, 3316, 3316,
	2209, 3318, 3317, 3319, 3319, 3319, 2209, 3320,
	3320, 3320, 2209, 3321, 3321, 3321, 2209, 3322,
	3322, 3322, 2209, 3324, 3318, 3324, 3324, 3324,
	3323, 3326, 3325, 1518, 3327, 3327, 3327, 2209,
	3328, 3328, 3328, 2209, 3330, 3329, 3331, 3331,
	3331, 2209, 3332, 3332, 3332, 2209, 3333, 3330,
	3333, 3333, 3333, 3329, 3334, 3334, 3334, 2209,
	3335, 3335, 3335, 2209, 3336, 3329, 3337, 3337,
	3337, 2209, 3338, 3338, 3338, 2209, 3339, 3336,
	3339, 3339, 3339, 3329, 3340, 1538, 3341, 3341,
	3342, 3343, 3345, 3346, 3344, 1538, 3347, 3347,
	3348, 3349, 3351, 3352, 3350, 1538, 3353, 3353,
	3354, 3355, 3357, 3358, 3356, 1538, 3360, 3360,
	3361, 3362, 3363, 3364, 3359, 3359, 3359, 1518,
	3365, 3365, 3365, 3365, 1518, 3367, 3366, 1518,
	3369, 3368, 1518, 3370, 1538, 3371, 3371, 3372,
	3373, 3375, 3376, 3374, 1538, 3378, 3378, 3379,
	3380, 3381, 3382, 3377, 3377, 3377, 1518, 3383,
	3383, 3384, 3385, 3386, 3387, 1518, 3389, 3389,
	3390, 3391, 3392, 3393, 3388, 3388, 3388, 1518,
	3394, 3394, 3394, 3394, 1518, 3396, 3395, 1518,
	3398, 3397, 1518, 3399, 1538, 3400, 3400, 3401,
	3402, 3404, 3405, 3403, 1538, 3406, 3406, 3407,
	3408, 3409, 3409, 3409, 3410, 3411, 3409, 3409,
	3409, 1518, 3412, 3412, 3412, 3412, 1518, 3413,
	3413, 3413, 3413, 1518, 3415, 3414, 1518, 3416,
	1538, 3417, 3417, 3418, 3419, 3421, 3422, 3420,
	1538, 3424, 3424, 3425, 3426, 3427, 3428, 3423,
	3423, 3423, 1518, 3429, 3429, 3430, 3431, 3432,
	3433, 1518, 3434, 3434, 3435, 3436, 3438, 3439,
	3437, 3437, 3437, 1518, 3440, 3440, 3440, 3440,
	1518, 3442, 3441, 1518, 3444, 3443, 1518, 3445,
	3446, 3447, 3448, 3449, 3450, 3451, 3452, 3453,
	3454, 3455, 3456, 3457, 3458, 3459, 3460, 3461,
	3445, 3446, 3447, 3448, 3449, 3450, 3451, 3452,
	3453, 3454, 3455, 3456, 3457, 3458, 3459, 3460,
	3461, 23, 3463, 3463, 3464, 3465, 3466, 3467,
	3468, 3466, 3467, 3468, 3469, 3470, 3471, 3471,
	3472, 3473, 3462, 3475, 3475, 3476, 3477, 3478,
	3479, 3480, 3474, 3474, 3481, 3482, 3474, 3474,
	3474, 1518, 3484, 3484, 3485, 3486, 3487, 3488,
	3487, 3488, 3483, 3489, 3489, 3490, 3491, 3492,
	3493, 3492, 3493, 31, 3495, 3494, 3497, 3496,
	3499, 3498, 1518, 3500, 3500, 3501, 3502, 3478,
	3487, 3488, 3487, 3503, 3504, 3505, 3487, 3506,
	3474, 3474, 3474, 3483, 3507, 3507, 3508, 3509,
	3478, 3492, 3493, 3492, 3510, 3511, 3512, 3492,
	3513, 3474, 3474, 3474, 3483, 3495, 3515, 3494,
	3514, 3483, 3484, 3487, 3484, 3485, 3486, 3488,
	3516, 3487, 3516, 3517, 3518, 3519, 3498, 3483,
	3489, 3492, 3489, 3490, 3491, 3493, 3520, 3492,
	3520, 3521, 3522, 3523, 3498, 3483, 3524, 3524,
	3525, 3526, 3527, 3528, 3527, 3528, 3494, 3494,
	3494, 3483, 3529, 3529, 3530, 3531, 3495, 3532,
	3495, 3532, 3494, 3494, 3494, 31, 3524, 3527,
	3524, 3525, 3526, 3528, 3533, 3527, 3533, 3534,
	3535, 3519, 3494, 3514, 3483, 3529, 3495, 3529,
	3530, 3531, 3532, 3536, 3495, 3536, 3537, 3538,
	3523, 3494, 3514, 3483, 3539, 3539, 23, 3540,
	3540, 23, 3541, 3541, 3542, 3543, 3544, 3545,
	3546, 3546, 3547, 3548, 3462, 3549, 3549, 23,
	3550, 3550, 23, 3551, 3551, 23, 3552, 3552,
	3553, 3554, 3555, 3556, 3557, 3557, 3558, 3559,
	3462, 3560, 3560, 23, 3561, 3561, 3562, 3563,
	3564, 3565, 3566, 3566, 3567, 3568, 3462, 3569,
	3570, 3571, 3572, 3573, 3569, 3570, 3571, 3572,
	3573, 23, 3574, 3575, 3574, 3575, 23, 3576,
	3576, 3577, 3578, 3579, 3580, 3581, 3581, 3582,
	3583, 3462, 3584, 3584, 23, 3585, 3585, 3586,
	3587, 3588, 3589, 3590, 3590, 3591, 3592, 3462,
	3593, 3594, 3593, 3594, 23, 3595, 3595, 23,
	3596, 3596, 23, 3597, 3597, 23, 3598, 3598,
	23, 3599, 3599, 3600, 3601, 3602, 3603, 3604,
	3604, 3605, 3606, 3462, 3607, 3607, 3608, 3609,
	3610, 3611, 3612, 3612, 3613, 3614, 3462, 3615,
	3615, 23, 3616, 3616, 23, 3617, 3617, 3618,
	3619, 3620, 3621, 3622, 3622, 3623, 3624, 3462,
	3625, 3625, 23, 3626, 3626, 23, 3627, 3627,
	23, 3628, 3628, 3629, 3630, 3631, 3632, 3633,
	3633, 3634, 3635, 3462, 3636, 3636, 23, 3637,
	3637, 23, 3638, 3638, 23, 3639, 3639, 3640,
	3641, 3642, 3643, 3644, 3644, 3645, 3646, 3462,
	3647, 3648, 3649, 3647, 3648, 3649, 23, 3650,
	3650, 23, 3651, 3651, 23, 3652, 3652, 23,
	3653, 3653, 3654, 3655, 3656, 3657, 3658, 3658,
	3659, 3660, 3462, 3661, 3662, 3661, 3662, 23,
	3663, 3663, 23, 3664, 3664, 23, 3665, 3665,
	3666, 3667, 3668, 3669, 3670, 3670, 3671, 3672,
	3462, 3673, 3673, 23, 3674, 3674, 23, 3675,
	3675, 23, 3676, 3676, 3677, 3678, 3679, 3680,
	3681, 3681, 3682, 3683, 3462, 3684, 3684, 3685,
	3686, 3687, 3688, 3689, 3689, 3690, 3691, 3462,
	3692, 3692, 23, 3693, 3693, 23, 3694, 3695,
	23, 3696, 23, 3697, 3697, 3698, 3699, 3700,
	3701, 3702, 3702, 3703, 3704, 3462, 3705, 23,
	3706, 3706, 3707, 3708, 3709, 3710, 3711, 3711,
	3712, 3713, 3462, 3714, 3715, 3714, 3715, 23,
	3716, 3716, 23, 3717, 3717, 23, 3718, 3718,
	23, 3719, 3719, 3720, 3721, 3722, 3723, 3724,
	3724, 3725, 3726, 3462, 3727, 3727, 23, 3728,
	3728, 23, 3729, 3729, 23, 3730, 3730, 3731,
	3732, 3733, 3734, 3735, 3735, 3736, 3737, 3462,
	3738, 3738, 23, 3739, 3739, 23, 3740, 3740,
	23, 3741, 3741, 23, 3742, 3742, 23, 3743,
	3743, 23, 3744, 3744, 23, 3745, 3745, 3746,
	3747, 3748, 3749, 3750, 3750, 3751, 3752, 3462,
	3753, 3754, 3753, 3754, 23, 3755, 3755, 23,
	3756, 3756, 3757, 3758, 3759, 3760, 3761, 3761,
	3762, 3763, 3462, 3764, 3764, 3765, 3766, 3767,
	3768, 3769, 3769, 3770, 3771, 3462, 3772, 3773,
	3774, 3775, 3774, 3775, 23, 3776, 23, 3777,
	3777, 3778, 3779, 3780, 3781, 3782, 3782, 3783,
	3784, 3462, 3785, 23, 3786, 3786, 3787, 3788,
	3789, 3790, 3791, 3791, 3792, 3793, 3462, 3794,
	3794, 23, 3795, 3795, 3796, 3797, 3798, 3799,
	3800, 3800, 3801, 3802, 3462, 3803, 3803, 3804,
	3805, 3806, 3807, 3808, 3808, 3809, 3810, 3462,
	3811, 3812, 3811, 3812, 23, 3813, 3813, 23,
	3814, 3814, 23, 3815, 3815, 23, 3816, 3816,
	3817, 3818, 3819, 3820, 3821, 3821, 3822, 3823,
	3462, 3824, 3824, 3825, 3826, 3827, 3828, 3829,
	3829, 3830, 3831, 3462, 3832, 3833, 3834, 3832,
	3833, 3834, 23, 3835, 3835, 23, 3836, 3836,
	23, 3837, 3837, 23, 3838, 3838, 3839, 3840,
	3841, 3842, 3843, 3843, 3844, 3845, 3462, 3846,
	3846, 23, 3847, 3847, 3848, 3849, 3850, 3851,
	3852, 3852, 3853, 3854, 3462, 3855, 3855, 3856,
	3857, 3858, 3858, 3859, 3860, 3861, 3861, 3862,
	3863, 3462, 3864, 3864, 23, 3865, 3865, 3866,
	3867, 3868, 3869, 3870, 3871, 3871, 3872, 3873,
	3462, 3874, 3874, 3875, 3876, 3877, 3877, 3878,
	3879, 3880, 3880, 3881, 3882, 3462, 3883, 3883,
	23, 3884, 3884, 23, 3885, 3885, 23, 3886,
	3886, 23, 3887, 3887, 3888, 3889, 3890, 3891,
	3892, 3892, 3893, 3894, 3462, 3895, 3895, 23,
	3896, 3896, 23, 3897, 3897, 23, 3898, 3898,
	23, 3899, 3899, 23, 3900, 3900, 23, 3901,
	3901, 23, 3902, 3902, 23, 3903, 3903, 23,
	3904, 3904, 3905, 3906, 3907, 3908, 3909, 3909,
	3910, 3911, 3462, 3912, 3912, 23, 3913, 3913,
	23, 3914, 3914, 3915, 3916, 3917, 3918, 3919,
	3919, 3920, 3921, 3462, 3922, 3923, 3924, 3922,
	3923, 3924, 23, 3925, 3925, 3926, 3927, 3928,
	3929, 3930, 3930, 3931, 3932, 3462, 3933, 3933,
	23, 3934, 3934, 23, 3935, 3935, 23, 3936,
	3936, 3937, 3938, 3939, 3940, 3941, 3941, 3942,
	3943, 3462, 3944, 3944, 3945, 3946, 3947, 3948,
	3949, 3949, 3950, 3951, 3462, 3952, 3953, 3954,
	3955, 3956, 3957, 3952, 3953, 3954, 3955, 3956,
	3957, 23, 3958, 3958, 23, 3959, 3959, 23,
	3960, 3960, 23, 3961, 3961, 23, 3962, 3962,
	3963, 3964, 3965, 3966, 3967, 3967, 3968, 3969,
	3462, 3970, 3970, 23, 3971, 3971, 3972, 3973,
	3974, 3975, 3976, 3976, 3977, 3978, 3462, 3979,
	3979, 23, 3980, 3980, 3981, 3982, 3983, 3984,
	3985, 3985, 3986, 3987, 3462, 3988, 3988, 23,
	3989, 3989, 3990, 3991, 3992, 3993, 3994, 3994,
	3995, 3996, 3462, 3997, 3997, 23, 3998, 3998,
	23, 3999, 3999, 23, 4000, 4000, 4001, 4002,
	4003, 4004, 4005, 4005, 4006, 4007, 3462, 4008,
	4008, 23, 4009, 4009, 23, 4010, 4010, 4011,
	4012, 4013, 4014, 4015, 4015, 4016, 4017, 3462,
	4018, 4019, 4020, 4018, 4019, 4020, 23, 4021,
	4021, 23, 4022, 4022, 23, 4023, 4023, 4024,
	4025, 4026, 4027, 4028, 4028, 4029, 4030, 3462,
	4031, 4031, 23, 4032, 4032, 4033, 4034, 4035,
	4036, 4037, 4037, 4038, 4039, 3462, 4040, 4040,
	23, 4041, 4041, 23, 4042, 81, 4044, 4044,
	4045, 4046, 4048, 4049, 4050, 4050, 4051, 4052,
	4047, 4043, 4053, 4053, 23, 4054, 4054, 23,
	4055, 4055, 4056, 4057, 4058, 4059, 4060, 4060,
	4061, 4062, 3462, 4063, 4063, 23, 4064, 4064,
	23, 4065, 4065, 23, 4066, 4066, 23, 4067,
	4067, 23, 4068, 4068, 4069, 4070, 4071, 4072,
	4073, 4073, 4074, 4075, 3462, 4077, 4077, 4078,
	4079, 4080, 4081, 4081, 4081, 4082, 4083, 4084,
	4085, 4081, 4081, 4081, 4076, 4077, 4077, 4078,
	4087, 4088, 4081, 4090, 4081, 4081, 4090, 4082,
	4083, 4091, 4092, 4081, 4089, 4081, 4081, 4086,
	4094, 4094, 4095, 4096, 4097, 4098, 4098, 4098,
	4099, 4100, 4101, 4102, 4098, 4098, 4098, 4093,
	140, 140, 140, 140, 246, 247, 246, 249,
	246, 247, 248, 247, 242, 140, 140, 140,
	404, 404, 405, 406, 373, 374, 375, 373,
	407, 408, 373, 373, 373, 379, 140, 419,
	419, 420, 421, 414, 422, 423, 424, 424,
	425, 426, 414, 414, 414, 413, 428, 427,
	413, 140, 438, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 441,
	442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 460, 461, 462, 429, 485,
	484, 429, 140, 1024, 1024, 1025, 1026, 1027,
	1028, 1029, 1029, 1030, 1031, 1020, 1020, 1020,
	1016, 1033, 1032, 1016, 1052, 1052, 1053, 1054,
	1056, 1057, 1055, 1055, 1055, 1016, 1002, 1059,
	1059, 1060, 1061, 1062, 1063, 1064, 1064, 1065,
	1066, 1055, 1055, 1055, 1016, 1068, 1067, 1016,
	1070, 1069, 1002, 140, 140, 1140, 1140, 1141,
	1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149,
	1150, 1151, 1152, 1152, 1153, 1154, 1131, 1170,
	1169, 1131, 140, 140, 140, 140, 140, 140,
	140, 140, 140, 1733, 1733, 1734, 1735, 1736,
	1737, 1738, 1738, 1739, 1740, 1732, 1732, 1732,
	1723, 1742, 1741, 1723, 140, 140, 1906, 1906,
	1907, 1908, 1909, 1910, 1855, 1855, 1911, 1912,
	1746, 1914, 1913, 1746, 1888, 1888, 1889, 1890,
	1892, 1893, 1855, 1855, 1894, 1895, 1891, 1746,
	1926, 1925, 1746, 1869, 1869, 1870, 1871, 1873,
	1874, 1855, 1855, 1875, 1876, 1872, 1746, 1939,
	1938, 1746, 1849, 1849, 1850, 1851, 1853, 1854,
	1855, 1855, 1856, 1857, 1852, 1746, 1952, 1951,
	1746, 140, 140, 140, 140, 2150, 2150, 2151,
	2152, 2153, 2154, 2155, 2156, 2157, 2158, 2158,
	2159, 2160, 2149, 2179, 2178, 1518, 140, 2217,
	2217, 2218, 2219, 2220, 2221, 2222, 2222, 2223,
	2224, 2213, 2213, 2213, 2209, 2226, 2225, 2209,
	140, 2259, 2259, 2260, 2261, 2262, 2263, 2264,
	2264, 2265, 2266, 2255, 2255, 2255, 2209, 2268,
	2267, 2209, 140, 2313, 2313, 2314, 2315, 2319,
	2319, 2319, 2319, 2324, 2325, 2319, 2319, 2326,
	2327, 2332, 2337, 2336, 2332, 2310, 2310, 2311,
	2312, 2333, 2320, 2321, 2333, 2333, 2333, 2332,
	2335, 2334, 2332, 2333, 2310, 2310, 2311, 2312,
	2313, 2313, 2314, 2315, 2316, 2316, 2317, 2318,
	2319, 2319, 2319, 2319, 2320, 2321, 2319, 2319,
	2322, 2323, 2324, 2325, 2319, 2319, 2326, 2327,
	2328, 2329, 2319, 2319, 2330, 2331, 2333, 2333,
	2333, 2332, 2335, 2337, 2339, 2334, 2336, 2338,
	2332, 140, 140, 140, 140, 140, 140, 140,
	3196, 3196, 3197, 3198, 3199, 3200, 3201, 3201,
	3202, 3203, 3192, 3192, 3192, 2209, 3205, 3204,
	2209, 140, 140, 3268, 3268, 3269, 3270, 3271,
	3272, 3273, 3273, 3274, 3275, 3264, 3264, 3264,
	2209, 3277, 3276, 2209, 140, 140, 140, 140,
	140, 140, 140, 140, 140, 3475, 3475, 3476,
	3477, 3478, 3479, 3480, 3474, 3474, 3481, 3482,
	3474, 3474, 3474, 1518, 3484, 3484, 3485, 3486,
	3487, 3488, 3487, 3488, 3483, 0
};

static const short _zone_scanner_trans_targs[] = {
	0, 1, 1, 1, 2, 4, 16, 1338,
	25, 1339, 37, 0, 3, 3, 3, 2,
	13, 13, 13, 13, 13, 3, 12, 0,
	3, 3, 3, 4, 7, 3, 12, 0,
	5, 5, 5, 1338, 6, 5, 5, 5,
	1338, 6, 6, 1338, 8, 11, 9, 9,
	9, 9, 10, 4, 10, 9, 9, 9,
	9, 9, 10, 12, 3, 14, 14, 15,
	15, 15, 15, 15, 3, 3, 3, 14,
	3, 12, 17, 24, 18, 18, 18, 18,
	23, 0, 19, 4, 9, 9, 9, 19,
	20, 20, 20, 20, 20, 9, 10, 21,
	21, 22, 22, 22, 22, 22, 9, 9,
	9, 21, 9, 10, 23, 18, 18, 18,
	18, 18, 23, 25, 1338, 0, 27, 38,
	44, 28, 29, 30, 31, 32, 33, 1340,
	0, 35, 35, 35, 35, 36, 35, 35,
	35, 35, 36, 36, 0, 35, 37, 1339,
	39, 40, 41, 42, 43, 1340, 45, 46,
	1340, 0, 48, 48, 48, 48, 49, 48,
	48, 48, 48, 49, 49, 48, 51, 0,
	51, 51, 51, 54, 52, 52, 52, 52,
	53, 4, 53, 52, 55, 55, 55, 53,
	56, 57, 48, 57, 57, 56, 49, 58,
	58, 58, 58, 58, 57, 57, 57, 49,
	59, 59, 60, 60, 60, 60, 60, 57,
	48, 57, 57, 59, 49, 61, 1341, 61,
	61, 63, 1342, 63, 1342, 0, 65, 71,
	72, 67, 1343, 65, 66, 67, 1343, 65,
	67, 68, 0, 69, 70, 1343, 65, 66,
	67, 1343, 0, 74, 79, 75, 1344, 74,
	1345, 75, 0, 76, 77, 78, 1344, 74,
	1345, 75, 79, 80, 81, 82, 79, 80,
	81, 82, 0, 1344, 83, 84, 85, 79,
	80, 81, 82, 0, 87, 87, 87, 87,
	94, 0, 88, 0, 89, 89, 89, 88,
	91, 91, 91, 91, 91, 1346, 90, 0,
	89, 89, 89, 1346, 90, 90, 1346, 92,
	0, 92, 93, 93, 93, 93, 93, 89,
	89, 89, 92, 1346, 90, 94, 87, 0,
	96, 96, 96, 96, 106, 97, 105, 101,
	97, 98, 101, 0, 99, 99, 99, 97,
	101, 1347, 100, 99, 99, 99, 1347, 100,
	100, 1347, 102, 0, 103, 104, 97, 98,
	101, 106, 96, 108, 108, 108, 108, 123,
	109, 0, 0, 110, 110, 110, 1348, 114,
	120, 0, 110, 110, 110, 111, 119, 115,
	1348, 114, 120, 0, 111, 112, 115, 113,
	113, 113, 111, 115, 1348, 114, 113, 113,
	113, 114, 1348, 116, 0, 117, 118, 111,
	112, 115, 120, 1349, 121, 121, 121, 121,
	122, 122, 121, 123, 108, 0, 125, 126,
	127, 130, 128, 128, 128, 128, 128, 129,
	1350, 1351, 1352, 129, 128, 0, 132, 132,
	132, 132, 137, 1353, 1354, 1355, 132, 132,
	132, 133, 138, 159, 173, 180, 189, 197,
	201, 209, 215, 231, 241, 244, 251, 270,
	280, 283, 132, 137, 1353, 1354, 1355, 132,
	132, 132, 134, 289, 293, 132, 137, 1353,
	1354, 1355, 135, 136, 132, 132, 132, 132,
	137, 1353, 1354, 1355, 137, 132, 139, 141,
	148, 151, 155, 140, 132, 132, 132, 132,
	137, 1353, 1354, 1355, 142, 147, 143, 144,
	145, 146, 132, 132, 132, 132, 137, 1353,
	1354, 1355, 132, 132, 132, 132, 137, 1353,
	1354, 1355, 149, 150, 132, 132, 132, 132,
	137, 1353, 1354, 1355, 152, 153, 154, 132,
	132, 132, 132, 137, 1353, 1354, 1355, 156,
	157, 158, 132, 132, 132, 132, 137, 1353,
	1354, 1355, 160, 164, 172, 161, 162, 163,
	132, 132, 132, 132, 137, 1353, 1354, 1355,
	165, 168, 166, 167, 132, 132, 132, 132,
	137, 1353, 1354, 1355, 169, 170, 171, 132,
	132, 132, 132, 137, 1353, 1354, 1355, 132,
	132, 132, 132, 137, 1353, 1354, 1355, 174,
	175, 176, 178, 177, 132, 132, 132, 132,
	137, 1353, 1354, 1355, 179, 132, 132, 132,
	132, 137, 1353, 1354, 1355, 181, 185, 182,
	183, 184, 132, 132, 132, 132, 137, 1353,
	1354, 1355, 186, 187, 188, 132, 132, 132,
	132, 137, 1353, 1354, 1355, 190, 191, 192,
	193, 194, 195, 196, 132, 132, 132, 132,
	137, 1353, 1354, 1355, 198, 200, 199, 132,
	132, 132, 132, 137, 1353, 1354, 1355, 132,
	132, 132, 132, 137, 1353, 1354, 1355, 202,
	204, 206, 208, 203, 132, 132, 132, 132,
	137, 1353, 1354, 1355, 205, 132, 132, 132,
	132, 137, 1353, 1354, 1355, 207, 132, 132,
	132, 132, 137, 1353, 1354, 1355, 132, 132,
	132, 132, 137, 1353, 1354, 1355, 210, 214,
	211, 212, 213, 132, 132, 132, 132, 137,
	1353, 1354, 1355, 132, 132, 132, 132, 137,
	1353, 1354, 1355, 216, 220, 222, 217, 218,
	219, 132, 132, 132, 132, 137, 1353, 1354,
	1355, 221, 132, 132, 132, 132, 137, 1353,
	1354, 1355, 132, 132, 132, 223, 132, 137,
	1353, 1354, 1355, 224, 132, 132, 132, 225,
	132, 137, 1353, 1354, 1355, 132, 132, 132,
	226, 132, 137, 1353, 1354, 1355, 227, 228,
	229, 230, 132, 132, 132, 132, 137, 1353,
	1354, 1355, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 132, 132, 132, 132, 137,
	1353, 1354, 1355, 242, 243, 132, 132, 132,
	132, 137, 1353, 1354, 1355, 245, 246, 250,
	132, 132, 132, 132, 137, 1353, 1354, 1355,
	247, 248, 249, 132, 132, 132, 132, 137,
	1353, 1354, 1355, 132, 132, 132, 132, 137,
	1353, 1354, 1355, 252, 257, 259, 261, 263,
	267, 253, 254, 255, 256, 132, 132, 132,
	132, 137, 1353, 1354, 1355, 258, 132, 132,
	132, 132, 137, 1353, 1354, 1355, 260, 132,
	132, 132, 132, 137, 1353, 1354, 1355, 262,
	132, 132, 132, 132, 137, 1353, 1354, 1355,
	264, 265, 266, 132, 132, 132, 132, 137,
	1353, 1354, 1355, 268, 269, 132, 132, 132,
	132, 137, 1353, 1354, 1355, 271, 274, 276,
	272, 273, 132, 132, 132, 132, 137, 1353,
	1354, 1355, 275, 132, 132, 132, 132, 137,
	1353, 1354, 1355, 277, 278, 279, 132, 132,
	132, 279, 132, 137, 1353, 1354, 1355, 281,
	282, 132, 132, 132, 132, 137, 1353, 1354,
	1355, 284, 285, 286, 287, 288, 132, 132,
	132, 132, 137, 1353, 1354, 1355, 290, 291,
	292, 132, 132, 132, 132, 137, 1353, 1354,
	1355, 294, 132, 132, 132, 132, 137, 1353,
	1354, 1355, 0, 296, 296, 296, 296, 303,
	0, 297, 298, 298, 298, 297, 298, 302,
	0, 298, 298, 298, 299, 298, 302, 300,
	300, 300, 300, 300, 301, 1356, 1357, 1358,
	301, 300, 302, 298, 303, 296, 305, 305,
	305, 305, 313, 306, 312, 1359, 1359, 1359,
	312, 1360, 1359, 1363, 307, 307, 307, 308,
	307, 311, 309, 309, 309, 309, 309, 310,
	1360, 1361, 1362, 310, 309, 311, 307, 307,
	307, 307, 307, 311, 313, 305, 0, 315,
	319, 322, 335, 339, 354, 316, 317, 318,
	1364, 320, 321, 1364, 323, 324, 325, 330,
	326, 327, 328, 329, 1364, 331, 332, 333,
	334, 1364, 336, 337, 0, 338, 1364, 338,
	340, 341, 342, 343, 344, 345, 346, 347,
	348, 349, 350, 351, 352, 353, 1364, 355,
	356, 357, 1364, 0, 359, 359, 359, 359,
	366, 1365, 1366, 1367, 359, 359, 359, 360,
	367, 383, 408, 414, 429, 444, 359, 366,
	1365, 1366, 1367, 361, 362, 363, 364, 365,
	452, 359, 359, 359, 359, 366, 1365, 1366,
	1367, 366, 359, 368, 369, 370, 371, 378,
	372, 373, 374, 377, 375, 375, 376, 372,
	359, 359, 359, 359, 366, 1365, 1366, 1367,
	379, 380, 382, 381, 381, 359, 359, 359,
	378, 359, 366, 1365, 1366, 1367, 384, 385,
	386, 397, 387, 388, 389, 390, 391, 0,
	392, 395, 393, 376, 394, 393, 393, 359,
	359, 359, 396, 395, 359, 366, 1365, 1366,
	1367, 395, 398, 399, 400, 401, 402, 403,
	406, 404, 376, 405, 404, 404, 359, 359,
	359, 407, 406, 359, 366, 1365, 1366, 1367,
	406, 409, 410, 0, 411, 359, 359, 359,
	411, 412, 359, 366, 1365, 1366, 1367, 413,
	415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 427, 425, 376, 426, 425, 359,
	359, 359, 428, 359, 366, 1365, 1366, 1367,
	427, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 359,
	359, 359, 359, 366, 1365, 1366, 1367, 445,
	446, 447, 448, 449, 451, 450, 376, 450,
	359, 359, 359, 451, 359, 366, 1365, 1366,
	1367, 453, 376, 0, 455, 456, 471, 510,
	518, 531, 1368, 455, 457, 458, 1368, 459,
	1368, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 1368, 472, 501, 473,
	479, 474, 475, 476, 477, 478, 1368, 480,
	481, 482, 483, 492, 484, 485, 486, 487,
	488, 489, 490, 491, 1368, 493, 494, 495,
	496, 497, 498, 499, 500, 1368, 502, 507,
	503, 504, 505, 506, 1368, 508, 509, 1368,
	511, 512, 513, 514, 515, 516, 517, 1368,
	519, 520, 521, 522, 523, 524, 525, 528,
	526, 527, 1368, 529, 530, 1368, 532, 533,
	534, 537, 535, 536, 1368, 538, 539, 540,
	552, 555, 1368, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 1368, 553,
	554, 1368, 556, 557, 1368, 0, 559, 560,
	566, 583, 586, 592, 596, 1369, 559, 561,
	562, 563, 564, 565, 1369, 567, 573, 579,
	568, 569, 570, 571, 572, 1369, 574, 576,
	575, 1369, 577, 578, 1369, 580, 581, 582,
	1369, 584, 585, 1369, 587, 589, 588, 1369,
	590, 591, 1369, 593, 594, 595, 1369, 597,
	598, 1369, 0, 600, 1370, 600, 0, 602,
	1371, 604, 605, 605, 605, 605, 634, 605,
	605, 605, 606, 605, 634, 607, 607, 607,
	607, 633, 0, 607, 607, 607, 608, 607,
	633, 609, 609, 609, 608, 609, 632, 609,
	609, 609, 610, 609, 632, 0, 611, 611,
	611, 610, 629, 629, 629, 629, 629, 611,
	628, 611, 611, 611, 612, 611, 628, 613,
	613, 613, 612, 625, 625, 625, 625, 625,
	613, 624, 613, 613, 613, 614, 613, 624,
	615, 615, 615, 614, 621, 621, 621, 621,
	621, 615, 620, 615, 615, 615, 616, 615,
	620, 1372, 616, 617, 617, 617, 617, 617,
	618, 618, 619, 619, 619, 619, 619, 1372,
	618, 620, 615, 622, 622, 623, 623, 623,
	623, 623, 615, 615, 615, 622, 615, 620,
	624, 613, 626, 626, 627, 627, 627, 627,
	627, 613, 613, 613, 626, 613, 624, 628,
	611, 630, 630, 631, 631, 631, 631, 631,
	611, 611, 611, 630, 611, 628, 632, 609,
	633, 607, 634, 605, 636, 637, 637, 637,
	637, 639, 638, 637, 637, 637, 637, 639,
	1373, 639, 637, 641, 642, 642, 642, 642,
	644, 642, 642, 642, 643, 642, 644, 1374,
	644, 642, 646, 647, 647, 647, 646, 647,
	649, 647, 647, 647, 648, 647, 649, 1375,
	649, 647, 651, 0, 652, 652, 652, 652,
	653, 1376, 1377, 1378, 651, 652, 652, 652,
	652, 653, 1376, 1377, 1378, 653, 652, 655,
	1379, 655, 0, 657, 658, 658, 658, 657,
	658, 710, 658, 658, 658, 659, 663, 705,
	658, 710, 660, 660, 660, 659, 660, 709,
	660, 660, 660, 661, 660, 709, 662, 662,
	662, 707, 661, 662, 706, 662, 662, 662,
	662, 706, 664, 664, 664, 664, 704, 665,
	666, 666, 666, 665, 666, 703, 666, 666,
	666, 667, 671, 698, 666, 703, 668, 668,
	668, 667, 668, 702, 668, 668, 668, 669,
	668, 702, 670, 670, 670, 700, 669, 670,
	699, 670, 670, 670, 670, 699, 672, 672,
	672, 672, 697, 673, 674, 674, 675, 675,
	675, 694, 674, 696, 675, 693, 1380, 1387,
	1388, 675, 675, 675, 676, 675, 693, 1380,
	1387, 1388, 677, 677, 677, 690, 676, 692,
	677, 689, 1380, 1385, 1386, 677, 677, 677,
	678, 677, 689, 1385, 1386, 679, 679, 679,
	686, 678, 688, 679, 685, 1380, 1383, 1384,
	679, 679, 679, 680, 679, 685, 1383, 1384,
	681, 681, 681, 683, 680, 681, 682, 1380,
	1381, 1382, 681, 681, 681, 681, 682, 1381,
	1382, 682, 681, 681, 681, 681, 684, 681,
	682, 1380, 1381, 1382, 684, 685, 679, 679,
	679, 679, 687, 688, 679, 685, 1380, 1383,
	1384, 687, 689, 677, 677, 677, 677, 691,
	692, 677, 689, 1380, 1385, 1386, 691, 693,
	675, 675, 675, 675, 695, 696, 675, 693,
	1380, 1387, 1388, 695, 697, 672, 672, 672,
	672, 672, 697, 699, 670, 670, 670, 670,
	701, 670, 699, 701, 702, 668, 703, 666,
	704, 664, 664, 664, 664, 664, 704, 706,
	662, 662, 662, 662, 708, 662, 706, 708,
	709, 660, 710, 658, 712, 713, 713, 713,
	712, 713, 721, 713, 713, 713, 714, 713,
	721, 715, 715, 715, 714, 715, 720, 715,
	715, 715, 716, 715, 720, 717, 717, 717,
	716, 717, 719, 717, 717, 717, 718, 717,
	719, 1389, 719, 717, 720, 715, 721, 713,
	723, 724, 724, 724, 723, 724, 738, 724,
	724, 724, 725, 724, 738, 726, 726, 726,
	725, 726, 737, 727, 726, 726, 726, 726,
	737, 728, 728, 728, 728, 736, 729, 728,
	728, 728, 728, 736, 730, 730, 730, 730,
	735, 731, 730, 730, 730, 730, 735, 732,
	732, 732, 732, 734, 732, 732, 732, 733,
	732, 734, 1390, 734, 732, 735, 730, 736,
	728, 737, 726, 738, 724, 740, 741, 741,
	741, 741, 749, 742, 743, 743, 743, 742,
	743, 748, 743, 743, 743, 744, 743, 748,
	745, 745, 745, 745, 747, 746, 1391, 747,
	745, 748, 743, 749, 741, 0, 750, 751,
	750, 750, 752, 758, 750, 757, 1392, 1393,
	1394, 752, 758, 753, 0, 754, 754, 755,
	756, 750, 750, 750, 756, 750, 757, 1392,
	1393, 1394, 757, 750, 759, 760, 760, 755,
	762, 763, 763, 763, 762, 763, 773, 763,
	763, 763, 764, 763, 773, 765, 765, 765,
	765, 772, 766, 767, 767, 767, 766, 767,
	771, 0, 767, 767, 767, 768, 767, 771,
	769, 769, 769, 769, 769, 770, 1395, 1396,
	1397, 770, 769, 771, 767, 772, 765, 773,
	763, 775, 776, 776, 776, 775, 776, 783,
	776, 776, 776, 777, 776, 783, 778, 778,
	778, 777, 778, 782, 778, 778, 778, 779,
	778, 782, 780, 780, 780, 780, 780, 781,
	1398, 1399, 1400, 781, 780, 782, 778, 783,
	776, 785, 786, 786, 786, 785, 786, 822,
	0, 786, 786, 786, 787, 801, 808, 815,
	786, 822, 788, 788, 788, 788, 800, 0,
	789, 790, 790, 790, 789, 790, 799, 790,
	790, 790, 791, 790, 799, 0, 792, 792,
	792, 795, 795, 795, 797, 797, 797, 1401,
	792, 794, 1404, 1405, 795, 796, 1402, 1403,
	797, 798, 1406, 1407, 0, 793, 794, 792,
	796, 795, 798, 797, 799, 790, 800, 788,
	802, 802, 802, 802, 807, 803, 804, 804,
	804, 803, 804, 806, 0, 804, 804, 804,
	805, 804, 806, 0, 805, 792, 792, 792,
	795, 795, 795, 797, 797, 797, 1401, 792,
	794, 1404, 1405, 795, 796, 1402, 1403, 797,
	798, 1406, 1407, 806, 804, 807, 802, 809,
	809, 809, 809, 814, 810, 811, 811, 811,
	810, 811, 813, 811, 811, 811, 812, 811,
	813, 812, 792, 792, 792, 795, 795, 795,
	797, 797, 797, 1401, 792, 794, 1404, 1405,
	795, 796, 1402, 1403, 797, 798, 1406, 1407,
	813, 811, 814, 809, 816, 816, 816, 816,
	821, 817, 818, 818, 818, 817, 818, 820,
	818, 818, 818, 819, 818, 820, 792, 792,
	792, 795, 795, 795, 797, 797, 797, 1401,
	792, 794, 1404, 1405, 795, 796, 1402, 1403,
	797, 798, 1406, 1407, 820, 818, 821, 816,
	822, 786, 0, 824, 858, 879, 893, 900,
	909, 917, 921, 929, 935, 951, 961, 964,
	971, 990, 1000, 1003, 825, 825, 825, 849,
	852, 856, 825, 848, 825, 825, 825, 826,
	825, 848, 827, 827, 827, 827, 847, 828,
	829, 829, 829, 828, 829, 846, 829, 829,
	829, 830, 829, 846, 831, 831, 831, 830,
	831, 845, 0, 831, 831, 831, 832, 831,
	845, 833, 833, 833, 832, 833, 844, 833,
	833, 833, 834, 833, 844, 835, 835, 835,
	834, 835, 843, 835, 835, 835, 836, 835,
	843, 837, 837, 837, 836, 837, 842, 837,
	837, 837, 838, 837, 842, 839, 839, 839,
	839, 841, 839, 839, 839, 840, 839, 841,
	1408, 841, 839, 842, 837, 843, 835, 844,
	833, 845, 831, 846, 829, 847, 827, 848,
	825, 850, 851, 825, 825, 825, 825, 848,
	853, 854, 855, 825, 825, 825, 825, 848,
	857, 825, 825, 825, 825, 848, 859, 861,
	868, 871, 875, 860, 825, 825, 825, 825,
	848, 862, 867, 863, 864, 865, 866, 825,
	825, 825, 825, 848, 825, 825, 825, 825,
	848, 869, 870, 825, 825, 825, 825, 848,
	872, 873, 874, 825, 825, 825, 825, 848,
	876, 877, 878, 825, 825, 825, 825, 848,
	880, 884, 892, 881, 882, 883, 825, 825,
	825, 825, 848, 885, 888, 886, 887, 825,
	825, 825, 825, 848, 889, 890, 891, 825,
	825, 825, 825, 848, 825, 825, 825, 825,
	848, 894, 895, 896, 898, 897, 825, 825,
	825, 825, 848, 899, 825, 825, 825, 825,
	848, 901, 905, 902, 903, 904, 825, 825,
	825, 825, 848, 906, 907, 908, 825, 825,
	825, 825, 848, 910, 911, 912, 913, 914,
	915, 916, 825, 825, 825, 825, 848, 918,
	920, 919, 825, 825, 825, 825, 848, 825,
	825, 825, 825, 848, 922, 924, 926, 928,
	923, 825, 825, 825, 825, 848, 925, 825,
	825, 825, 825, 848, 927, 825, 825, 825,
	825, 848, 825, 825, 825, 825, 848, 930,
	934, 931, 932, 933, 825, 825, 825, 825,
	848, 825, 825, 825, 825, 848, 936, 940,
	942, 937, 938, 939, 825, 825, 825, 825,
	848, 941, 825, 825, 825, 825, 848, 825,
	825, 825, 943, 825, 848, 944, 825, 825,
	825, 945, 825, 848, 825, 825, 825, 946,
	825, 848, 947, 948, 949, 950, 825, 825,
	825, 825, 848, 952, 953, 954, 955, 956,
	957, 958, 959, 960, 825, 825, 825, 825,
	848, 962, 963, 825, 825, 825, 825, 848,
	965, 966, 970, 825, 825, 825, 825, 848,
	967, 968, 969, 825, 825, 825, 825, 848,
	825, 825, 825, 825, 848, 972, 977, 979,
	981, 983, 987, 973, 974, 975, 976, 825,
	825, 825, 825, 848, 978, 825, 825, 825,
	825, 848, 980, 825, 825, 825, 825, 848,
	982, 825, 825, 825, 825, 848, 984, 985,
	986, 825, 825, 825, 825, 848, 988, 989,
	825, 825, 825, 825, 848, 991, 994, 996,
	992, 993, 825, 825, 825, 825, 848, 995,
	825, 825, 825, 825, 848, 997, 998, 0,
	999, 825, 825, 825, 999, 825, 848, 1001,
	1002, 825, 825, 825, 825, 848, 1004, 1005,
	1006, 1007, 1008, 825, 825, 825, 825, 848,
	1010, 1011, 1409, 1013, 1014, 1014, 1014, 1013,
	1014, 1022, 1014, 1014, 1014, 1015, 1014, 1022,
	1016, 1016, 1016, 1015, 1016, 1021, 1016, 1016,
	1016, 1017, 1016, 1021, 1018, 1018, 1018, 1018,
	1020, 1019, 1410, 1020, 1018, 1021, 1016, 1022,
	1014, 1024, 1411, 1026, 1027, 1027, 1027, 1026,
	1027, 1053, 1027, 1027, 1027, 1028, 1027, 1053,
	1029, 1029, 1029, 1028, 1029, 1052, 1029, 1029,
	1029, 1030, 1029, 1052, 1031, 1031, 1031, 1030,
	1031, 1051, 1031, 1031, 1031, 1032, 1049, 1031,
	1051, 1033, 1033, 1033, 1033, 1048, 0, 1033,
	1033, 1033, 1034, 1033, 1048, 1035, 1036, 1046,
	1037, 1038, 1045, 1039, 1043, 1040, 1041, 1041,
	1042, 1034, 1412, 1044, 1047, 1048, 1033, 1050,
	1049, 1051, 1031, 1052, 1029, 1053, 1027, 1055,
	1056, 1056, 1056, 1055, 1056, 1066, 1056, 1056,
	1056, 1057, 1056, 1066, 1058, 1058, 1058, 1057,
	1058, 1065, 1058, 1058, 1058, 1059, 1058, 1065,
	1060, 1060, 1060, 1059, 1060, 1064, 1060, 1060,
	1060, 1061, 1062, 1060, 1064, 1413, 1063, 1062,
	1064, 1060, 1065, 1058, 1066, 1056, 1068, 1069,
	1069, 1069, 1068, 1069, 1079, 1069, 1069, 1069,
	1070, 1069, 1079, 1071, 1071, 1071, 1070, 1071,
	1078, 1071, 1071, 1071, 1072, 1071, 1078, 1073,
	1073, 1073, 1072, 1073, 1077, 1073, 1073, 1073,
	1074, 1073, 1077, 1075, 1075, 1075, 1075, 1075,
	1076, 1414, 1415, 1416, 1076, 1075, 1077, 1073,
	1078, 1071, 1079, 1069, 1081, 1082, 1082, 1082,
	1081, 1082, 1085, 1082, 1082, 1082, 1083, 1082,
	1085, 1084, 1083, 1417, 1085, 1082, 1087, 1088,
	1088, 1088, 1087, 1088, 1098, 1088, 1088, 1088,
	1089, 1088, 1098, 1090, 1090, 1090, 1089, 1090,
	1097, 1090, 1090, 1090, 1091, 1090, 1097, 1092,
	1092, 1092, 1091, 1092, 1096, 1092, 1092, 1092,
	1093, 1092, 1096, 1094, 1094, 1094, 1094, 1094,
	1095, 1418, 1419, 1420, 1095, 1094, 1096, 1092,
	1097, 1090, 1098, 1088, 1100, 1101, 1101, 1101,
	1100, 1101, 1103, 1101, 1101, 1101, 1102, 1101,
	1103, 1421, 1102, 1103, 1101, 1105, 1106, 1106,
	1106, 1105, 1106, 1116, 1106, 1106, 1106, 1107,
	1106, 1116, 1108, 1109, 1110, 0, 1111, 1112,
	1113, 1114, 1115, 0, 1422, 1116, 1106, 1118,
	1119, 0, 1120, 1121, 1122, 1423, 1124, 1125,
	1126, 1127, 1128, 1424, 1130, 1131, 1131, 1131,
	1130, 1131, 1136, 1131, 1131, 1131, 1132, 1131,
	1136, 1133, 1133, 1133, 1132, 1133, 1135, 1134,
	1133, 1133, 1133, 1133, 1135, 1425, 1135, 1133,
	1136, 1131, 1138, 1139, 1139, 1139, 1138, 1139,
	1144, 1140, 1139, 1139, 1139, 1139, 1144, 1141,
	1141, 1141, 1141, 1143, 1142, 1141, 1141, 1141,
	1141, 1143, 1426, 1143, 1141, 1144, 1139, 1146,
	1147, 1147, 1147, 1146, 1147, 1150, 1147, 1147,
	1147, 1148, 1147, 1150, 1149, 1427, 1150, 1147,
	1152, 1153, 1153, 1153, 1152, 1153, 1158, 1154,
	1153, 1153, 1153, 1153, 1158, 1155, 1155, 1155,
	1155, 1157, 1155, 1155, 1155, 1156, 1155, 1157,
	1428, 1157, 1155, 1158, 1153, 1160, 1185, 1208,
	1222, 1229, 1238, 1246, 1250, 1258, 1264, 1280,
	1290, 1293, 1300, 1319, 1329, 1332, 0, 1161,
	1161, 1161, 1176, 1179, 1183, 1161, 1166, 1162,
	1167, 1170, 1162, 1161, 1161, 1161, 1165, 1161,
	1166, 1167, 1170, 0, 1163, 1163, 1163, 1429,
	1164, 1163, 1163, 1163, 1429, 1164, 1164, 1429,
	1162, 1162, 1166, 1161, 1168, 1168, 1168, 1169,
	1431, 1172, 1174, 1168, 1168, 1168, 1169, 1431,
	1172, 1174, 1169, 1430, 1171, 1171, 1171, 1169,
	1171, 1171, 1171, 1169, 1173, 1173, 1173, 1429,
	1164, 1173, 1173, 1173, 1164, 1175, 1175, 1175,
	1175, 1175, 1175, 1177, 1178, 1161, 1161, 1161,
	1161, 1166, 1162, 1167, 1170, 1180, 1181, 1182,
	1161, 1161, 1161, 1161, 1166, 1162, 1167, 1170,
	1184, 1161, 1161, 1161, 1161, 1166, 1162, 1167,
	1170, 1186, 1190, 1197, 1200, 1204, 1187, 1188,
	1161, 1161, 1161, 1161, 1166, 1162, 1167, 1170,
	1189, 1161, 1161, 1161, 1161, 1166, 1162, 1167,
	1170, 1191, 1196, 1192, 1193, 1194, 1195, 1161,
	1161, 1161, 1161, 1166, 1162, 1167, 1170, 1161,
	1161, 1161, 1161, 1166, 1162, 1167, 1170, 1198,
	1199, 1161, 1161, 1161, 1161, 1166, 1162, 1167,
	1170, 1201, 1202, 1203, 1161, 1161, 1161, 1161,
	1166, 1162, 1167, 1170, 1205, 1206, 1207, 1161,
	1161, 1161, 1161, 1166, 1162, 1167, 1170, 1209,
	1213, 1221, 1210, 1211, 1212, 1161, 1161, 1161,
	1161, 1166, 1162, 1167, 1170, 1214, 1217, 1215,
	1216, 1161, 1161, 1161, 1161, 1166, 1162, 1167,
	1170, 1218, 1219, 1220, 1161, 1161, 1161, 1161,
	1166, 1162, 1167, 1170, 1161, 1161, 1161, 1161,
	1166, 1162, 1167, 1170, 1223, 1224, 1225, 1227,
	1226, 1161, 1161, 1161, 1161, 1166, 1162, 1167,
	1170, 1228, 1161, 1161, 1161, 1161, 1166, 1162,
	1167, 1170, 1230, 1234, 1231, 1232, 1233, 1161,
	1161, 1161, 1161, 1166, 1162, 1167, 1170, 1235,
	1236, 1237, 1161, 1161, 1161, 1161, 1166, 1162,
	1167, 1170, 1239, 1240, 1241, 1242, 1243, 1244,
	1245, 1161, 1161, 1161, 1161, 1166, 1162, 1167,
	1170, 1247, 1249, 1248, 1161, 1161, 1161, 1161,
	1166, 1162, 1167, 1170, 1161, 1161, 1161, 1161,
	1166, 1162, 1167, 1170, 1251, 1253, 1255, 1257,
	1252, 1161, 1161, 1161, 1161, 1166, 1162, 1167,
	1170, 1254, 1161, 1161, 1161, 1161, 1166, 1162,
	1167, 1170, 1256, 1161, 1161, 1161, 1161, 1166,
	1162, 1167, 1170, 1161, 1161, 1161, 1161, 1166,
	1162, 1167, 1170, 1259, 1263, 1260, 1261, 1262,
	1161, 1161, 1161, 1161, 1166, 1162, 1167, 1170,
	1161, 1161, 1161, 1161, 1166, 1162, 1167, 1170,
	1265, 1269, 1271, 1266, 1267, 1268, 1161, 1161,
	1161, 1161, 1166, 1162, 1167, 1170, 1270, 1161,
	1161, 1161, 1161, 1166, 1162, 1167, 1170, 1161,
	1161, 1161, 1272, 1161, 1166, 1162, 1167, 1170,
	1273, 1161, 1161, 1161, 1274, 1161, 1166, 1162,
	1167, 1170, 1161, 1161, 1161, 1275, 1161, 1166,
	1162, 1167, 1170, 1276, 1277, 1278, 1279, 1161,
	1161, 1161, 1161, 1166, 1162, 1167, 1170, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1161, 1161, 1161, 1161, 1166, 1162, 1167, 1170,
	1291, 1292, 1161, 1161, 1161, 1161, 1166, 1162,
	1167, 1170, 1294, 1295, 1299, 1161, 1161, 1161,
	1161, 1166, 1162, 1167, 1170, 1296, 1297, 1298,
	1161, 1161, 1161, 1161, 1166, 1162, 1167, 1170,
	1161, 1161, 1161, 1161, 1166, 1162, 1167, 1170,
	1301, 1306, 1308, 1310, 1312, 1316, 1302, 1303,
	1304, 1305, 1161, 1161, 1161, 1161, 1166, 1162,
	1167, 1170, 1307, 1161, 1161, 1161, 1161, 1166,
	1162, 1167, 1170, 1309, 1161, 1161, 1161, 1161,
	1166, 1162, 1167, 1170, 1311, 1161, 1161, 1161,
	1161, 1166, 1162, 1167, 1170, 1313, 1314, 1315,
	1161, 1161, 1161, 1161, 1166, 1162, 1167, 1170,
	1317, 1318, 1161, 1161, 1161, 1161, 1166, 1162,
	1167, 1170, 1320, 1323, 1325, 1321, 1322, 1161,
	1161, 1161, 1161, 1166, 1162, 1167, 1170, 1324,
	1161, 1161, 1161, 1161, 1166, 1162, 1167, 1170,
	1326, 1327, 1328, 0, 1161, 1161, 1161, 1328,
	1161, 1166, 1162, 1167, 1170, 1330, 1331, 1161,
	1161, 1161, 1161, 1166, 1162, 1167, 1170, 1333,
	1334, 1335, 1336, 1337, 1161, 1161, 1161, 1161,
	1166, 1162, 1167, 1170, 0, 1, 26, 1,
	1, 34, 1338, 25, 1339, 37, 0, 1,
	1, 47, 50, 1339, 37, 0, 1, 26,
	1, 1, 34, 1338, 25, 1339, 37
};

static const short _zone_scanner_trans_actions[] = {
	2670, 0, 5, 7, 623, 2974, 0, 3,
	9, 3, 9, 2846, 99, 815, 818, 45,
	59, 57, 55, 0, 61, 812, 821, 409,
	0, 5, 7, 794, 0, 3, 9, 15,
	13, 473, 476, 2550, 479, 0, 5, 7,
	2411, 9, 11, 2546, 824, 0, 0, 5,
	7, 3, 9, 411, 11, 467, 97, 803,
	806, 800, 809, 11, 467, 2850, 45, 59,
	57, 55, 0, 61, 734, 2890, 2894, 4670,
	2886, 2898, 824, 0, 0, 5, 7, 3,
	9, 641, 623, 797, 99, 815, 818, 45,
	59, 57, 55, 0, 61, 812, 821, 2850,
	45, 59, 57, 55, 0, 61, 734, 2890,
	2894, 4670, 2886, 2898, 11, 467, 97, 803,
	806, 800, 809, 11, 467, 95, 91, 91,
	91, 0, 0, 0, 0, 0, 0, 89,
	41, 39, 575, 578, 572, 581, 0, 5,
	7, 3, 9, 11, 0, 467, 11, 467,
	0, 0, 0, 0, 0, 83, 0, 0,
	79, 4465, 584, 2618, 2622, 2614, 2626, 0,
	5, 7, 3, 9, 11, 467, 2630, 593,
	4445, 4450, 4440, 4455, 0, 5, 7, 3,
	9, 2978, 11, 467, 11, 440, 443, 446,
	2522, 464, 2542, 2530, 2534, 449, 2538, 458,
	455, 452, 11, 461, 11, 440, 443, 446,
	4330, 449, 458, 455, 452, 11, 461, 2526,
	4350, 4335, 4340, 5805, 4345, 0, 494, 3,
	7, 488, 2554, 17, 491, 31, 2578, 29,
	0, 527, 2558, 21, 23, 0, 518, 497,
	19, 500, 509, 25, 25, 4380, 503, 506,
	27, 524, 755, 67, 0, 0, 764, 767,
	2914, 73, 2910, 758, 71, 71, 2902, 2906,
	4675, 761, 67, 67, 0, 0, 767, 767,
	73, 73, 69, 1, 758, 71, 71, 2906,
	2906, 761, 761, 77, 0, 5, 7, 3,
	9, 626, 623, 4665, 13, 473, 476, 45,
	59, 57, 55, 0, 61, 4375, 479, 482,
	0, 5, 7, 2922, 9, 11, 4360, 2850,
	2838, 45, 59, 57, 55, 0, 61, 728,
	2854, 2858, 4670, 5949, 2862, 11, 467, 81,
	0, 5, 7, 3, 9, 4680, 776, 2926,
	21, 23, 0, 485, 521, 2562, 2566, 497,
	19, 5811, 2570, 0, 5, 7, 2930, 9,
	11, 4365, 500, 512, 25, 25, 503, 506,
	27, 11, 467, 0, 5, 7, 3, 9,
	779, 85, 785, 782, 2934, 2938, 5955, 2946,
	2942, 791, 0, 5, 7, 4685, 788, 2950,
	2954, 9, 9, 87, 21, 23, 0, 2574,
	4385, 4390, 497, 19, 6021, 4395, 0, 5,
	7, 11, 4370, 500, 515, 25, 25, 503,
	506, 27, 11, 4355, 0, 5, 7, 3,
	9, 11, 467, 11, 467, 123, 115, 117,
	119, 0, 121, 0, 5, 7, 3, 9,
	1, 419, 431, 11, 467, 359, 357, 2120,
	2123, 2117, 2126, 3270, 5270, 5275, 0, 5,
	7, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3, 9, 2129, 2462, 2506, 261,
	1544, 1547, 0, 0, 0, 1541, 1550, 3078,
	4790, 4795, 0, 0, 287, 1700, 1703, 1697,
	1706, 3130, 4920, 4925, 11, 467, 0, 0,
	0, 0, 0, 0, 351, 2084, 2087, 2081,
	2090, 3258, 5240, 5245, 0, 0, 0, 0,
	0, 0, 327, 1940, 1943, 1937, 1946, 3210,
	5120, 5125, 325, 1928, 1931, 1925, 1934, 3206,
	5110, 5115, 0, 0, 297, 1760, 1763, 1757,
	1766, 3150, 4970, 4975, 0, 0, 0, 265,
	1568, 1571, 1565, 1574, 3086, 4810, 4815, 0,
	0, 0, 331, 1964, 1967, 1961, 1970, 3218,
	5140, 5145, 0, 0, 0, 0, 0, 0,
	315, 1868, 1871, 1865, 1874, 3186, 5060, 5065,
	0, 0, 0, 0, 299, 1772, 1775, 1769,
	1778, 3154, 4980, 4985, 0, 0, 0, 313,
	1856, 1859, 1853, 1862, 3182, 5050, 5055, 303,
	1796, 1799, 1793, 1802, 3162, 5000, 5005, 0,
	0, 0, 0, 0, 345, 2048, 2051, 2045,
	2054, 3246, 5210, 5215, 0, 347, 2060, 2063,
	2057, 2066, 3250, 5220, 5225, 0, 0, 0,
	0, 0, 271, 1604, 1607, 1601, 1610, 3098,
	4840, 4845, 0, 0, 0, 355, 2108, 2111,
	2105, 2114, 3266, 5260, 5265, 0, 0, 0,
	0, 0, 0, 0, 307, 1820, 1823, 1817,
	1826, 3170, 5020, 5025, 0, 0, 0, 285,
	1688, 1691, 1685, 1694, 3126, 4910, 4915, 295,
	1748, 1751, 1745, 1754, 3146, 4960, 4965, 0,
	0, 0, 0, 0, 339, 2012, 2015, 2009,
	2018, 3234, 5180, 5185, 0, 341, 2024, 2027,
	2021, 2030, 3238, 5190, 5195, 0, 289, 1712,
	1715, 1709, 1718, 3134, 4930, 4935, 343, 2036,
	2039, 2033, 2042, 3242, 5200, 5205, 0, 0,
	0, 0, 0, 273, 1616, 1619, 1613, 1622,
	3102, 4850, 4855, 275, 1628, 1631, 1625, 1634,
	3106, 4860, 4865, 0, 0, 0, 0, 0,
	0, 293, 1736, 1739, 1733, 1742, 3142, 4950,
	4955, 0, 337, 2000, 2003, 1997, 2006, 3230,
	5170, 5175, 263, 1556, 1559, 0, 1553, 1562,
	3082, 4800, 4805, 0, 311, 1844, 1847, 0,
	1841, 1850, 3178, 5040, 5045, 317, 1880, 1883,
	0, 1877, 1886, 3190, 5070, 5075, 0, 0,
	0, 0, 319, 1892, 1895, 1889, 1898, 3194,
	5080, 5085, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 1952, 1955, 1949, 1958,
	3214, 5130, 5135, 0, 0, 269, 1592, 1595,
	1589, 1598, 3094, 4830, 4835, 0, 0, 0,
	279, 1652, 1655, 1649, 1658, 3114, 4880, 4885,
	0, 0, 0, 309, 1832, 1835, 1829, 1838,
	3174, 5030, 5035, 283, 1676, 1679, 1673, 1682,
	3122, 4900, 4905, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 1916, 1919,
	1913, 1922, 3202, 5100, 5105, 0, 267, 1580,
	1583, 1577, 1586, 3090, 4820, 4825, 0, 335,
	1988, 1991, 1985, 1994, 3226, 5160, 5165, 0,
	291, 1724, 1727, 1721, 1730, 3138, 4940, 4945,
	0, 0, 0, 305, 1808, 1811, 1805, 1814,
	3166, 5010, 5015, 0, 0, 353, 2096, 2099,
	2093, 2102, 3262, 5250, 5255, 0, 0, 0,
	0, 0, 321, 1904, 1907, 1901, 1910, 3198,
	5090, 5095, 0, 277, 1640, 1643, 1637, 1646,
	3110, 4870, 4875, 0, 0, 623, 259, 1532,
	1535, 45, 1529, 1538, 3074, 4780, 4785, 0,
	0, 349, 2072, 2075, 2069, 2078, 3254, 5230,
	5235, 0, 0, 0, 0, 0, 333, 1976,
	1979, 1973, 1982, 3222, 5150, 5155, 0, 0,
	0, 281, 1664, 1667, 1661, 1670, 3118, 4890,
	4895, 0, 301, 1784, 1787, 1781, 1790, 3158,
	4990, 4995, 373, 0, 5, 7, 3, 9,
	629, 623, 53, 719, 722, 45, 716, 725,
	3058, 0, 5, 7, 111, 3, 9, 113,
	0, 5, 7, 3, 9, 860, 2458, 2502,
	11, 467, 11, 467, 11, 467, 0, 5,
	7, 3, 9, 623, 623, 416, 2438, 2442,
	45, 1, 2434, 2446, 0, 5, 7, 111,
	3, 9, 113, 0, 5, 7, 3, 9,
	860, 2458, 2502, 11, 467, 11, 467, 53,
	719, 722, 716, 725, 11, 467, 383, 389,
	389, 389, 389, 389, 389, 0, 0, 0,
	914, 0, 0, 926, 0, 0, 0, 0,
	0, 0, 0, 0, 923, 0, 0, 0,
	0, 929, 0, 0, 635, 623, 677, 45,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 917, 0,
	0, 0, 920, 381, 379, 2219, 2222, 2216,
	2225, 3298, 5280, 5285, 0, 5, 7, 385,
	385, 385, 385, 385, 385, 385, 3, 9,
	2228, 2470, 2514, 0, 0, 0, 153, 5300,
	5300, 4410, 5823, 5829, 5817, 5835, 6028, 6147,
	6155, 11, 467, 0, 0, 159, 0, 560,
	560, 117, 119, 0, 121, 0, 37, 115,
	387, 2234, 2237, 2231, 2240, 3302, 5290, 5295,
	117, 119, 0, 121, 0, 563, 2598, 2602,
	115, 2594, 2606, 4415, 5841, 5847, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 830,
	0, 2590, 2590, 3010, 836, 101, 827, 4725,
	5967, 5973, 836, 101, 5961, 5979, 6119, 6163,
	6171, 827, 0, 0, 0, 0, 161, 0,
	2590, 2590, 3034, 839, 101, 827, 4740, 5991,
	5997, 839, 101, 5985, 6003, 6126, 6179, 6187,
	827, 0, 0, 632, 623, 2798, 4635, 4640,
	45, 49, 4630, 4645, 5931, 6105, 6112, 557,
	0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 3306, 3306, 566, 0, 391, 2610,
	4425, 4430, 0, 4420, 4435, 5853, 6035, 6042,
	391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3066,
	4760, 4765, 4755, 4770, 6009, 6133, 6140, 0,
	0, 0, 155, 0, 4775, 4775, 49, 45,
	695, 2806, 2810, 45, 2802, 2814, 4650, 5937,
	5943, 5300, 2586, 393, 623, 0, 0, 0,
	0, 0, 662, 45, 0, 0, 869, 0,
	872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 890, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 893, 0, 0, 0,
	0, 0, 0, 0, 0, 896, 0, 0,
	0, 0, 0, 0, 899, 0, 0, 902,
	0, 0, 0, 0, 0, 0, 0, 905,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 908, 0, 0, 911, 0, 0,
	0, 0, 0, 0, 866, 0, 0, 0,
	0, 0, 875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 881, 0,
	0, 884, 0, 0, 887, 395, 623, 0,
	0, 0, 0, 0, 0, 677, 45, 0,
	0, 0, 0, 0, 932, 0, 0, 0,
	0, 0, 0, 0, 0, 935, 0, 0,
	0, 929, 0, 0, 923, 0, 0, 0,
	926, 0, 0, 941, 0, 0, 0, 920,
	0, 0, 914, 0, 0, 0, 917, 0,
	0, 938, 833, 827, 2990, 101, 401, 596,
	599, 596, 43, 605, 608, 602, 611, 0,
	5, 7, 596, 3, 9, 43, 605, 608,
	602, 611, 638, 0, 5, 7, 623, 3,
	9, 51, 704, 707, 45, 701, 710, 0,
	5, 7, 623, 3, 9, 2842, 51, 704,
	707, 45, 59, 57, 55, 0, 61, 701,
	710, 0, 5, 7, 623, 3, 9, 51,
	704, 707, 45, 59, 57, 55, 0, 61,
	701, 710, 0, 5, 7, 623, 3, 9,
	51, 704, 707, 45, 59, 57, 55, 0,
	61, 701, 710, 0, 5, 7, 623, 3,
	9, 698, 45, 59, 57, 55, 0, 61,
	2850, 45, 59, 57, 55, 0, 61, 2866,
	4670, 11, 467, 2850, 45, 59, 57, 55,
	0, 61, 731, 2874, 2878, 4670, 2870, 2882,
	11, 467, 2850, 45, 59, 57, 55, 0,
	61, 731, 2874, 2878, 4670, 2870, 2882, 11,
	467, 2850, 45, 59, 57, 55, 0, 61,
	731, 2874, 2878, 4670, 2870, 2882, 11, 467,
	11, 467, 11, 467, 530, 35, 545, 548,
	542, 551, 530, 0, 5, 7, 3, 9,
	539, 11, 467, 596, 43, 605, 608, 602,
	611, 0, 5, 7, 596, 3, 9, 599,
	11, 467, 623, 49, 683, 686, 45, 680,
	689, 0, 5, 7, 596, 3, 9, 599,
	11, 467, 2918, 773, 35, 545, 548, 542,
	551, 2582, 4400, 4405, 530, 0, 5, 7,
	3, 9, 770, 2454, 2498, 11, 467, 827,
	3014, 101, 2207, 3274, 361, 2135, 2138, 45,
	2132, 2141, 0, 5, 7, 623, 0, 0,
	3, 9, 365, 2159, 2162, 45, 2156, 2165,
	0, 5, 7, 4625, 3, 9, 644, 2706,
	2710, 0, 45, 2702, 2714, 0, 5, 7,
	3, 9, 0, 5, 7, 3, 9, 623,
	363, 2147, 2150, 45, 2144, 2153, 0, 5,
	7, 623, 0, 0, 3, 9, 367, 2171,
	2174, 45, 2168, 2177, 0, 5, 7, 4625,
	3, 9, 647, 2722, 2726, 0, 45, 2718,
	2730, 0, 5, 7, 3, 9, 0, 5,
	7, 3, 9, 0, 4620, 6015, 650, 2738,
	2742, 0, 45, 650, 2734, 2746, 4600, 5883,
	5889, 0, 5, 7, 4620, 3, 9, 2204,
	2466, 2510, 653, 2754, 2758, 0, 45, 653,
	2750, 2762, 4605, 5895, 5901, 0, 5, 7,
	4620, 3, 9, 2466, 2510, 656, 2770, 2774,
	0, 45, 656, 2766, 2778, 4610, 5907, 5913,
	0, 5, 7, 4620, 3, 9, 2466, 2510,
	659, 2786, 2790, 0, 45, 2782, 2794, 4615,
	5919, 5925, 0, 5, 7, 3, 9, 2466,
	2510, 11, 467, 2698, 4585, 4590, 4475, 4580,
	4595, 5877, 6091, 6098, 620, 11, 467, 2694,
	4565, 4570, 4475, 2694, 4560, 4575, 5871, 6077,
	6084, 620, 11, 467, 2690, 4545, 4550, 4475,
	2690, 4540, 4555, 5865, 6063, 6070, 620, 11,
	467, 2686, 4525, 4530, 4475, 2686, 4520, 4535,
	5859, 6049, 6056, 620, 11, 467, 371, 2195,
	2198, 2192, 2201, 11, 467, 2682, 4505, 4510,
	4475, 4500, 4515, 620, 11, 467, 11, 467,
	11, 467, 369, 2183, 2186, 2180, 2189, 11,
	467, 2678, 4485, 4490, 4475, 4480, 4495, 620,
	11, 467, 11, 467, 623, 49, 683, 686,
	45, 680, 689, 0, 5, 7, 623, 3,
	9, 49, 683, 686, 45, 680, 689, 0,
	5, 7, 623, 3, 9, 49, 683, 686,
	45, 680, 689, 0, 5, 7, 596, 3,
	9, 599, 11, 467, 11, 467, 11, 467,
	623, 49, 683, 686, 45, 680, 689, 0,
	5, 7, 623, 3, 9, 49, 683, 686,
	45, 680, 689, 530, 0, 5, 7, 3,
	9, 35, 545, 548, 542, 551, 530, 0,
	5, 7, 3, 9, 35, 545, 548, 542,
	551, 530, 0, 5, 7, 3, 9, 35,
	545, 548, 542, 551, 0, 5, 7, 596,
	3, 9, 599, 11, 467, 11, 467, 11,
	467, 11, 467, 11, 467, 399, 0, 5,
	7, 3, 9, 623, 49, 683, 686, 45,
	680, 689, 0, 5, 7, 397, 3, 9,
	0, 5, 7, 3, 9, 125, 1, 11,
	467, 11, 467, 11, 467, 854, 0, 842,
	5, 7, 845, 848, 3, 9, 1, 419,
	431, 107, 109, 0, 2982, 827, 101, 103,
	623, 851, 3046, 3050, 45, 3042, 3054, 3038,
	4745, 4750, 11, 467, 0, 827, 101, 105,
	623, 49, 683, 686, 45, 680, 689, 0,
	5, 7, 397, 3, 9, 0, 5, 7,
	3, 9, 623, 47, 668, 671, 45, 665,
	674, 857, 0, 5, 7, 111, 3, 9,
	113, 0, 5, 7, 3, 9, 1, 419,
	431, 11, 467, 11, 467, 11, 467, 11,
	467, 623, 47, 668, 671, 45, 665, 674,
	0, 5, 7, 623, 3, 9, 47, 668,
	671, 45, 665, 674, 0, 5, 7, 111,
	3, 9, 113, 0, 5, 7, 3, 9,
	1, 419, 431, 11, 467, 11, 467, 11,
	467, 623, 47, 668, 671, 45, 665, 674,
	944, 0, 5, 7, 143, 145, 147, 149,
	3, 9, 0, 5, 7, 3, 9, 2662,
	623, 47, 668, 671, 45, 665, 674, 0,
	5, 7, 0, 3, 9, 3070, 0, 5,
	7, 0, 5, 7, 0, 5, 7, 1,
	3, 9, 419, 431, 3, 9, 419, 431,
	3, 9, 419, 431, 947, 125, 11, 467,
	11, 467, 11, 467, 11, 467, 11, 467,
	0, 5, 7, 3, 9, 623, 47, 668,
	671, 45, 665, 674, 2986, 0, 5, 7,
	827, 3, 9, 4710, 101, 836, 2998, 3002,
	836, 2998, 3002, 836, 2998, 3002, 2990, 2994,
	3006, 4715, 4720, 2994, 3006, 4715, 4720, 2994,
	3006, 4715, 4720, 11, 467, 11, 467, 0,
	5, 7, 3, 9, 623, 47, 668, 671,
	45, 665, 674, 0, 5, 7, 827, 3,
	9, 101, 839, 3022, 3026, 839, 3022, 3026,
	839, 3022, 3026, 3014, 3018, 3030, 4730, 4735,
	3018, 3030, 4730, 4735, 3018, 3030, 4730, 4735,
	11, 467, 11, 467, 0, 5, 7, 3,
	9, 623, 47, 668, 671, 45, 665, 674,
	0, 5, 7, 596, 3, 9, 43, 605,
	608, 43, 605, 608, 43, 605, 608, 599,
	602, 611, 2654, 2658, 602, 611, 2654, 2658,
	602, 611, 2654, 2658, 11, 467, 11, 467,
	11, 467, 950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 956, 959, 0,
	0, 0, 953, 962, 0, 5, 7, 397,
	3, 9, 0, 5, 7, 3, 9, 623,
	47, 668, 671, 45, 665, 674, 0, 5,
	7, 623, 3, 9, 51, 704, 707, 45,
	701, 710, 752, 0, 5, 7, 737, 3,
	9, 65, 743, 746, 63, 740, 749, 0,
	5, 7, 737, 3, 9, 65, 743, 746,
	63, 740, 749, 0, 5, 7, 623, 3,
	9, 49, 683, 686, 45, 680, 689, 0,
	5, 7, 596, 3, 9, 43, 605, 608,
	602, 611, 0, 5, 7, 125, 3, 9,
	1, 11, 467, 11, 467, 11, 467, 11,
	467, 11, 467, 11, 467, 11, 467, 11,
	467, 0, 0, 189, 1112, 1115, 1109, 1118,
	0, 0, 0, 183, 1076, 1079, 1073, 1082,
	0, 203, 1196, 1199, 1193, 1202, 0, 0,
	0, 0, 0, 0, 253, 1496, 1499, 1493,
	1502, 0, 0, 0, 0, 0, 0, 229,
	1352, 1355, 1349, 1358, 227, 1340, 1343, 1337,
	1346, 0, 0, 199, 1172, 1175, 1169, 1178,
	0, 0, 0, 167, 980, 983, 977, 986,
	0, 0, 0, 233, 1376, 1379, 1373, 1382,
	0, 0, 0, 0, 0, 0, 217, 1280,
	1283, 1277, 1286, 0, 0, 0, 0, 201,
	1184, 1187, 1181, 1190, 0, 0, 0, 215,
	1268, 1271, 1265, 1274, 205, 1208, 1211, 1205,
	1214, 0, 0, 0, 0, 0, 247, 1460,
	1463, 1457, 1466, 0, 249, 1472, 1475, 1469,
	1478, 0, 0, 0, 0, 0, 173, 1016,
	1019, 1013, 1022, 0, 0, 0, 257, 1520,
	1523, 1517, 1526, 0, 0, 0, 0, 0,
	0, 0, 209, 1232, 1235, 1229, 1238, 0,
	0, 0, 187, 1100, 1103, 1097, 1106, 197,
	1160, 1163, 1157, 1166, 0, 0, 0, 0,
	0, 241, 1424, 1427, 1421, 1430, 0, 243,
	1436, 1439, 1433, 1442, 0, 191, 1124, 1127,
	1121, 1130, 245, 1448, 1451, 1445, 1454, 0,
	0, 0, 0, 0, 175, 1028, 1031, 1025,
	1034, 177, 1040, 1043, 1037, 1046, 0, 0,
	0, 0, 0, 0, 195, 1148, 1151, 1145,
	1154, 0, 239, 1412, 1415, 1409, 1418, 165,
	968, 971, 0, 965, 974, 0, 213, 1256,
	1259, 0, 1253, 1262, 219, 1292, 1295, 0,
	1289, 1298, 0, 0, 0, 0, 221, 1304,
	1307, 1301, 1310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 1364, 1367, 1361,
	1370, 0, 0, 171, 1004, 1007, 1001, 1010,
	0, 0, 0, 181, 1064, 1067, 1061, 1070,
	0, 0, 0, 211, 1244, 1247, 1241, 1250,
	185, 1088, 1091, 1085, 1094, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225,
	1328, 1331, 1325, 1334, 0, 169, 992, 995,
	989, 998, 0, 237, 1400, 1403, 1397, 1406,
	0, 193, 1136, 1139, 1133, 1142, 0, 0,
	0, 207, 1220, 1223, 1217, 1226, 0, 0,
	255, 1508, 1511, 1505, 1514, 0, 0, 0,
	0, 0, 223, 1316, 1319, 1313, 1322, 0,
	179, 1052, 1055, 1049, 1058, 0, 0, 2666,
	623, 49, 683, 686, 45, 680, 689, 0,
	0, 251, 1484, 1487, 1481, 1490, 0, 0,
	0, 0, 0, 235, 1388, 1391, 1385, 1394,
	596, 614, 1, 623, 49, 683, 686, 45,
	680, 689, 0, 5, 7, 623, 3, 9,
	47, 668, 671, 45, 665, 674, 0, 5,
	7, 397, 3, 9, 0, 5, 7, 3,
	9, 125, 1, 11, 467, 11, 467, 11,
	467, 125, 1, 623, 47, 668, 671, 45,
	665, 674, 0, 5, 7, 623, 3, 9,
	47, 668, 671, 45, 665, 674, 0, 5,
	7, 623, 3, 9, 49, 683, 686, 45,
	680, 689, 0, 5, 7, 33, 533, 3,
	9, 35, 545, 548, 542, 551, 863, 0,
	5, 7, 536, 3, 9, 129, 131, 0,
	133, 135, 0, 137, 0, 139, 141, 0,
	554, 127, 1, 0, 0, 11, 467, 113,
	111, 11, 467, 11, 467, 11, 467, 623,
	47, 668, 671, 45, 665, 674, 0, 5,
	7, 623, 3, 9, 47, 668, 671, 45,
	665, 674, 0, 5, 7, 623, 3, 9,
	49, 683, 686, 45, 680, 689, 0, 5,
	7, 33, 533, 3, 9, 539, 113, 111,
	11, 467, 11, 467, 11, 467, 623, 47,
	668, 671, 45, 665, 674, 0, 5, 7,
	623, 3, 9, 47, 668, 671, 45, 665,
	674, 0, 5, 7, 623, 3, 9, 47,
	668, 671, 45, 665, 674, 0, 5, 7,
	111, 3, 9, 113, 0, 5, 7, 3,
	9, 1, 419, 431, 11, 467, 11, 467,
	11, 467, 11, 467, 623, 51, 704, 707,
	45, 701, 710, 0, 5, 7, 623, 3,
	9, 692, 45, 1, 11, 467, 623, 51,
	704, 707, 45, 701, 710, 0, 5, 7,
	623, 3, 9, 47, 668, 671, 45, 665,
	674, 0, 5, 7, 623, 3, 9, 47,
	668, 671, 45, 665, 674, 0, 5, 7,
	111, 3, 9, 113, 0, 5, 7, 3,
	9, 1, 419, 431, 11, 467, 11, 467,
	11, 467, 11, 467, 623, 49, 683, 686,
	45, 680, 689, 0, 5, 7, 827, 3,
	9, 2990, 101, 11, 467, 623, 49, 683,
	686, 45, 680, 689, 0, 5, 7, 2213,
	3, 9, 113, 111, 113, 3062, 377, 111,
	113, 111, 113, 3294, 3290, 11, 467, 2210,
	113, 3286, 375, 111, 113, 3278, 2210, 113,
	375, 111, 113, 3282, 623, 49, 683, 686,
	45, 680, 689, 0, 5, 7, 623, 3,
	9, 49, 683, 686, 45, 680, 689, 75,
	0, 5, 7, 3, 9, 1, 11, 467,
	11, 467, 623, 47, 668, 671, 45, 665,
	674, 530, 0, 5, 7, 3, 9, 35,
	545, 548, 542, 551, 75, 0, 5, 7,
	3, 9, 1, 11, 467, 11, 467, 623,
	49, 683, 686, 45, 680, 689, 0, 5,
	7, 596, 3, 9, 617, 1, 11, 467,
	623, 47, 668, 671, 45, 665, 674, 530,
	0, 5, 7, 3, 9, 35, 545, 548,
	542, 551, 0, 5, 7, 2246, 3, 9,
	2249, 11, 467, 11, 467, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2261, 2264,
	3314, 3318, 0, 0, 0, 3310, 3322, 3326,
	5315, 5320, 403, 0, 5, 7, 407, 3,
	9, 422, 437, 2243, 413, 2418, 2422, 2414,
	2426, 0, 5, 7, 3, 9, 11, 467,
	2258, 405, 11, 467, 413, 2474, 2482, 2490,
	5305, 5310, 4310, 0, 5, 7, 9, 2252,
	2255, 437, 11, 467, 2518, 4315, 4320, 4325,
	11, 440, 443, 446, 2430, 4290, 4295, 4305,
	4300, 11, 425, 428, 434, 2518, 4315, 4320,
	11, 440, 443, 0, 0, 2303, 3574, 3578,
	3570, 3582, 3586, 5445, 5450, 0, 0, 0,
	2294, 3514, 3518, 3510, 3522, 3526, 5415, 5420,
	0, 2324, 3714, 3718, 3710, 3722, 3726, 5515,
	5520, 0, 0, 0, 0, 0, 0, 0,
	2399, 4214, 4218, 4210, 4222, 4226, 5765, 5770,
	0, 2408, 4274, 4278, 4270, 4282, 4286, 5795,
	5800, 0, 0, 0, 0, 0, 0, 2363,
	3974, 3978, 3970, 3982, 3986, 5645, 5650, 2360,
	3954, 3958, 3950, 3962, 3966, 5635, 5640, 0,
	0, 2318, 3674, 3678, 3670, 3682, 3686, 5495,
	5500, 0, 0, 0, 2270, 3354, 3358, 3350,
	3362, 3366, 5335, 5340, 0, 0, 0, 2369,
	4014, 4018, 4010, 4022, 4026, 5665, 5670, 0,
	0, 0, 0, 0, 0, 2345, 3854, 3858,
	3850, 3862, 3866, 5585, 5590, 0, 0, 0,
	0, 2321, 3694, 3698, 3690, 3702, 3706, 5505,
	5510, 0, 0, 0, 2342, 3834, 3838, 3830,
	3842, 3846, 5575, 5580, 2327, 3734, 3738, 3730,
	3742, 3746, 5525, 5530, 0, 0, 0, 0,
	0, 2390, 4154, 4158, 4150, 4162, 4166, 5735,
	5740, 0, 2393, 4174, 4178, 4170, 4182, 4186,
	5745, 5750, 0, 0, 0, 0, 0, 2279,
	3414, 3418, 3410, 3422, 3426, 5365, 5370, 0,
	0, 0, 2405, 4254, 4258, 4250, 4262, 4266,
	5785, 5790, 0, 0, 0, 0, 0, 0,
	0, 2333, 3774, 3778, 3770, 3782, 3786, 5545,
	5550, 0, 0, 0, 2300, 3554, 3558, 3550,
	3562, 3566, 5435, 5440, 2315, 3654, 3658, 3650,
	3662, 3666, 5485, 5490, 0, 0, 0, 0,
	0, 2381, 4094, 4098, 4090, 4102, 4106, 5705,
	5710, 0, 2384, 4114, 4118, 4110, 4122, 4126,
	5715, 5720, 0, 2306, 3594, 3598, 3590, 3602,
	3606, 5455, 5460, 2387, 4134, 4138, 4130, 4142,
	4146, 5725, 5730, 0, 0, 0, 0, 0,
	2282, 3434, 3438, 3430, 3442, 3446, 5375, 5380,
	2285, 3454, 3458, 3450, 3462, 3466, 5385, 5390,
	0, 0, 0, 0, 0, 0, 2312, 3634,
	3638, 3630, 3642, 3646, 5475, 5480, 0, 2378,
	4074, 4078, 4070, 4082, 4086, 5695, 5700, 2267,
	3334, 3338, 0, 3330, 3342, 3346, 5325, 5330,
	0, 2339, 3814, 3818, 0, 3810, 3822, 3826,
	5565, 5570, 2348, 3874, 3878, 0, 3870, 3882,
	3886, 5595, 5600, 0, 0, 0, 0, 2351,
	3894, 3898, 3890, 3902, 3906, 5605, 5610, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	2366, 3994, 3998, 3990, 4002, 4006, 5655, 5660,
	0, 0, 2276, 3394, 3398, 3390, 3402, 3406,
	5355, 5360, 0, 0, 0, 2291, 3494, 3498,
	3490, 3502, 3506, 5405, 5410, 0, 0, 0,
	2336, 3794, 3798, 3790, 3802, 3806, 5555, 5560,
	2297, 3534, 3538, 3530, 3542, 3546, 5425, 5430,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2357, 3934, 3938, 3930, 3942, 3946,
	5625, 5630, 0, 2273, 3374, 3378, 3370, 3382,
	3386, 5345, 5350, 0, 2375, 4054, 4058, 4050,
	4062, 4066, 5685, 5690, 0, 2309, 3614, 3618,
	3610, 3622, 3626, 5465, 5470, 0, 0, 0,
	2330, 3754, 3758, 3750, 3762, 3766, 5535, 5540,
	0, 0, 2402, 4234, 4238, 4230, 4242, 4246,
	5775, 5780, 0, 0, 0, 0, 0, 2354,
	3914, 3918, 3910, 3922, 3926, 5615, 5620, 0,
	2288, 3474, 3478, 3470, 3482, 3486, 5395, 5400,
	0, 0, 623, 2674, 713, 2822, 2826, 45,
	2818, 2830, 2834, 4655, 4660, 0, 0, 2396,
	4194, 4198, 4190, 4202, 4206, 5755, 5760, 0,
	0, 0, 0, 0, 2372, 4034, 4038, 4030,
	4042, 4046, 5675, 5680, 590, 587, 0, 2638,
	2642, 569, 470, 479, 2634, 2646, 4460, 2478,
	2486, 4470, 569, 2450, 2494, 2650, 2970, 93,
	4695, 4700, 2966, 2958, 2962, 4690, 4705
};

static const short _zone_scanner_eof_actions[] = {
	0, 2670, 2846, 409, 15, 15, 15, 409,
	409, 409, 409, 409, 409, 2846, 2846, 2846,
	409, 409, 641, 2846, 2846, 2846, 2846, 409,
	409, 15, 95, 95, 95, 95, 95, 95,
	95, 95, 41, 641, 0, 15, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 4465,
	641, 409, 593, 641, 641, 409, 409, 641,
	2846, 409, 2846, 2846, 2846, 0, 0, 0,
	31, 31, 31, 509, 509, 509, 509, 31,
	31, 755, 755, 2910, 2910, 2910, 2910, 755,
	755, 69, 2910, 2910, 2910, 2910, 77, 626,
	4665, 482, 482, 4665, 2838, 4665, 77, 81,
	81, 81, 485, 485, 485, 512, 512, 512,
	512, 485, 81, 0, 85, 785, 791, 87,
	791, 15, 15, 515, 515, 515, 515, 791,
	15, 87, 0, 0, 123, 123, 123, 123,
	123, 123, 123, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 373,
	629, 629, 3058, 3058, 3058, 3058, 373, 373,
	373, 629, 629, 3058, 3058, 3058, 3058, 373,
	629, 373, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383,
	383, 635, 635, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 830,
	830, 830, 830, 830, 830, 381, 381, 381,
	381, 381, 830, 830, 830, 830, 830, 830,
	381, 381, 632, 632, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381,
	632, 632, 632, 632, 381, 381, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 833,
	833, 401, 401, 401, 401, 401, 401, 638,
	638, 638, 2842, 638, 2842, 638, 2842, 638,
	2842, 2842, 2842, 2842, 401, 2842, 2842, 2842,
	401, 2842, 2842, 2842, 401, 2842, 2842, 2842,
	401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 638, 638, 401,
	401, 401, 773, 773, 773, 773, 833, 833,
	2207, 2207, 2207, 2207, 2207, 2207, 2207, 2207,
	2207, 2207, 2207, 2207, 2207, 2207, 2207, 2207,
	2207, 2207, 2207, 2207, 2207, 2207, 2207, 2207,
	2207, 2207, 2207, 2207, 2207, 2207, 2207, 2207,
	2207, 2207, 2207, 2207, 2207, 2207, 2207, 2207,
	2207, 2207, 2207, 2207, 2207, 2207, 2207, 2207,
	2207, 2207, 2207, 2207, 2207, 2207, 2207, 638,
	638, 638, 638, 638, 638, 401, 401, 401,
	401, 401, 638, 638, 638, 638, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 638, 638, 401,
	401, 401, 401, 401, 401, 401, 854, 854,
	854, 2982, 2982, 854, 854, 401, 854, 2982,
	2982, 638, 638, 401, 401, 638, 638, 857,
	857, 857, 857, 401, 401, 401, 638, 638,
	638, 638, 857, 857, 857, 857, 401, 401,
	638, 638, 944, 944, 2662, 2662, 944, 3070,
	947, 947, 947, 947, 947, 947, 947, 944,
	944, 944, 2662, 2662, 2986, 4710, 944, 944,
	944, 2662, 2662, 2986, 4710, 944, 944, 944,
	2662, 2662, 944, 3070, 944, 944, 401, 950,
	950, 401, 401, 638, 638, 638, 638, 752,
	752, 752, 752, 638, 638, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401,
	401, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 950, 950, 950,
	950, 950, 950, 950, 950, 950, 2666, 2666,
	950, 950, 950, 950, 950, 950, 950, 950,
	950, 401, 401, 401, 638, 638, 638, 638,
	401, 401, 401, 401, 401, 401, 401, 401,
	401, 638, 638, 638, 638, 638, 638, 857,
	857, 863, 863, 863, 863, 863, 863, 863,
	863, 863, 401, 863, 863, 863, 863, 863,
	401, 857, 857, 401, 401, 401, 638, 638,
	638, 638, 638, 638, 857, 857, 857, 857,
	401, 401, 401, 638, 638, 638, 638, 638,
	638, 857, 857, 857, 857, 401, 401, 401,
	638, 638, 638, 638, 401, 401, 638, 638,
	638, 638, 638, 638, 857, 857, 857, 857,
	401, 401, 401, 638, 638, 833, 833, 401,
	638, 638, 857, 857, 857, 857, 3062, 857,
	857, 857, 857, 3294, 401, 857, 857, 3286,
	857, 857, 3286, 857, 857, 3286, 857, 857,
	3286, 638, 638, 638, 638, 401, 401, 401,
	401, 638, 638, 401, 401, 401, 401, 401,
	401, 638, 638, 401, 401, 401, 401, 638,
	638, 401, 401, 401, 401, 401, 401, 409,
	2261, 401, 2243, 15, 15, 401, 401, 2243,
	2243, 2243, 2243, 2243, 2243, 15, 2243, 2243,
	409, 409, 2261, 409, 409, 409, 2261, 409,
	2261, 409, 409, 2261, 409, 2261, 409, 409,
	409, 409, 409, 2261, 2261, 409, 409, 2261,
	409, 409, 409, 2261, 409, 409, 409, 2261,
	409, 409, 409, 409, 2261, 409, 409, 409,
	2261, 409, 409, 409, 2261, 2261, 409, 409,
	409, 409, 2261, 409, 2261, 409, 409, 409,
	409, 2261, 409, 409, 409, 2261, 409, 409,
	409, 409, 409, 409, 409, 2261, 409, 409,
	2261, 2261, 409, 409, 2261, 409, 2261, 409,
	2261, 2261, 409, 409, 409, 409, 2261, 2261,
	409, 409, 409, 409, 2261, 409, 2261, 2261,
	409, 2261, 2261, 409, 409, 409, 409, 2261,
	409, 409, 409, 409, 409, 409, 409, 409,
	409, 2261, 409, 409, 2261, 409, 2261, 409,
	409, 409, 2261, 2261, 409, 409, 409, 409,
	409, 2261, 409, 2261, 409, 2261, 409, 2261,
	409, 409, 409, 2261, 409, 409, 2261, 409,
	409, 409, 2261, 409, 2261, 409, 409, 641,
	2674, 409, 409, 2261, 409, 409, 409, 409,
	409, 2261, 0, 0, 93, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0
};






__attribute__((visibility("default")))
int zs_init(
	zs_scanner_t *s,
	const char *origin,
	const uint16_t rclass,
	const uint32_t ttl)
{
	if (s == NULL) {
		return -1;
	}

	memset(s, 0, sizeof(*s));

	// Nonzero initial scanner state.
	s->cs = 1338;

	// Reset the file descriptor.
	s->file.descriptor = -1;

	// Use the root zone as origin if not specified.
	if (origin == NULL || strlen(origin) == 0) {
		origin = ".";
	}
	size_t origin_len = strlen(origin);

	// Prepare a zone settings header.
	const char *format;
	if (origin[origin_len - 1] != '.') {
		format = "$ORIGIN %s.\n";
	} else {
		format = "$ORIGIN %s\n";
	}

	char settings[1024];
	int ret = snprintf(settings, sizeof(settings), format, origin);
	if (ret <= 0 || ret >= sizeof(settings)) {
		ERR(ZS_ENOMEM);
		return -1;
	}

	// Parse the settings to set up the scanner origin.
	if (zs_set_input_string(s, settings, ret) != 0 ||
	    zs_parse_all(s) != 0) {
		return -1;
	}

	// Set scanner defaults.
	s->path = strdup(".");
	if (s->path == NULL) {
		ERR(ZS_ENOMEM);
		return -1;
	}
	s->default_class = rclass;
	s->default_ttl = ttl;
	s->line_counter = 1;

	s->state = ZS_STATE_NONE;
	s->process.automatic = false;

	return 0;
}

static void input_deinit(
	zs_scanner_t *s,
	bool keep_filename)
{
	// Deinit the file input.
	if (s->file.descriptor != -1) {
		// Unmap the file content.
		if (s->input.start != NULL) {
			if (s->input.mmaped) {
				munmap((void *)s->input.start,
				       s->input.end - s->input.start);
			} else {
				free((void *)s->input.start);
			}
		}

		// Close the opened file.
		close(s->file.descriptor);
		s->file.descriptor = -1;
	}

	// Keep file name for possible trailing error report.
	if (!keep_filename) {
		free(s->file.name);
		s->file.name = NULL;
	}

	// Unset the input limits.
	s->input.start   = NULL;
	s->input.current = NULL;
	s->input.end     = NULL;
	s->input.eof     = false;
}

__attribute__((visibility("default")))
void zs_deinit(
	zs_scanner_t *s)
{
	if (s == NULL) {
		return;
	}

	input_deinit(s, false);
	free(s->path);
}

static int set_input_string(
	zs_scanner_t *s,
	const char *input,
	size_t size,
	bool final_block)
{
	if (s == NULL) {
		return -1;
	}

	if (input == NULL) {
		ERR(ZS_EINVAL);
		return -1;
	}

	// Deinit possibly opened file.
	input_deinit(s, final_block);

	// Set the scanner input limits.
	s->input.start   = input;
	s->input.current = input;
	s->input.end     = input + size;
	s->input.eof     = final_block;

	return 0;
}

static char *read_file_to_buf(
	int fd,
	size_t *bufsize)
{
	size_t bufs = 0, newbufs = 8192;
	char *buf = malloc(bufs + newbufs);
	int ret = 0;

	while (buf != NULL && (ret = read(fd, buf + bufs, newbufs)) == newbufs) {
		bufs += newbufs;
		newbufs = bufs;
		char *newbuf = realloc(buf, bufs + newbufs);
		if (newbuf == NULL) {
			free(buf);
		}
		buf = newbuf;
	}
	if (ret < 0) {
		free(buf);
		return NULL;
	}

	*bufsize = bufs + ret;
	return buf;
}

__attribute__((visibility("default")))
int zs_set_input_string(
	zs_scanner_t *s,
	const char *input,
	size_t size)
{
	s->state = ZS_STATE_NONE;

	return set_input_string(s, input, size, false);
}

__attribute__((visibility("default")))
int zs_set_input_file(
	zs_scanner_t *s,
	const char *file_name)
{
	if (s == NULL) {
		return -1;
	}

	if (file_name == NULL) {
		ERR(ZS_EINVAL);
		return -1;
	}

	// Deinit possibly opened file.
	input_deinit(s, false);

	// Try to open the file.
	s->file.descriptor = open(file_name, O_RDONLY);
	if (s->file.descriptor == -1) {
		ERR(errno == EACCES ? ZS_FILE_ACCESS : ZS_FILE_OPEN);
		return -1;
	}

	char *start = NULL;
	size_t size = 0;

	// Check the input.
	struct stat file_stat;
	if (fstat(s->file.descriptor, &file_stat) == -1) {
		ERR(ZS_FILE_INVALID);
		input_deinit(s, false);
		return -1;
	} else if (S_ISCHR(file_stat.st_mode) ||
	           S_ISBLK(file_stat.st_mode) ||
	           S_ISFIFO(file_stat.st_mode)) {
		// Workaround if cannot mmap, read to memory.
		start = read_file_to_buf(s->file.descriptor, &size);
		if (start == NULL) {
			ERR(ZS_FILE_INVALID);
			input_deinit(s, false);
			return -1;
		}
	} else if (!S_ISREG(file_stat.st_mode)) { // Require regular file.
		ERR(ZS_FILE_INVALID);
		input_deinit(s, false);
		return -1;
	} else if (file_stat.st_size > 0) { // Mmap non-empty file.
		start = mmap(0, file_stat.st_size, PROT_READ, MAP_SHARED,
		             s->file.descriptor, 0);
		if (start == MAP_FAILED) {
			ERR(ZS_FILE_INVALID);
			input_deinit(s, false);
			return -1;
		}

		size = file_stat.st_size;
		s->input.mmaped = true;

		// Try to set the mapped memory advise to sequential.
#if defined(MADV_SEQUENTIAL) && !defined(__sun)
		(void)madvise(start, size, MADV_SEQUENTIAL);
#else
#ifdef POSIX_MADV_SEQUENTIAL
		(void)posix_madvise(start, size, POSIX_MADV_SEQUENTIAL);
#endif /* POSIX_MADV_SEQUENTIAL */
#endif /* MADV_SEQUENTIAL && !__sun */
	}

	// Set the scanner input limits.
	s->input.start   = start;
	s->input.current = start;
	s->input.end     = (start != NULL) ? start + size : start;

	// Get absolute path of the zone file if possible.
	char *full_name = realpath(file_name, NULL);
	if (full_name != NULL) {
		free(s->path);
		s->path = strdup(dirname(full_name));
		free(full_name);
		if (s->path == NULL) {
			ERR(ZS_ENOMEM);
			input_deinit(s, false);
			return -1;
		}
	}

	s->file.name = strdup(file_name);
	if (s->file.name == NULL) {
		ERR(ZS_ENOMEM);
		input_deinit(s, false);
		return -1;
	}

	s->state = ZS_STATE_NONE;

	return 0;
}

__attribute__((visibility("default")))
int zs_set_processing(
	zs_scanner_t *s,
	void (*process_record)(zs_scanner_t *),
	void (*process_error)(zs_scanner_t *),
	void *data)
{
	if (s == NULL) {
		return -1;
	}

	s->process.record = process_record;
	s->process.error = process_error;
	s->process.data = data;

	return 0;
}

__attribute__((visibility("default")))
int zs_set_processing_comment(
	zs_scanner_t *s,
	void (*process_comment)(zs_scanner_t *))
{
	if (s == NULL) {
		return -1;
	}

	s->process.comment = process_comment;

	return 0;
}

typedef enum {
	WRAP_NONE,     // Initial state.
	WRAP_DETECTED, // Input block end is a first '\' in rdata.
	WRAP_PROCESS   // Parsing of auxiliary block = "\".
} wrap_t;

static void parse(
	zs_scanner_t *s,
	wrap_t *wrap)
{
	// Restore scanner input limits (Ragel internals).
	const char *p = s->input.current;
	const char *pe = s->input.end;
	const char *eof = s->input.eof ? pe : NULL;

	// Restore state variables (Ragel internals).
	int cs  = s->cs;
	int top = s->top;
	int stack[ZS_RAGEL_STACK_SIZE];
	memcpy(stack, s->stack, sizeof(stack));

	// Next 2 variables are for better performance.
	// Restoring r_data pointer to next free space.
	uint8_t *rdata_tail = s->r_data + s->r_data_tail;
	// Initialization of the last r_data byte.
	uint8_t *rdata_stop = s->r_data + ZS_MAX_RDATA_LENGTH - 1;

	// Write scanner body (in C).

	{
	int _klen;
	unsigned int _trans;
	short _widec;
	const short *_acts;
	unsigned int _nacts;
	const short *_keys;

	if ( p == pe )
		goto _test_eof;
	if ( cs == 0 )
		goto _out;
_resume:
	_widec = (*p);
	_klen = _zone_scanner_cond_lengths[cs];
	_keys = _zone_scanner_cond_keys + (_zone_scanner_cond_offsets[cs]*2);
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _mid[0] )
				_upper = _mid - 2;
			else if ( _widec > _mid[1] )
				_lower = _mid + 2;
			else {
				switch ( _zone_scanner_cond_spaces[_zone_scanner_cond_offsets[cs] + ((_mid - _keys)>>1)] ) {
	case 0: {
		_widec = (short)(1664 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		break;
	}
	case 1: {
		_widec = (short)(2176 + ((*p) - -128));
		if (
 !s->multiline  ) _widec += 256;
		break;
	}
	case 2: {
		_widec = (short)(128 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		break;
	}
	case 3: {
		_widec = (short)(640 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		break;
	}
	case 4: {
		_widec = (short)(1152 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		break;
	}
	case 5: {
		_widec = (short)(3712 + ((*p) - -128));
		if (
 s->number64 != 0  ) _widec += 256;
		break;
	}
	case 6: {
		_widec = (short)(5248 + ((*p) - -128));
		if (
 s->number64 == 0  ) _widec += 256;
		break;
	}
	case 7: {
		_widec = (short)(2688 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		if (
 !s->multiline  ) _widec += 512;
		break;
	}
	case 8: {
		_widec = (short)(4224 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		if (
 s->number64 != 0  ) _widec += 512;
		break;
	}
	case 9: {
		_widec = (short)(5760 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		if (
 s->number64 == 0  ) _widec += 512;
		break;
	}
	case 10: {
		_widec = (short)(6784 + ((*p) - -128));
		if (
 s->number64 != 0  ) _widec += 256;
		if (
 s->number64 == 0  ) _widec += 512;
		break;
	}
	case 11: {
		_widec = (short)(13952 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		if (
 !s->multiline  ) _widec += 512;
		if (
 s->number64 == 0  ) _widec += 1024;
		break;
	}
	case 12: {
		_widec = (short)(7808 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		if (
 s->number64 != 0  ) _widec += 512;
		if (
 s->number64 == 0  ) _widec += 1024;
		break;
	}
	case 13: {
		_widec = (short)(9856 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		if (
 !s->multiline  ) _widec += 512;
		if (
 s->number64 != 0  ) _widec += 1024;
		if (
 s->number64 == 0  ) _widec += 2048;
		break;
	}
				}
				break;
			}
		}
	}

	_keys = _zone_scanner_trans_keys + _zone_scanner_key_offsets[cs];
	_trans = _zone_scanner_index_offsets[cs];

	_klen = _zone_scanner_single_lengths[cs];
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( _widec < *_mid )
				_upper = _mid - 1;
			else if ( _widec > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _zone_scanner_range_lengths[cs];
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _mid[0] )
				_upper = _mid - 2;
			else if ( _widec > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}

_match:
	_trans = _zone_scanner_indicies[_trans];
	cs = _zone_scanner_trans_targs[_trans];

	if ( _zone_scanner_trans_actions[_trans] == 0 )
		goto _again;

	_acts = _zone_scanner_actions + _zone_scanner_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 0:
	{
		p--; {cs = stack[--top]; goto _again;}
	}
	break;
	case 1:
	{
		s->line_counter++;
	}
	break;
	case 2:
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {cs = 62;goto _again;}
		}
		s->multiline = true;
	}
	break;
	case 3:
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {cs = 62;goto _again;}
		}
		s->multiline = false;
	}
	break;
	case 4:
	{
		s->buffer_length = 0;
	}
	break;
	case 5:
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	break;
	case 6:
	{
		s->buffer[s->buffer_length++] = 0;

		// Execute the comment callback.
		if (s->process.automatic && s->process.comment != NULL) {
			s->process.comment(s);

			// Stop if required from the callback.
			if (s->state == ZS_STATE_STOP) {
				{p++; goto _out; }
			}
		}
	}
	break;
	case 7:
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	break;
	case 8:
	{
		WARN(ZS_BAD_REST);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 9:
	{
		s->buffer_length = 0;
	}
	break;
	case 10:
	{
		if ((*p) == '\r') {
			ERR(ZS_DOS_NEWLINE);
		}

		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	break;
	case 11:
	{
		// Terminate the error context string.
		s->buffer[s->buffer_length++] = 0;

		// Error counter incrementation.
		s->error.counter++;

		// Initialize the fcall stack.
		top = 0;

		// Reset per-record contexts.
		s->case_record = false;
		s->long_string = false;
		s->comma_list = false;

		s->state = ZS_STATE_ERROR;

		// Execute the error callback.
		if (s->process.automatic) {
			p--;
			if (s->process.error != NULL) {
				s->process.error(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; goto _out; }
				}
			}

			// Stop the scanner if fatal error.
			if (s->error.fatal) {
				{p++; goto _out; }
			}
			{cs = 61;goto _again;}
		} else {
			// Return if external processing.
			p--; cs = 61; {p++; goto _out; }
		}
	}
	break;
	case 12:
	{ p--; {stack[top++] = cs; cs = 1338;goto _again;} }
	break;
	case 13:
	{
		s->item_length = 0;
		s->item_length_position = s->dname_tmp_length++;
	}
	break;
	case 14:
	{
		// Check for maximum dname label length.
		if (s->item_length < ZS_MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length++] = (*p);
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 15:
	{
		// Check for maximum dname length overflow after each label.
		// (at least the next label length must follow).
		if (s->dname_tmp_length < ZS_MAX_DNAME_LENGTH) {
			(s->dname)[s->item_length_position] =
				(uint8_t)(s->item_length);
		} else {
			WARN(ZS_DNAME_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 16:
	{
		if (s->item_length < ZS_MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length] = 0;
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 17:
	{
		(s->dname)[s->dname_tmp_length] *= 10;
		(s->dname)[s->dname_tmp_length] += digit_to_num[(uint8_t)(*p)];
	}
	break;
	case 18:
	{
		s->dname_tmp_length++;
	}
	break;
	case 19:
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 20:
	{
		// Enough room for the terminal label is guaranteed (_label_exit).
		(s->dname)[s->dname_tmp_length++] = 0;
	}
	break;
	case 21:
	{
		// Check for (relative + origin) dname length overflow.
		if (s->dname_tmp_length + s->zone_origin_length <= ZS_MAX_DNAME_LENGTH) {
			memcpy(s->dname + s->dname_tmp_length,
			       s->zone_origin,
			       s->zone_origin_length);

			s->dname_tmp_length += s->zone_origin_length;
		} else {
			WARN(ZS_DNAME_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 22:
	{
		// Copy already verified zone origin.
		memcpy(s->dname,
		       s->zone_origin,
		       s->zone_origin_length);

		s->dname_tmp_length = s->zone_origin_length;
	}
	break;
	case 23:
	{
		s->item_length_position = 0;
		s->dname_tmp_length = 0;
	}
	break;
	case 24:
	{
		WARN(ZS_BAD_DNAME_CHAR);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 25:
	{ p--; {stack[top++] = cs; cs = 64;goto _again;} }
	break;
	case 26:
	{
		if (rdata_tail <= rdata_stop) {
			s->item_length_location = rdata_tail++;
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 27:
	{
		s->item_length = rdata_tail - s->item_length_location - 1;
		if (s->comma_list && s->item_length == 0) {
			WARN(ZS_EMPTY_LIST_ITEM);
			p--; {cs = 62;goto _again;}
		}
		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 28:
	{
		if (rdata_tail < rdata_stop) {
			s->item_length2_location = rdata_tail;
			rdata_tail += 2;
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 29:
	{
		s->item_length = rdata_tail - s->item_length2_location - 2;

		if (s->item_length <= MAX_ITEM_LENGTH2) {
			uint16_t val = htons((uint16_t)(s->item_length));
			memcpy(s->item_length2_location, &val, 2);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 30:
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
	break;
	case 31:
	{
		s->r_owner_length = s->dname_tmp_length;
	}
	break;
	case 32:
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 33:
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 34:
	{
		s->dname = rdata_tail;
	}
	break;
	case 35:
	{
		rdata_tail += s->dname_tmp_length;
	}
	break;
	case 36:
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 37:
	{
		s->number64 = 0;
	}
	break;
	case 38:
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 39:
	{
		s->decimal_counter = 0;
	}
	break;
	case 40:
	{
		s->number64_tmp = s->number64;
	}
	break;
	case 41:
	{
		s->decimal_counter++;
	}
	break;
	case 42:
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 43:
	{
		s->decimals = 2;
	}
	break;
	case 44:
	{
		s->decimals = 3;
	}
	break;
	case 45:
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 46:
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 47:
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 48:
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_type = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 49:
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_data_length = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 50:
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 51:
	{ if (s->number64 <= (UINT32_MAX / 60)) {
	                  s->number64 *= 60;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {cs = 62;goto _again;}
	              }
	            }
	break;
	case 52:
	{ if (s->number64 <= (UINT32_MAX / 3600)) {
	                  s->number64 *= 3600;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {cs = 62;goto _again;}
	              }
	            }
	break;
	case 53:
	{ if (s->number64 <= (UINT32_MAX / 86400)) {
	                  s->number64 *= 86400;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {cs = 62;goto _again;}
	              }
	            }
	break;
	case 54:
	{ if (s->number64 <= (UINT32_MAX / 604800)) {
	                  s->number64 *= 604800;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {cs = 62;goto _again;}
	              }
	            }
	break;
	case 55:
	{
		s->number64_tmp = s->number64;
	}
	break;
	case 56:
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 57:
	{
		s->buffer_length = 0;
	}
	break;
	case 58:
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 59:
	{
		s->buffer[s->buffer_length] = 0;

		if (s->buffer_length == 14) { // Date; 14 = len("YYYYMMDDHHmmSS").
			uint32_t timestamp;
			int ret = date_to_timestamp(s->buffer, &timestamp);

			if (ret == ZS_OK) {
				*((uint32_t *)rdata_tail) = htonl(timestamp);
				rdata_tail += 4;
			} else {
				WARN(ret);
				p--; {cs = 62;goto _again;}
			}
		} else if (s->buffer_length <= 10) { // Timestamp format.
			char *end;

			s->number64 = strtoull((char *)(s->buffer), &end,  10);

			if (end == (char *)(s->buffer) || *end != '\0') {
				WARN(ZS_BAD_TIMESTAMP);
				p--; {cs = 62;goto _again;}
			}

			if (s->number64 <= UINT32_MAX) {
				*((uint32_t *)rdata_tail) = htonl((uint32_t)s->number64);
				rdata_tail += 4;
			} else {
				WARN(ZS_NUMBER32_OVERFLOW);
				p--; {cs = 62;goto _again;}
			}
		} else {
			WARN(ZS_BAD_TIMESTAMP_LENGTH);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 60:
	{
		WARN(ZS_BAD_TIMESTAMP_CHAR);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 61:
	{
		if (rdata_tail <= rdata_stop) {
			// Split long string.
			if (s->long_string &&
			    rdata_tail - s->item_length_location == 1 + MAX_ITEM_LENGTH) {
				// _item_length_exit equivalent.
				*(s->item_length_location) = MAX_ITEM_LENGTH;
				// _item_length_init equivalent.
				s->item_length_location = rdata_tail++;

				if (rdata_tail > rdata_stop) {
					WARN(ZS_TEXT_OVERFLOW);
					p--; {cs = 62;goto _again;}
				}
			}

			*(rdata_tail++) = (*p);
		} else {
			WARN(ZS_TEXT_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 62:
	{
		WARN(ZS_BAD_TEXT_CHAR);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 63:
	{
		WARN(ZS_BAD_TEXT);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 64:
	{
		if (rdata_tail <= rdata_stop) {
			// Split long string.
			if (s->long_string &&
			    rdata_tail - s->item_length_location == 1 + MAX_ITEM_LENGTH) {
				// _item_length_exit equivalent.
				*(s->item_length_location) = MAX_ITEM_LENGTH;
				// _item_length_init equivalent.
				s->item_length_location = rdata_tail++;

				if (rdata_tail > rdata_stop) {
					WARN(ZS_TEXT_OVERFLOW);
					p--; {cs = 62;goto _again;}
				}
			}

			*rdata_tail = 0;
			s->item_length++;
		} else {
			WARN(ZS_TEXT_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 65:
	{
		if ((*rdata_tail < (UINT8_MAX / 10)) ||   // Dominant fast check.
			((*rdata_tail == (UINT8_MAX / 10)) && // Marginal case.
			 ((*p) <= (UINT8_MAX % 10) + '0')
			)
		   ) {
			*rdata_tail *= 10;
			*rdata_tail += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 66:
	{
		rdata_tail++;
	}
	break;
	case 67:
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 68:
	{
		uint8_t *last_two = rdata_tail - 2;
		uint16_t current_len = rdata_tail - s->item_length_location - 2;
		if (s->comma_list) {
			if (last_two[1] == ',') {
				if (current_len <= 1) {
					WARN(ZS_EMPTY_LIST_ITEM);
					p--; {cs = 62;goto _again;}
				} else if (last_two[0] != '\\') { // Start a new item.
					*(s->item_length_location) = current_len;
					s->item_length_location = rdata_tail - 1;
				} else { // Remove backslash.
					last_two[0] = ',';
					rdata_tail--;
				}
			} else if (current_len > 1 && last_two[1] == '\\') {
				if (last_two[0] == '\\') { // Remove backslash.
					rdata_tail--;
				}
			}
		}
	}
	break;
	case 69:
	{ p--; {stack[top++] = cs; cs = 73;goto _again;} }
	break;
	case 70:
	{
		s->long_string = true;
	}
	break;
	case 71:
	{
		s->long_string = false;
	}
	break;
	case 72:
	{
		if (s->number64 <= UINT32_MAX) {
			s->default_ttl = (uint32_t)(s->number64);
		} else {
			ERR(ZS_NUMBER32_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 73:
	{
		ERR(ZS_BAD_TTL);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 74:
	{ p--; {stack[top++] = cs; cs = 86;goto _again;} }
	break;
	case 75:
	{
		s->dname = s->zone_origin;
	}
	break;
	case 76:
	{
		s->zone_origin_length = s->dname_tmp_length;
	}
	break;
	case 77:
	{
		ERR(ZS_BAD_ORIGIN);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 78:
	{ p--; {stack[top++] = cs; cs = 95;goto _again;} }
	break;
	case 79:
	{
		rdata_tail = s->r_data;
	}
	break;
	case 80:
	{
		size_t len = rdata_tail - s->r_data;
		if (len >= sizeof(s->include_filename)) {
			ERR(ZS_BAD_INCLUDE_FILENAME);
			p--; {cs = 62;goto _again;}
		}

		// Store zero terminated include filename.
		memcpy(s->include_filename, s->r_data, len);
		s->include_filename[len] = '\0';

		// For detection whether origin is not present.
		s->dname = NULL;
	}
	break;
	case 81:
	{
		ERR(ZS_BAD_INCLUDE_FILENAME);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 82:
	{
		s->dname = s->r_data;
	}
	break;
	case 83:
	{
		s->r_data_length = s->dname_tmp_length;
	}
	break;
	case 84:
	{
		ERR(ZS_BAD_INCLUDE_ORIGIN);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 85:
	{
		// Extend relative file path.
		if (s->include_filename[0] != '/') {
			int ret = snprintf((char *)(s->buffer), sizeof(s->buffer),
			                   "%s/%s", s->path, s->include_filename);
			if (ret <= 0 || ret >= sizeof(s->buffer)) {
				ERR(ZS_BAD_INCLUDE_FILENAME);
				p--; {cs = 62;goto _again;}
			}
			memcpy(s->include_filename, s->buffer, ret + 1);
		}

		// Origin conversion from wire to text form in \DDD notation.
		if (s->dname == NULL) { // Use current origin.
			wire_dname_to_str(s->zone_origin,
			                  s->zone_origin_length,
			                  (char *)s->buffer);
		} else { // Use specified origin.
			wire_dname_to_str(s->r_data,
			                  s->r_data_length,
			                  (char *)s->buffer);
		}

		// Let the caller to solve the include.
		if (s->process.automatic) {
			// Create new scanner for included zone file.
			zs_scanner_t *ss = malloc(sizeof(zs_scanner_t));
			if (ss == NULL) {
				ERR(ZS_UNPROCESSED_INCLUDE);
				p--; {cs = 62;goto _again;}
			}

			// Parse included zone file.
			if (zs_init(ss, (char *)s->buffer, s->default_class,
			            s->default_ttl) != 0 ||
			    zs_set_input_file(ss, (char *)(s->include_filename)) != 0 ||
			    zs_set_processing(ss, s->process.record, s->process.error,
			                      s->process.data) != 0 ||
			    zs_parse_all(ss) != 0) {
				// File internal errors are handled by error callback.
				if (ss->error.counter > 0) {
					s->error.counter += ss->error.counter;
					ERR(ZS_UNPROCESSED_INCLUDE);
				// General include file error.
				} else {
					ERR(ss->error.code);
				}
				zs_deinit(ss);
				free(ss);
				p--; {cs = 62;goto _again;}
			}
			zs_deinit(ss);
			free(ss);
		} else {
			s->state = ZS_STATE_INCLUDE;
			p--; cs = 1338; {p++; goto _out; }
		}
	}
	break;
	case 86:
	{ p--; {stack[top++] = cs; cs = 107;goto _again;} }
	break;
	case 87:
	{
		ERR(ZS_OK);
	}
	break;
	case 88:
	{
		NOERR;
	}
	break;
	case 89:
	{
		ERR(ZS_BAD_DIRECTIVE);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 90:
	{
		s->r_class = s->default_class;
	}
	break;
	case 91:
	{
		s->r_ttl = s->default_ttl;
	}
	break;
	case 92:
	{
		s->r_class = KNOT_CLASS_IN;
	}
	break;
	case 93:
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 94:
	{ p--; p--; p--; }
	break;
	case 95:
	{
		s->buffer_length = 0;
	}
	break;
	case 96:
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 97:
	{
		WARN(ZS_BAD_ADDRESS_CHAR);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 98:
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, s->addr) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 99:
	{
		if (rdata_tail + ZS_INET4_ADDR_LENGTH > rdata_stop + 1) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
		memcpy(rdata_tail, s->addr, ZS_INET4_ADDR_LENGTH);
		rdata_tail += ZS_INET4_ADDR_LENGTH;
	}
	break;
	case 100:
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, s->addr) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 101:
	{
		if (rdata_tail + ZS_INET6_ADDR_LENGTH > rdata_stop + 1) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
		memcpy(rdata_tail, s->addr, ZS_INET6_ADDR_LENGTH);
		rdata_tail += ZS_INET6_ADDR_LENGTH;
	}
	break;
	case 102:
	{
		memset(&(s->apl), 0, sizeof(s->apl));
	}
	break;
	case 103:
	{
		s->apl.excl_flag = 128; // dec 128  = bin 10000000.
	}
	break;
	case 104:
	{
		s->apl.addr_family = 1;
	}
	break;
	case 105:
	{
		s->apl.addr_family = 2;
	}
	break;
	case 106:
	{
		if ((s->apl.addr_family == 1 && s->number64 <= 32) ||
		    (s->apl.addr_family == 2 && s->number64 <= 128)) {
			s->apl.prefix_length = (uint8_t)(s->number64);
		} else {
			WARN(ZS_BAD_APL);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 107:
	{
		// Copy address to buffer.
		uint8_t len;
		switch (s->apl.addr_family) {
		case 1:
			len = ZS_INET4_ADDR_LENGTH;
			memcpy(s->buffer, s->addr, len);
			break;
		case 2:
			len = ZS_INET6_ADDR_LENGTH;
			memcpy(s->buffer, s->addr, len);
			break;
		default:
			WARN(ZS_BAD_APL);
			p--; {cs = 62;goto _again;}
		}
		// Find prefix without trailing zeroes.
		while (len > 0) {
			if ((s->buffer[len - 1] & 255) != 0) {
				break;
			}
			len--;
		}
		// Check for rdata overflow.
		if (rdata_tail + 4 + len > rdata_stop + 1) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
		// Write address family.
		uint16_t af = htons(s->apl.addr_family);
		memcpy(rdata_tail, &af, sizeof(af));
		rdata_tail += 2;
		// Write prefix length in bits.
		*(rdata_tail) = s->apl.prefix_length;
		rdata_tail += 1;
		// Write negation flag + prefix length in bytes.
		*(rdata_tail) = len + s->apl.excl_flag;
		rdata_tail += 1;
		// Write address prefix non-null data.
		memcpy(rdata_tail, s->buffer, len);
		rdata_tail += len;
	}
	break;
	case 108:
	{
		WARN(ZS_BAD_APL);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 109:
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 110:
	{
		*rdata_tail += second_hex_to_num[(uint8_t)(*p)];
		rdata_tail++;
	}
	break;
	case 111:
	{
		WARN(ZS_BAD_HEX_CHAR);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 112:
	{
		if ((rdata_tail - s->r_data) != s->r_data_length) {
			WARN(ZS_BAD_RDATA_LENGTH);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 113:
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 114:
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_base64_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 115:
	{
		*(rdata_tail++) += second_left_base64_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = second_right_base64_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 116:
	{
		*(rdata_tail++) += third_left_base64_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = third_right_base64_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 117:
	{
		*(rdata_tail++) += fourth_base64_to_num[(uint8_t)(*p)];
	}
	break;
	case 118:
	{
		WARN(ZS_BAD_BASE64_CHAR);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 119:
	{ p--; {stack[top++] = cs; cs = 124;goto _again;} }
	break;
	case 120:
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 121:
	{
		*(rdata_tail++) += second_left_base32hex_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = second_right_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 122:
	{
		*rdata_tail += third_base32hex_to_num[(uint8_t)(*p)];
	}
	break;
	case 123:
	{
		*(rdata_tail++) += fourth_left_base32hex_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = fourth_right_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 124:
	{
		*(rdata_tail++) += fifth_left_base32hex_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = fifth_right_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 125:
	{
		*rdata_tail += sixth_base32hex_to_num[(uint8_t)(*p)];
	}
	break;
	case 126:
	{
		*(rdata_tail++) += seventh_left_base32hex_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = seventh_right_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 127:
	{
		*(rdata_tail++) += eighth_base32hex_to_num[(uint8_t)(*p)];
	}
	break;
	case 128:
	{
		WARN(ZS_BAD_BASE32HEX_CHAR);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 129:
	{
		*(rdata_tail++) = 0;
	}
	break;
	case 130:
	{
		*(rdata_tail++) = 1;
	}
	break;
	case 131:
	{
		*(rdata_tail++) = 2;
	}
	break;
	case 132:
	{
		*(rdata_tail++) = 3;
	}
	break;
	case 133:
	{
		*(rdata_tail++) = 5;
	}
	break;
	case 134:
	{
		*(rdata_tail++) = 6;
	}
	break;
	case 135:
	{
		*(rdata_tail++) = 7;
	}
	break;
	case 136:
	{
		*(rdata_tail++) = 8;
	}
	break;
	case 137:
	{
		*(rdata_tail++) = 10;
	}
	break;
	case 138:
	{
		*(rdata_tail++) = 12;
	}
	break;
	case 139:
	{
		*(rdata_tail++) = 13;
	}
	break;
	case 140:
	{
		*(rdata_tail++) = 14;
	}
	break;
	case 141:
	{
		*(rdata_tail++) = 15;
	}
	break;
	case 142:
	{
		*(rdata_tail++) = 16;
	}
	break;
	case 143:
	{
		*(rdata_tail++) = 252;
	}
	break;
	case 144:
	{
		*(rdata_tail++) = 253;
	}
	break;
	case 145:
	{
		*(rdata_tail++) = 254;
	}
	break;
	case 146:
	{
		uint16_t val = htons(0);
		memcpy(rdata_tail, &val, 2);
		rdata_tail += 2;
	}
	break;
	case 147:
	{
		uint16_t val = htons(1);
		memcpy(rdata_tail, &val, 2);
		rdata_tail += 2;
	}
	break;
	case 148:
	{
		uint16_t val = htons(2);
		memcpy(rdata_tail, &val, 2);
		rdata_tail += 2;
	}
	break;
	case 149:
	{
		uint16_t val = htons(3);
		memcpy(rdata_tail, &val, 2);
		rdata_tail += 2;
	}
	break;
	case 150:
	{
		uint16_t val = htons(4);
		memcpy(rdata_tail, &val, 2);
		rdata_tail += 2;
	}
	break;
	case 151:
	{
		uint16_t val = htons(5);
		memcpy(rdata_tail, &val, 2);
		rdata_tail += 2;
	}
	break;
	case 152:
	{
		uint16_t val = htons(6);
		memcpy(rdata_tail, &val, 2);
		rdata_tail += 2;
	}
	break;
	case 153:
	{
		uint16_t val = htons(7);
		memcpy(rdata_tail, &val, 2);
		rdata_tail += 2;
	}
	break;
	case 154:
	{
		uint16_t val = htons(8);
		memcpy(rdata_tail, &val, 2);
		rdata_tail += 2;
	}
	break;
	case 155:
	{
		uint16_t val = htons(253);
		memcpy(rdata_tail, &val, 2);
		rdata_tail += 2;
	}
	break;
	case 156:
	{
		uint16_t val = htons(254);
		memcpy(rdata_tail, &val, 2);
		rdata_tail += 2;
	}
	break;
	case 157:
	{
		WARN(ZS_BAD_GATEWAY);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 158:
	{
		WARN(ZS_BAD_GATEWAY_KEY);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 159:
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 160:
	{ type_num(KNOT_RRTYPE_A, &rdata_tail); }
	break;
	case 161:
	{ type_num(KNOT_RRTYPE_NS, &rdata_tail); }
	break;
	case 162:
	{ type_num(KNOT_RRTYPE_CNAME, &rdata_tail); }
	break;
	case 163:
	{ type_num(KNOT_RRTYPE_SOA, &rdata_tail); }
	break;
	case 164:
	{ type_num(KNOT_RRTYPE_PTR, &rdata_tail); }
	break;
	case 165:
	{ type_num(KNOT_RRTYPE_HINFO, &rdata_tail); }
	break;
	case 166:
	{ type_num(KNOT_RRTYPE_MINFO, &rdata_tail); }
	break;
	case 167:
	{ type_num(KNOT_RRTYPE_MX, &rdata_tail); }
	break;
	case 168:
	{ type_num(KNOT_RRTYPE_TXT, &rdata_tail); }
	break;
	case 169:
	{ type_num(KNOT_RRTYPE_RP, &rdata_tail); }
	break;
	case 170:
	{ type_num(KNOT_RRTYPE_AFSDB, &rdata_tail); }
	break;
	case 171:
	{ type_num(KNOT_RRTYPE_RT, &rdata_tail); }
	break;
	case 172:
	{ type_num(KNOT_RRTYPE_KEY, &rdata_tail); }
	break;
	case 173:
	{ type_num(KNOT_RRTYPE_AAAA, &rdata_tail); }
	break;
	case 174:
	{ type_num(KNOT_RRTYPE_LOC, &rdata_tail); }
	break;
	case 175:
	{ type_num(KNOT_RRTYPE_SRV, &rdata_tail); }
	break;
	case 176:
	{ type_num(KNOT_RRTYPE_NAPTR, &rdata_tail); }
	break;
	case 177:
	{ type_num(KNOT_RRTYPE_KX, &rdata_tail); }
	break;
	case 178:
	{ type_num(KNOT_RRTYPE_CERT, &rdata_tail); }
	break;
	case 179:
	{ type_num(KNOT_RRTYPE_DNAME, &rdata_tail); }
	break;
	case 180:
	{ type_num(KNOT_RRTYPE_APL, &rdata_tail); }
	break;
	case 181:
	{ type_num(KNOT_RRTYPE_DS, &rdata_tail); }
	break;
	case 182:
	{ type_num(KNOT_RRTYPE_SSHFP, &rdata_tail); }
	break;
	case 183:
	{ type_num(KNOT_RRTYPE_IPSECKEY, &rdata_tail); }
	break;
	case 184:
	{ type_num(KNOT_RRTYPE_RRSIG, &rdata_tail); }
	break;
	case 185:
	{ type_num(KNOT_RRTYPE_NSEC, &rdata_tail); }
	break;
	case 186:
	{ type_num(KNOT_RRTYPE_DNSKEY, &rdata_tail); }
	break;
	case 187:
	{ type_num(KNOT_RRTYPE_DHCID, &rdata_tail); }
	break;
	case 188:
	{ type_num(KNOT_RRTYPE_NSEC3, &rdata_tail); }
	break;
	case 189:
	{ type_num(KNOT_RRTYPE_NSEC3PARAM, &rdata_tail); }
	break;
	case 190:
	{ type_num(KNOT_RRTYPE_TLSA, &rdata_tail); }
	break;
	case 191:
	{ type_num(KNOT_RRTYPE_SMIMEA, &rdata_tail); }
	break;
	case 192:
	{ type_num(KNOT_RRTYPE_CDS, &rdata_tail); }
	break;
	case 193:
	{ type_num(KNOT_RRTYPE_CDNSKEY, &rdata_tail); }
	break;
	case 194:
	{ type_num(KNOT_RRTYPE_OPENPGPKEY, &rdata_tail); }
	break;
	case 195:
	{ type_num(KNOT_RRTYPE_CSYNC, &rdata_tail); }
	break;
	case 196:
	{ type_num(KNOT_RRTYPE_ZONEMD, &rdata_tail); }
	break;
	case 197:
	{ type_num(KNOT_RRTYPE_SPF, &rdata_tail); }
	break;
	case 198:
	{ type_num(KNOT_RRTYPE_NID, &rdata_tail); }
	break;
	case 199:
	{ type_num(KNOT_RRTYPE_L32, &rdata_tail); }
	break;
	case 200:
	{ type_num(KNOT_RRTYPE_L64, &rdata_tail); }
	break;
	case 201:
	{ type_num(KNOT_RRTYPE_LP, &rdata_tail); }
	break;
	case 202:
	{ type_num(KNOT_RRTYPE_EUI48, &rdata_tail); }
	break;
	case 203:
	{ type_num(KNOT_RRTYPE_EUI64, &rdata_tail); }
	break;
	case 204:
	{ type_num(KNOT_RRTYPE_URI, &rdata_tail); }
	break;
	case 205:
	{ type_num(KNOT_RRTYPE_CAA, &rdata_tail); }
	break;
	case 206:
	{ type_num(KNOT_RRTYPE_SVCB, &rdata_tail); }
	break;
	case 207:
	{ type_num(KNOT_RRTYPE_HTTPS, &rdata_tail); }
	break;
	case 208:
	{
		if (s->number64 <= UINT16_MAX) {
			window_add_bit(s->number64, s);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 209:
	{ window_add_bit(KNOT_RRTYPE_A, s); }
	break;
	case 210:
	{ window_add_bit(KNOT_RRTYPE_NS, s); }
	break;
	case 211:
	{ window_add_bit(KNOT_RRTYPE_CNAME, s); }
	break;
	case 212:
	{ window_add_bit(KNOT_RRTYPE_SOA, s); }
	break;
	case 213:
	{ window_add_bit(KNOT_RRTYPE_PTR, s); }
	break;
	case 214:
	{ window_add_bit(KNOT_RRTYPE_HINFO, s); }
	break;
	case 215:
	{ window_add_bit(KNOT_RRTYPE_MINFO, s); }
	break;
	case 216:
	{ window_add_bit(KNOT_RRTYPE_MX, s); }
	break;
	case 217:
	{ window_add_bit(KNOT_RRTYPE_TXT, s); }
	break;
	case 218:
	{ window_add_bit(KNOT_RRTYPE_RP, s); }
	break;
	case 219:
	{ window_add_bit(KNOT_RRTYPE_AFSDB, s); }
	break;
	case 220:
	{ window_add_bit(KNOT_RRTYPE_RT, s); }
	break;
	case 221:
	{ window_add_bit(KNOT_RRTYPE_KEY, s); }
	break;
	case 222:
	{ window_add_bit(KNOT_RRTYPE_AAAA, s); }
	break;
	case 223:
	{ window_add_bit(KNOT_RRTYPE_LOC, s); }
	break;
	case 224:
	{ window_add_bit(KNOT_RRTYPE_SRV, s); }
	break;
	case 225:
	{ window_add_bit(KNOT_RRTYPE_NAPTR, s); }
	break;
	case 226:
	{ window_add_bit(KNOT_RRTYPE_KX, s); }
	break;
	case 227:
	{ window_add_bit(KNOT_RRTYPE_CERT, s); }
	break;
	case 228:
	{ window_add_bit(KNOT_RRTYPE_DNAME, s); }
	break;
	case 229:
	{ window_add_bit(KNOT_RRTYPE_APL, s); }
	break;
	case 230:
	{ window_add_bit(KNOT_RRTYPE_DS, s); }
	break;
	case 231:
	{ window_add_bit(KNOT_RRTYPE_SSHFP, s); }
	break;
	case 232:
	{ window_add_bit(KNOT_RRTYPE_IPSECKEY, s); }
	break;
	case 233:
	{ window_add_bit(KNOT_RRTYPE_RRSIG, s); }
	break;
	case 234:
	{ window_add_bit(KNOT_RRTYPE_NSEC, s); }
	break;
	case 235:
	{ window_add_bit(KNOT_RRTYPE_DNSKEY, s); }
	break;
	case 236:
	{ window_add_bit(KNOT_RRTYPE_DHCID, s); }
	break;
	case 237:
	{ window_add_bit(KNOT_RRTYPE_NSEC3, s); }
	break;
	case 238:
	{ window_add_bit(KNOT_RRTYPE_NSEC3PARAM, s); }
	break;
	case 239:
	{ window_add_bit(KNOT_RRTYPE_TLSA, s); }
	break;
	case 240:
	{ window_add_bit(KNOT_RRTYPE_SMIMEA, s); }
	break;
	case 241:
	{ window_add_bit(KNOT_RRTYPE_CDS, s); }
	break;
	case 242:
	{ window_add_bit(KNOT_RRTYPE_CDNSKEY, s); }
	break;
	case 243:
	{ window_add_bit(KNOT_RRTYPE_OPENPGPKEY, s); }
	break;
	case 244:
	{ window_add_bit(KNOT_RRTYPE_CSYNC, s); }
	break;
	case 245:
	{ window_add_bit(KNOT_RRTYPE_ZONEMD, s); }
	break;
	case 246:
	{ window_add_bit(KNOT_RRTYPE_SPF, s); }
	break;
	case 247:
	{ window_add_bit(KNOT_RRTYPE_NID, s); }
	break;
	case 248:
	{ window_add_bit(KNOT_RRTYPE_L32, s); }
	break;
	case 249:
	{ window_add_bit(KNOT_RRTYPE_L64, s); }
	break;
	case 250:
	{ window_add_bit(KNOT_RRTYPE_LP, s); }
	break;
	case 251:
	{ window_add_bit(KNOT_RRTYPE_EUI48, s); }
	break;
	case 252:
	{ window_add_bit(KNOT_RRTYPE_EUI64, s); }
	break;
	case 253:
	{ window_add_bit(KNOT_RRTYPE_URI, s); }
	break;
	case 254:
	{ window_add_bit(KNOT_RRTYPE_CAA, s); }
	break;
	case 255:
	{ window_add_bit(KNOT_RRTYPE_SVCB, s); }
	break;
	case 256:
	{ window_add_bit(KNOT_RRTYPE_HTTPS, s); }
	break;
	case 257:
	{
		memset(s->windows, 0, sizeof(s->windows));
		s->last_window = -1;
	}
	break;
	case 258:
	{
		for (uint16_t window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {cs = 62;goto _again;}
				}
			}
		}
	}
	break;
	case 259:
	{
		WARN(ZS_BAD_BITMAP);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 260:
	{ p--; {stack[top++] = cs; cs = 131;goto _again;} }
	break;
	case 261:
	{
		if (s->number64 <= 90) {
			s->loc.d1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 262:
	{
		if (s->number64 <= 180) {
			s->loc.d2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 263:
	{
		if (s->number64 <= 59) {
			s->loc.m1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 264:
	{
		if (s->number64 <= 59) {
			s->loc.m2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 265:
	{
		if (s->number64 <= 59999) {
			s->loc.s1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 266:
	{
		if (s->number64 <= 59999) {
			s->loc.s2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 267:
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 268:
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 269:
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 270:
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.vp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 271:
	{
		s->loc.lat_sign = -1;
	}
	break;
	case 272:
	{
		s->loc.long_sign = -1;
	}
	break;
	case 273:
	{
		s->loc.alt_sign = -1;
	}
	break;
	case 274:
	{
		memset(&(s->loc), 0, sizeof(s->loc));
		// Defaults.
		s->loc.siz = 100;
		s->loc.vp  = 1000;
		s->loc.hp  = 1000000;
		s->loc.lat_sign  = 1;
		s->loc.long_sign = 1;
		s->loc.alt_sign  = 1;
	}
	break;
	case 275:
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
	break;
	case 276:
	{
		WARN(ZS_BAD_LOC_DATA);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 277:
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 278:
	{
		s->item_length = 0;
	}
	break;
	case 279:
	{
		s->item_length++;
	}
	break;
	case 280:
	{
		if (s->item_length != 6) {
			WARN(ZS_BAD_EUI_LENGTH);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 281:
	{
		if (s->item_length != 8) {
			WARN(ZS_BAD_EUI_LENGTH);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 282:
	{
		WARN(ZS_BAD_CHAR_DASH);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 283:
	{
		s->item_length = 0;
	}
	break;
	case 284:
	{
		s->item_length++;
	}
	break;
	case 285:
	{
		if (s->item_length != 4) {
			WARN(ZS_BAD_L64_LENGTH);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 286:
	{
		WARN(ZS_BAD_CHAR_COLON);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 287:
	{
		s->svcb.params_position = rdata_tail;
		s->svcb.last_key = -1;
	}
	break;
	case 288:
	{
		int ret = svcb_check(s, rdata_tail);
		if (ret != ZS_OK) {
			WARN(ret);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 289:
	{
		WARN(ZS_BAD_SVCB_PARAM);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 290:
	{
		WARN(ZS_BAD_SVCB_MANDATORY);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 291:
	{
		if (rdata_tail + 4 > rdata_stop + 1) { // key_len + val_len
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
		s->svcb.param_position = rdata_tail;
	}
	break;
	case 292:
	{
		int ret = svcb_sort(s, rdata_tail);
		if (ret != ZS_OK) {
			WARN(ret);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 293:
	{
		s->comma_list = true;
	}
	break;
	case 294:
	{
		s->comma_list = false;
	}
	break;
	case 295:
	{
		s->svcb.mandatory_position = rdata_tail + 2; // Skip 2-B prefix.
	}
	break;
	case 296:
	{
		svcb_mandatory_sort(s->svcb.mandatory_position, rdata_tail);
	}
	break;
	case 297:
	{
		if (rdata_tail + 2 > rdata_stop + 1) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
	}
	break;
	case 298:
	{ p--; {stack[top++] = cs; cs = 314;goto _again;} }
	break;
	case 299:
	{ p--; {stack[top++] = cs; cs = 358;goto _again;} }
	break;
	case 300:
	{
		WARN(ZS_BAD_ALGORITHM);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 301:
	{
		WARN(ZS_BAD_CERT_TYPE);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 302:
	{ p--; {stack[top++] = cs; cs = 454;goto _again;} }
	break;
	case 303:
	{ p--; {stack[top++] = cs; cs = 558;goto _again;} }
	break;
	case 304:
	{
		rdata_tail = s->case_record ? rdata_tail + 2 : s->r_data;
	}
	break;
	case 305:
	{
		WARN(ZS_BAD_RDATA);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 306:
	{
		if (s->case_record) {
			WARN(ZS_BAD_RDATA);
			p--; {cs = 62;goto _again;}
		}
		s->case_record = true;
	}
	break;
	case 307:
	{
		 p--; {stack[top++] = cs; cs = 1159;goto _again;}
	}
	break;
	case 308:
	{
		uint16_t val = htons(s->r_type);
		memcpy(s->r_data + 2 + s->r_data[1], &val, 2);
		s->r_type = KNOT_RRTYPE_CASE;
		s->case_record = false;
	}
	break;
	case 309:
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = cs; cs = 599;goto _again;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = cs; cs = 601;goto _again;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = cs; cs = 603;goto _again;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = cs; cs = 635;goto _again;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = cs; cs = 640;goto _again;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = cs; cs = 645;goto _again;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = cs; cs = 650;goto _again;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = cs; cs = 654;goto _again;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = cs; cs = 656;goto _again;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = cs; cs = 711;goto _again;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = cs; cs = 722;goto _again;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = cs; cs = 739;goto _again;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = cs; cs = 750;goto _again;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = cs; cs = 761;goto _again;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = cs; cs = 774;goto _again;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = cs; cs = 784;goto _again;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = cs; cs = 823;goto _again;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = cs; cs = 1009;goto _again;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = cs; cs = 1012;goto _again;}
		case KNOT_RRTYPE_DHCID:
		case KNOT_RRTYPE_OPENPGPKEY:
			{stack[top++] = cs; cs = 1023;goto _again;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = cs; cs = 1025;goto _again;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = cs; cs = 1054;goto _again;}
		case KNOT_RRTYPE_TLSA:
		case KNOT_RRTYPE_SMIMEA:
			{stack[top++] = cs; cs = 1067;goto _again;}
		case KNOT_RRTYPE_CSYNC:
			{stack[top++] = cs; cs = 1080;goto _again;}
		case KNOT_RRTYPE_ZONEMD:
			{stack[top++] = cs; cs = 1086;goto _again;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = cs; cs = 1104;goto _again;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = cs; cs = 1099;goto _again;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = cs; cs = 1117;goto _again;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = cs; cs = 1123;goto _again;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = cs; cs = 1129;goto _again;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = cs; cs = 1137;goto _again;}
		case KNOT_RRTYPE_SVCB:
		case KNOT_RRTYPE_HTTPS:
			{stack[top++] = cs; cs = 1145;goto _again;}
		case KNOT_RRTYPE_CASE:
			{stack[top++] = cs; cs = 1151;goto _again;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{cs = 62;goto _again;}
		}
	}
	break;
	case 310:
	{
		switch (s->r_type) {
		// Next types must not have empty rdata.
		case KNOT_RRTYPE_A:
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
		case KNOT_RRTYPE_SOA:
		case KNOT_RRTYPE_HINFO:
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
		case KNOT_RRTYPE_RP:
		case KNOT_RRTYPE_AAAA:
		case KNOT_RRTYPE_LOC:
		case KNOT_RRTYPE_SRV:
		case KNOT_RRTYPE_NAPTR:
		case KNOT_RRTYPE_CERT:
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_SSHFP:
		case KNOT_RRTYPE_IPSECKEY:
		case KNOT_RRTYPE_RRSIG:
		case KNOT_RRTYPE_NSEC:
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_DHCID:
		case KNOT_RRTYPE_NSEC3:
		case KNOT_RRTYPE_NSEC3PARAM:
		case KNOT_RRTYPE_TLSA:
		case KNOT_RRTYPE_SMIMEA:
		case KNOT_RRTYPE_CDS:
		case KNOT_RRTYPE_CDNSKEY:
		case KNOT_RRTYPE_OPENPGPKEY:
		case KNOT_RRTYPE_CSYNC:
		case KNOT_RRTYPE_ZONEMD:
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L32:
		case KNOT_RRTYPE_L64:
		case KNOT_RRTYPE_LP:
		case KNOT_RRTYPE_EUI48:
		case KNOT_RRTYPE_EUI64:
		case KNOT_RRTYPE_URI:
		case KNOT_RRTYPE_CAA:
		case KNOT_RRTYPE_SVCB:
		case KNOT_RRTYPE_HTTPS:
		case KNOT_RRTYPE_CASE:
			{stack[top++] = cs; cs = 295;goto _again;}
		// Next types can have empty rdata.
		case KNOT_RRTYPE_APL:
		default:
			{stack[top++] = cs; cs = 304;goto _again;}
		}
	}
	break;
	case 311:
	{
		if (pe - p == 1) {
			*wrap = WRAP_DETECTED;
		}
	}
	break;
	case 312:
	{
		if (*wrap == WRAP_NONE) {
			p--;
		}
	}
	break;
	case 313:
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {cs = 62;goto _again;}
	}
	break;
	case 314:
	{ s->r_type = KNOT_RRTYPE_A; }
	break;
	case 315:
	{ s->r_type = KNOT_RRTYPE_NS; }
	break;
	case 316:
	{ s->r_type = KNOT_RRTYPE_CNAME; }
	break;
	case 317:
	{ s->r_type = KNOT_RRTYPE_SOA; }
	break;
	case 318:
	{ s->r_type = KNOT_RRTYPE_PTR; }
	break;
	case 319:
	{ s->r_type = KNOT_RRTYPE_HINFO; }
	break;
	case 320:
	{ s->r_type = KNOT_RRTYPE_MINFO; }
	break;
	case 321:
	{ s->r_type = KNOT_RRTYPE_MX; }
	break;
	case 322:
	{ s->r_type = KNOT_RRTYPE_TXT; }
	break;
	case 323:
	{ s->r_type = KNOT_RRTYPE_RP; }
	break;
	case 324:
	{ s->r_type = KNOT_RRTYPE_AFSDB; }
	break;
	case 325:
	{ s->r_type = KNOT_RRTYPE_RT; }
	break;
	case 326:
	{ s->r_type = KNOT_RRTYPE_KEY; }
	break;
	case 327:
	{ s->r_type = KNOT_RRTYPE_AAAA; }
	break;
	case 328:
	{ s->r_type = KNOT_RRTYPE_LOC; }
	break;
	case 329:
	{ s->r_type = KNOT_RRTYPE_SRV; }
	break;
	case 330:
	{ s->r_type = KNOT_RRTYPE_NAPTR; }
	break;
	case 331:
	{ s->r_type = KNOT_RRTYPE_KX; }
	break;
	case 332:
	{ s->r_type = KNOT_RRTYPE_CERT; }
	break;
	case 333:
	{ s->r_type = KNOT_RRTYPE_DNAME; }
	break;
	case 334:
	{ s->r_type = KNOT_RRTYPE_APL; }
	break;
	case 335:
	{ s->r_type = KNOT_RRTYPE_DS; }
	break;
	case 336:
	{ s->r_type = KNOT_RRTYPE_SSHFP; }
	break;
	case 337:
	{ s->r_type = KNOT_RRTYPE_IPSECKEY; }
	break;
	case 338:
	{ s->r_type = KNOT_RRTYPE_RRSIG; }
	break;
	case 339:
	{ s->r_type = KNOT_RRTYPE_NSEC; }
	break;
	case 340:
	{ s->r_type = KNOT_RRTYPE_DNSKEY; }
	break;
	case 341:
	{ s->r_type = KNOT_RRTYPE_DHCID; }
	break;
	case 342:
	{ s->r_type = KNOT_RRTYPE_NSEC3; }
	break;
	case 343:
	{ s->r_type = KNOT_RRTYPE_NSEC3PARAM; }
	break;
	case 344:
	{ s->r_type = KNOT_RRTYPE_TLSA; }
	break;
	case 345:
	{ s->r_type = KNOT_RRTYPE_SMIMEA; }
	break;
	case 346:
	{ s->r_type = KNOT_RRTYPE_CDS; }
	break;
	case 347:
	{ s->r_type = KNOT_RRTYPE_CDNSKEY; }
	break;
	case 348:
	{ s->r_type = KNOT_RRTYPE_OPENPGPKEY; }
	break;
	case 349:
	{ s->r_type = KNOT_RRTYPE_CSYNC; }
	break;
	case 350:
	{ s->r_type = KNOT_RRTYPE_ZONEMD; }
	break;
	case 351:
	{ s->r_type = KNOT_RRTYPE_SPF; }
	break;
	case 352:
	{ s->r_type = KNOT_RRTYPE_NID; }
	break;
	case 353:
	{ s->r_type = KNOT_RRTYPE_L32; }
	break;
	case 354:
	{ s->r_type = KNOT_RRTYPE_L64; }
	break;
	case 355:
	{ s->r_type = KNOT_RRTYPE_LP; }
	break;
	case 356:
	{ s->r_type = KNOT_RRTYPE_EUI48; }
	break;
	case 357:
	{ s->r_type = KNOT_RRTYPE_EUI64; }
	break;
	case 358:
	{ s->r_type = KNOT_RRTYPE_URI; }
	break;
	case 359:
	{ s->r_type = KNOT_RRTYPE_CAA; }
	break;
	case 360:
	{ s->r_type = KNOT_RRTYPE_SVCB; }
	break;
	case 361:
	{ s->r_type = KNOT_RRTYPE_HTTPS; }
	break;
	case 362:
	{ s->r_type = KNOT_RRTYPE_CASE; }
	break;
	case 363:
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 62;goto _again;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; goto _out; }
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; goto _out; }
		}
	}
	break;
	case 364:
	{ p--; {stack[top++] = cs; cs = 1159;goto _again;} }
	break;
		}
	}

_again:
	if ( cs == 0 )
		goto _out;
	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == eof )
	{
	const short *__acts = _zone_scanner_actions + _zone_scanner_eof_actions[cs];
	unsigned int __nacts = (unsigned int) *__acts++;
	while ( __nacts-- > 0 ) {
		switch ( *__acts++ ) {
	case 8:
	{
		WARN(ZS_BAD_REST);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 19:
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 24:
	{
		WARN(ZS_BAD_DNAME_CHAR);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 33:
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 38:
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 50:
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 60:
	{
		WARN(ZS_BAD_TIMESTAMP_CHAR);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 62:
	{
		WARN(ZS_BAD_TEXT_CHAR);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 63:
	{
		WARN(ZS_BAD_TEXT);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 67:
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 71:
	{
		s->long_string = false;
	}
	break;
	case 73:
	{
		ERR(ZS_BAD_TTL);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 77:
	{
		ERR(ZS_BAD_ORIGIN);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 81:
	{
		ERR(ZS_BAD_INCLUDE_FILENAME);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 84:
	{
		ERR(ZS_BAD_INCLUDE_ORIGIN);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 88:
	{
		NOERR;
	}
	break;
	case 89:
	{
		ERR(ZS_BAD_DIRECTIVE);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 97:
	{
		WARN(ZS_BAD_ADDRESS_CHAR);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 108:
	{
		WARN(ZS_BAD_APL);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 111:
	{
		WARN(ZS_BAD_HEX_CHAR);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 113:
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 118:
	{
		WARN(ZS_BAD_BASE64_CHAR);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 128:
	{
		WARN(ZS_BAD_BASE32HEX_CHAR);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 157:
	{
		WARN(ZS_BAD_GATEWAY);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 158:
	{
		WARN(ZS_BAD_GATEWAY_KEY);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 159:
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 259:
	{
		WARN(ZS_BAD_BITMAP);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 276:
	{
		WARN(ZS_BAD_LOC_DATA);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 277:
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 282:
	{
		WARN(ZS_BAD_CHAR_DASH);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 286:
	{
		WARN(ZS_BAD_CHAR_COLON);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 289:
	{
		WARN(ZS_BAD_SVCB_PARAM);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 290:
	{
		WARN(ZS_BAD_SVCB_MANDATORY);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 300:
	{
		WARN(ZS_BAD_ALGORITHM);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 301:
	{
		WARN(ZS_BAD_CERT_TYPE);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 305:
	{
		WARN(ZS_BAD_RDATA);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 313:
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {cs = 62;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
		}
	}
	}

	_out: {}
	}


	// Check if the scanner state machine is in an uncovered state.
	bool extra_error = false;
	if (cs == 0) {
		ERR(ZS_UNCOVERED_STATE);
		extra_error = true;
	// Check for an unclosed multiline record.
	} else if (s->input.eof && s->multiline) {
		ERR(ZS_UNCLOSED_MULTILINE);
		extra_error = true;
		s->line_counter--;
	}

	// Treat the extra error.
	if (extra_error) {
		s->error.counter++;
		s->state = ZS_STATE_ERROR;

		// Copy the error context just for the part of the current line.
		s->buffer_length = 0;
		while (p < pe && *p != '\n' && s->buffer_length < 50) {
			s->buffer[s->buffer_length++] = *p++;
		}
		s->buffer[s->buffer_length++] = 0;

		// Execute the error callback.
		if (s->process.automatic && s->process.error != NULL) {
			s->process.error(s);
		}

		return;
	}

	// Storing scanner states.
	s->cs  = cs;
	s->top = top;
	memcpy(s->stack, stack, sizeof(stack));

	// Store the current parser position.
	s->input.current = p;

	// Storing r_data pointer.
	s->r_data_tail = rdata_tail - s->r_data;

	if (*wrap == WRAP_DETECTED) {
		if (set_input_string(s, "\\", 1, true) != 0) {
			return;
		}

		*wrap = WRAP_PROCESS;
		parse(s, wrap);
	} else {
		*wrap = WRAP_NONE;
	}
}

__attribute__((visibility("default")))
int zs_parse_record(
	zs_scanner_t *s)
{
	if (s == NULL) {
		return -1;
	}

	// Check if parsing is possible.
	switch (s->state) {
	case ZS_STATE_NONE:
	case ZS_STATE_DATA:
	case ZS_STATE_INCLUDE:
		break;
	case ZS_STATE_ERROR:
		if (s->error.fatal) {
			return -1;
		}
		break;
	default:
		// Return if stop or end of file.
		return 0;
	}

	// Check for the end of the input.
	if (s->input.current != s->input.end) {
		// Try to parse another item.
		s->state = ZS_STATE_NONE;
		wrap_t wrap = WRAP_NONE;
		parse(s, &wrap);

		// Finish if nothing was parsed.
		if (s->state == ZS_STATE_NONE) {
			// Parse the final block.
			if (set_input_string(s, "\n", 1, true) != 0) {
				return -1;
			}
			parse(s, &wrap);
			if (s->state == ZS_STATE_NONE) {
				s->state = ZS_STATE_EOF;
			}
		}
	} else {
		s->state = ZS_STATE_EOF;
	}

	return 0;
}

__attribute__((visibility("default")))
int zs_parse_all(
	zs_scanner_t *s)
{
	if (s == NULL) {
		return -1;
	}

	s->process.automatic = true;

	// Parse input block.
	wrap_t wrap = WRAP_NONE;
	parse(s, &wrap);

	// Parse trailing newline-char block if it makes sense.
	if (s->state != ZS_STATE_STOP && !s->error.fatal) {
		if (set_input_string(s, "\n", 1, true) != 0) {
			return -1;
		}
		parse(s, &wrap);
	}

	// Check if any errors have occurred.
	if (s->error.counter > 0) {
		return -1;
	}

	return 0;
}
