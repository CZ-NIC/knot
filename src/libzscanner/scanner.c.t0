
/*  Copyright (C) 2018 CZ.NIC, z.s.p.o. <knot-dns@labs.nic.cz>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#include <arpa/inet.h>
#include <fcntl.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <libgen.h>
#include <math.h>
#include <netinet/in.h>
#include <sys/socket.h>
#include <sys/mman.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <unistd.h>

#include "libzscanner/scanner.h"
#include "libzscanner/functions.h"
#include "libknot/descriptor.h"

/*! \brief Maximal length of rdata item. */
#define MAX_ITEM_LENGTH		255

/*! \brief Latitude value for equator (2^31). */
#define LOC_LAT_ZERO	(uint32_t)2147483648
/*! \brief Longitude value for meridian (2^31). */
#define LOC_LONG_ZERO	(uint32_t)2147483648
/*! \brief Zero level altitude value. */
#define LOC_ALT_ZERO	(uint32_t)10000000

/*! \brief Shorthand for setting warning data. */
#define WARN(err_code) { s->error.code = err_code; }
/*! \brief Shorthand for setting error data. */
#define ERR(err_code) { WARN(err_code); s->error.fatal = true; }
/*! \brief Shorthand for error reset. */
#define NOERR { WARN(ZS_OK); s->error.fatal = false; }

/*!
 * \brief Writes record type number to r_data.
 *
 * \param type		Type number.
 * \param rdata_tail	Position where to write type number to.
 */
static inline void type_num(const uint16_t type, uint8_t **rdata_tail)
{
	*((uint16_t *)*rdata_tail) = htons(type);
	*rdata_tail += 2;
}

/*!
 * \brief Sets bit to bitmap window.
 *
 * \param type		Type number.
 * \param s		Scanner context.
 */
static inline void window_add_bit(const uint16_t type, zs_scanner_t *s) {
	uint8_t win      = type / 256;
	uint8_t bit_pos  = type % 256;
	uint8_t byte_pos = bit_pos / 8;

	((s->windows[win]).bitmap)[byte_pos] |= 128 >> (bit_pos % 8);

	if ((s->windows[win]).length < byte_pos + 1) {
		(s->windows[win]).length = byte_pos + 1;
	}

	if (s->last_window < win) {
		s->last_window = win;
	}
}

// Include scanner file (in Ragel).

static const short _zone_scanner_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1,
	3, 1, 4, 1, 5, 1, 7, 1,
	8, 1, 10, 1, 12, 1, 13, 1,
	14, 1, 16, 1, 17, 1, 22, 1,
	23, 1, 25, 1, 26, 1, 28, 1,
	30, 1, 32, 1, 33, 1, 42, 1,
	43, 1, 44, 1, 46, 1, 48, 1,
	49, 1, 50, 1, 51, 1, 55, 1,
	56, 1, 58, 1, 60, 1, 62, 1,
	63, 1, 65, 1, 69, 1, 70, 1,
	73, 1, 74, 1, 77, 1, 80, 1,
	82, 1, 83, 1, 84, 1, 85, 1,
	86, 1, 87, 1, 88, 1, 89, 1,
	91, 1, 93, 1, 95, 1, 99, 1,
	100, 1, 104, 1, 105, 1, 109, 1,
	110, 1, 111, 1, 112, 1, 113, 1,
	114, 1, 115, 1, 116, 1, 117, 1,
	118, 1, 119, 1, 120, 1, 121, 1,
	122, 1, 124, 1, 125, 1, 126, 1,
	127, 1, 154, 1, 155, 1, 156, 1,
	157, 1, 158, 1, 159, 1, 160, 1,
	161, 1, 162, 1, 163, 1, 164, 1,
	165, 1, 166, 1, 167, 1, 168, 1,
	169, 1, 170, 1, 171, 1, 172, 1,
	173, 1, 174, 1, 175, 1, 176, 1,
	177, 1, 178, 1, 179, 1, 180, 1,
	181, 1, 182, 1, 183, 1, 184, 1,
	185, 1, 186, 1, 187, 1, 188, 1,
	189, 1, 190, 1, 191, 1, 192, 1,
	193, 1, 194, 1, 195, 1, 196, 1,
	197, 1, 198, 1, 199, 1, 200, 1,
	201, 1, 202, 1, 203, 1, 204, 1,
	205, 1, 206, 1, 207, 1, 208, 1,
	209, 1, 210, 1, 211, 1, 212, 1,
	213, 1, 214, 1, 215, 1, 216, 1,
	217, 1, 218, 1, 219, 1, 220, 1,
	221, 1, 222, 1, 223, 1, 224, 1,
	225, 1, 226, 1, 227, 1, 228, 1,
	229, 1, 230, 1, 231, 1, 232, 1,
	233, 1, 234, 1, 235, 1, 236, 1,
	237, 1, 238, 1, 239, 1, 241, 1,
	243, 1, 244, 1, 245, 1, 246, 1,
	253, 1, 254, 1, 259, 1, 261, 1,
	266, 1, 269, 1, 270, 1, 271, 1,
	272, 1, 274, 1, 275, 1, 276, 1,
	277, 1, 279, 2, 0, 46, 2, 1,
	0, 2, 1, 275, 2, 1, 322, 2,
	2, 5, 2, 2, 7, 2, 3, 5,
	2, 3, 7, 2, 4, 0, 2, 4,
	5, 2, 4, 7, 2, 4, 275, 2,
	5, 2, 2, 5, 3, 2, 5, 4,
	2, 5, 7, 2, 6, 1, 2, 7,
	1, 2, 7, 2, 2, 7, 3, 2,
	7, 4, 2, 7, 5, 2, 7, 29,
	2, 8, 69, 2, 8, 73, 2, 9,
	10, 2, 11, 1, 2, 12, 13, 2,
	15, 16, 2, 17, 13, 2, 17, 14,
	2, 18, 23, 2, 18, 73, 2, 18,
	80, 2, 19, 0, 2, 19, 7, 2,
	21, 0, 2, 22, 12, 2, 25, 65,
	2, 25, 104, 2, 25, 115, 2, 26,
	0, 2, 26, 1, 2, 26, 2, 2,
	26, 3, 2, 26, 4, 2, 26, 242,
	2, 27, 24, 2, 28, 1, 2, 28,
	2, 2, 28, 3, 2, 28, 4, 2,
	28, 7, 2, 28, 89, 2, 29, 7,
	2, 30, 8, 2, 30, 274, 2, 30,
	279, 2, 31, 24, 2, 32, 0, 2,
	32, 1, 2, 32, 2, 2, 32, 3,
	2, 32, 4, 2, 32, 242, 2, 33,
	38, 2, 34, 33, 2, 35, 69, 2,
	35, 259, 2, 35, 274, 2, 35, 279,
	2, 39, 247, 2, 39, 248, 2, 39,
	249, 2, 39, 250, 2, 39, 251, 2,
	39, 252, 2, 42, 0, 2, 42, 1,
	2, 42, 2, 2, 42, 3, 2, 42,
	4, 2, 43, 0, 2, 43, 1, 2,
	43, 2, 2, 43, 3, 2, 43, 4,
	2, 44, 0, 2, 44, 1, 2, 44,
	2, 2, 44, 3, 2, 44, 4, 2,
	45, 273, 2, 46, 1, 2, 46, 2,
	2, 46, 3, 2, 46, 4, 2, 53,
	7, 2, 53, 44, 2, 53, 89, 2,
	54, 55, 2, 56, 1, 2, 56, 2,
	2, 56, 3, 2, 56, 4, 2, 57,
	274, 2, 58, 0, 2, 59, 60, 2,
	61, 62, 2, 63, 0, 2, 63, 58,
	2, 67, 0, 2, 67, 274, 2, 71,
	22, 2, 75, 65, 2, 76, 7, 2,
	77, 8, 2, 78, 22, 2, 80, 8,
	2, 86, 87, 2, 88, 1, 2, 88,
	2, 2, 88, 3, 2, 88, 4, 2,
	89, 1, 2, 89, 2, 2, 89, 3,
	2, 89, 4, 2, 89, 7, 2, 90,
	91, 2, 92, 274, 2, 93, 94, 2,
	95, 96, 2, 97, 98, 2, 97, 99,
	2, 97, 100, 2, 101, 102, 2, 103,
	274, 2, 106, 274, 2, 107, 0, 2,
	123, 274, 2, 125, 0, 2, 126, 0,
	2, 127, 0, 2, 128, 0, 2, 129,
	0, 2, 130, 0, 2, 131, 0, 2,
	132, 0, 2, 133, 0, 2, 134, 0,
	2, 135, 0, 2, 136, 0, 2, 137,
	0, 2, 138, 0, 2, 139, 0, 2,
	140, 0, 2, 141, 0, 2, 142, 0,
	2, 143, 0, 2, 144, 0, 2, 145,
	0, 2, 146, 0, 2, 147, 0, 2,
	148, 0, 2, 149, 0, 2, 150, 0,
	2, 151, 274, 2, 152, 274, 2, 153,
	274, 2, 154, 1, 2, 154, 2, 2,
	154, 3, 2, 154, 4, 2, 155, 1,
	2, 155, 2, 2, 155, 3, 2, 155,
	4, 2, 156, 1, 2, 156, 2, 2,
	156, 3, 2, 156, 4, 2, 157, 1,
	2, 157, 2, 2, 157, 3, 2, 157,
	4, 2, 158, 1, 2, 158, 2, 2,
	158, 3, 2, 158, 4, 2, 159, 1,
	2, 159, 2, 2, 159, 3, 2, 159,
	4, 2, 160, 1, 2, 160, 2, 2,
	160, 3, 2, 160, 4, 2, 161, 1,
	2, 161, 2, 2, 161, 3, 2, 161,
	4, 2, 162, 1, 2, 162, 2, 2,
	162, 3, 2, 162, 4, 2, 163, 1,
	2, 163, 2, 2, 163, 3, 2, 163,
	4, 2, 164, 1, 2, 164, 2, 2,
	164, 3, 2, 164, 4, 2, 165, 1,
	2, 165, 2, 2, 165, 3, 2, 165,
	4, 2, 166, 1, 2, 166, 2, 2,
	166, 3, 2, 166, 4, 2, 167, 1,
	2, 167, 2, 2, 167, 3, 2, 167,
	4, 2, 168, 1, 2, 168, 2, 2,
	168, 3, 2, 168, 4, 2, 169, 1,
	2, 169, 2, 2, 169, 3, 2, 169,
	4, 2, 170, 1, 2, 170, 2, 2,
	170, 3, 2, 170, 4, 2, 171, 1,
	2, 171, 2, 2, 171, 3, 2, 171,
	4, 2, 172, 1, 2, 172, 2, 2,
	172, 3, 2, 172, 4, 2, 173, 1,
	2, 173, 2, 2, 173, 3, 2, 173,
	4, 2, 174, 1, 2, 174, 2, 2,
	174, 3, 2, 174, 4, 2, 175, 1,
	2, 175, 2, 2, 175, 3, 2, 175,
	4, 2, 176, 1, 2, 176, 2, 2,
	176, 3, 2, 176, 4, 2, 177, 1,
	2, 177, 2, 2, 177, 3, 2, 177,
	4, 2, 178, 1, 2, 178, 2, 2,
	178, 3, 2, 178, 4, 2, 179, 1,
	2, 179, 2, 2, 179, 3, 2, 179,
	4, 2, 180, 1, 2, 180, 2, 2,
	180, 3, 2, 180, 4, 2, 181, 1,
	2, 181, 2, 2, 181, 3, 2, 181,
	4, 2, 182, 1, 2, 182, 2, 2,
	182, 3, 2, 182, 4, 2, 183, 1,
	2, 183, 2, 2, 183, 3, 2, 183,
	4, 2, 184, 1, 2, 184, 2, 2,
	184, 3, 2, 184, 4, 2, 185, 1,
	2, 185, 2, 2, 185, 3, 2, 185,
	4, 2, 186, 1, 2, 186, 2, 2,
	186, 3, 2, 186, 4, 2, 187, 1,
	2, 187, 2, 2, 187, 3, 2, 187,
	4, 2, 188, 1, 2, 188, 2, 2,
	188, 3, 2, 188, 4, 2, 189, 1,
	2, 189, 2, 2, 189, 3, 2, 189,
	4, 2, 190, 1, 2, 190, 2, 2,
	190, 3, 2, 190, 4, 2, 191, 1,
	2, 191, 2, 2, 191, 3, 2, 191,
	4, 2, 192, 1, 2, 192, 2, 2,
	192, 3, 2, 192, 4, 2, 193, 1,
	2, 193, 2, 2, 193, 3, 2, 193,
	4, 2, 194, 1, 2, 194, 2, 2,
	194, 3, 2, 194, 4, 2, 195, 1,
	2, 195, 2, 2, 195, 3, 2, 195,
	4, 2, 196, 1, 2, 196, 2, 2,
	196, 3, 2, 196, 4, 2, 197, 1,
	2, 197, 2, 2, 197, 3, 2, 197,
	4, 2, 198, 1, 2, 198, 2, 2,
	198, 3, 2, 198, 4, 2, 199, 1,
	2, 199, 2, 2, 199, 3, 2, 199,
	4, 2, 200, 1, 2, 200, 2, 2,
	200, 3, 2, 200, 4, 2, 201, 1,
	2, 201, 2, 2, 201, 3, 2, 201,
	4, 2, 202, 1, 2, 202, 2, 2,
	202, 3, 2, 202, 4, 2, 203, 1,
	2, 203, 2, 2, 203, 3, 2, 203,
	4, 2, 204, 1, 2, 204, 2, 2,
	204, 3, 2, 204, 4, 2, 205, 1,
	2, 205, 2, 2, 205, 3, 2, 205,
	4, 2, 206, 1, 2, 206, 2, 2,
	206, 3, 2, 206, 4, 2, 207, 1,
	2, 207, 2, 2, 207, 3, 2, 207,
	4, 2, 208, 1, 2, 208, 2, 2,
	208, 3, 2, 208, 4, 2, 209, 1,
	2, 209, 2, 2, 209, 3, 2, 209,
	4, 2, 210, 1, 2, 210, 2, 2,
	210, 3, 2, 210, 4, 2, 211, 1,
	2, 211, 2, 2, 211, 3, 2, 211,
	4, 2, 212, 1, 2, 212, 2, 2,
	212, 3, 2, 212, 4, 2, 213, 1,
	2, 213, 2, 2, 213, 3, 2, 213,
	4, 2, 214, 1, 2, 214, 2, 2,
	214, 3, 2, 214, 4, 2, 215, 1,
	2, 215, 2, 2, 215, 3, 2, 215,
	4, 2, 216, 1, 2, 216, 2, 2,
	216, 3, 2, 216, 4, 2, 217, 1,
	2, 217, 2, 2, 217, 3, 2, 217,
	4, 2, 218, 1, 2, 218, 2, 2,
	218, 3, 2, 218, 4, 2, 219, 1,
	2, 219, 2, 2, 219, 3, 2, 219,
	4, 2, 220, 1, 2, 220, 2, 2,
	220, 3, 2, 220, 4, 2, 221, 1,
	2, 221, 2, 2, 221, 3, 2, 221,
	4, 2, 222, 1, 2, 222, 2, 2,
	222, 3, 2, 222, 4, 2, 223, 1,
	2, 223, 2, 2, 223, 3, 2, 223,
	4, 2, 224, 1, 2, 224, 2, 2,
	224, 3, 2, 224, 4, 2, 225, 1,
	2, 225, 2, 2, 225, 3, 2, 225,
	4, 2, 226, 1, 2, 226, 2, 2,
	226, 3, 2, 226, 4, 2, 227, 1,
	2, 227, 2, 2, 227, 3, 2, 227,
	4, 2, 228, 1, 2, 228, 2, 2,
	228, 3, 2, 228, 4, 2, 229, 1,
	2, 229, 2, 2, 229, 3, 2, 229,
	4, 2, 230, 1, 2, 230, 2, 2,
	230, 3, 2, 230, 4, 2, 231, 1,
	2, 231, 2, 2, 231, 3, 2, 231,
	4, 2, 232, 1, 2, 232, 2, 2,
	232, 3, 2, 232, 4, 2, 233, 1,
	2, 233, 2, 2, 233, 3, 2, 233,
	4, 2, 234, 1, 2, 234, 2, 2,
	234, 3, 2, 234, 4, 2, 235, 1,
	2, 235, 2, 2, 235, 3, 2, 235,
	4, 2, 236, 1, 2, 236, 2, 2,
	236, 3, 2, 236, 4, 2, 237, 1,
	2, 237, 2, 2, 237, 3, 2, 237,
	4, 2, 238, 1, 2, 238, 2, 2,
	238, 3, 2, 238, 4, 2, 239, 1,
	2, 239, 2, 2, 239, 3, 2, 239,
	4, 2, 240, 0, 2, 243, 1, 2,
	243, 2, 2, 243, 3, 2, 243, 4,
	2, 244, 1, 2, 244, 2, 2, 244,
	3, 2, 244, 4, 2, 245, 1, 2,
	245, 2, 2, 245, 3, 2, 245, 4,
	2, 246, 1, 2, 246, 2, 2, 246,
	3, 2, 246, 4, 2, 253, 1, 2,
	253, 2, 2, 253, 3, 2, 253, 4,
	2, 254, 1, 2, 254, 2, 2, 254,
	3, 2, 254, 4, 2, 257, 0, 2,
	258, 274, 2, 260, 104, 2, 265, 104,
	2, 274, 8, 2, 275, 1, 2, 275,
	4, 2, 278, 275, 2, 279, 8, 2,
	279, 274, 2, 280, 273, 2, 281, 273,
	2, 282, 273, 2, 283, 273, 2, 284,
	273, 2, 285, 273, 2, 286, 273, 2,
	287, 273, 2, 288, 273, 2, 289, 273,
	2, 290, 273, 2, 291, 273, 2, 292,
	273, 2, 293, 273, 2, 294, 273, 2,
	295, 273, 2, 296, 273, 2, 297, 273,
	2, 298, 273, 2, 299, 273, 2, 300,
	273, 2, 301, 273, 2, 302, 273, 2,
	303, 273, 2, 304, 273, 2, 305, 273,
	2, 306, 273, 2, 307, 273, 2, 308,
	273, 2, 309, 273, 2, 310, 273, 2,
	311, 273, 2, 312, 273, 2, 313, 273,
	2, 314, 273, 2, 315, 273, 2, 316,
	273, 2, 317, 273, 2, 318, 273, 2,
	319, 273, 2, 320, 273, 2, 321, 273,
	2, 322, 1, 3, 0, 46, 1, 3,
	0, 46, 2, 3, 0, 46, 3, 3,
	0, 46, 4, 3, 1, 7, 322, 3,
	1, 29, 7, 3, 1, 67, 0, 3,
	1, 107, 0, 3, 1, 240, 0, 3,
	1, 257, 0, 3, 1, 275, 322, 3,
	2, 7, 29, 3, 2, 29, 7, 3,
	3, 7, 29, 3, 3, 29, 7, 3,
	4, 7, 29, 3, 4, 29, 7, 3,
	4, 67, 0, 3, 4, 107, 0, 3,
	4, 240, 0, 3, 4, 257, 0, 3,
	4, 275, 7, 3, 5, 7, 2, 3,
	5, 7, 3, 3, 5, 7, 4, 3,
	6, 1, 322, 3, 6, 322, 1, 3,
	7, 2, 5, 3, 7, 2, 29, 3,
	7, 3, 5, 3, 7, 3, 29, 3,
	7, 4, 5, 3, 7, 4, 29, 3,
	7, 322, 1, 3, 9, 11, 1, 3,
	14, 20, 0, 3, 19, 7, 2, 3,
	19, 7, 3, 3, 19, 7, 4, 3,
	19, 79, 7, 3, 22, 12, 13, 3,
	26, 67, 0, 3, 28, 1, 89, 3,
	28, 2, 7, 3, 28, 2, 89, 3,
	28, 3, 7, 3, 28, 3, 89, 3,
	28, 4, 7, 3, 28, 4, 89, 3,
	28, 89, 7, 3, 28, 278, 275, 3,
	28, 280, 273, 3, 29, 1, 7, 3,
	29, 2, 7, 3, 29, 3, 7, 3,
	29, 4, 7, 3, 30, 85, 8, 3,
	30, 274, 8, 3, 30, 279, 8, 3,
	30, 279, 274, 3, 32, 1, 0, 3,
	32, 4, 0, 3, 34, 33, 275, 3,
	35, 151, 274, 3, 35, 153, 274, 3,
	35, 279, 8, 3, 35, 279, 274, 3,
	37, 39, 247, 3, 37, 39, 248, 3,
	37, 39, 249, 3, 37, 39, 250, 3,
	37, 39, 251, 3, 37, 39, 252, 3,
	39, 247, 1, 3, 39, 247, 2, 3,
	39, 247, 3, 3, 39, 247, 4, 3,
	39, 248, 1, 3, 39, 248, 2, 3,
	39, 248, 3, 3, 39, 248, 4, 3,
	39, 249, 1, 3, 39, 249, 2, 3,
	39, 249, 3, 3, 39, 249, 4, 3,
	39, 250, 1, 3, 39, 250, 2, 3,
	39, 250, 3, 3, 39, 250, 4, 3,
	39, 251, 1, 3, 39, 251, 2, 3,
	39, 251, 3, 3, 39, 251, 4, 3,
	39, 252, 1, 3, 39, 252, 2, 3,
	39, 252, 3, 3, 39, 252, 4, 3,
	45, 273, 1, 3, 45, 273, 2, 3,
	45, 273, 3, 3, 45, 273, 4, 3,
	45, 273, 275, 3, 47, 35, 69, 3,
	47, 35, 274, 3, 47, 35, 279, 3,
	52, 34, 33, 3, 53, 7, 2, 3,
	53, 7, 3, 3, 53, 7, 4, 3,
	53, 44, 0, 3, 53, 44, 1, 3,
	53, 44, 2, 3, 53, 44, 3, 3,
	53, 44, 4, 3, 53, 89, 1, 3,
	53, 89, 2, 3, 53, 89, 3, 3,
	53, 89, 4, 3, 63, 58, 0, 3,
	64, 59, 60, 3, 66, 25, 65, 3,
	68, 0, 1, 3, 71, 22, 12, 3,
	72, 0, 1, 3, 76, 2, 7, 3,
	76, 3, 7, 3, 76, 4, 7, 3,
	76, 7, 4, 3, 78, 22, 12, 3,
	81, 0, 1, 3, 84, 7, 1, 3,
	84, 7, 4, 3, 84, 27, 24, 3,
	84, 29, 7, 3, 86, 27, 24, 3,
	86, 87, 275, 3, 89, 2, 7, 3,
	89, 3, 7, 3, 89, 4, 7, 3,
	92, 103, 274, 3, 92, 151, 274, 3,
	93, 94, 0, 3, 93, 94, 1, 3,
	93, 94, 2, 3, 93, 94, 3, 3,
	93, 94, 4, 3, 95, 96, 0, 3,
	95, 96, 1, 3, 95, 96, 2, 3,
	95, 96, 3, 3, 95, 96, 4, 3,
	101, 102, 0, 3, 101, 102, 1, 3,
	101, 102, 2, 3, 101, 102, 3, 3,
	101, 102, 4, 3, 106, 108, 259, 3,
	106, 268, 274, 3, 151, 152, 274, 3,
	196, 240, 0, 3, 197, 240, 0, 3,
	198, 240, 0, 3, 199, 240, 0, 3,
	200, 240, 0, 3, 201, 240, 0, 3,
	202, 240, 0, 3, 203, 240, 0, 3,
	204, 240, 0, 3, 205, 240, 0, 3,
	206, 240, 0, 3, 207, 240, 0, 3,
	208, 240, 0, 3, 209, 240, 0, 3,
	210, 240, 0, 3, 211, 240, 0, 3,
	212, 240, 0, 3, 213, 240, 0, 3,
	214, 240, 0, 3, 215, 240, 0, 3,
	216, 240, 0, 3, 217, 240, 0, 3,
	218, 240, 0, 3, 219, 240, 0, 3,
	220, 240, 0, 3, 221, 240, 0, 3,
	222, 240, 0, 3, 223, 240, 0, 3,
	224, 240, 0, 3, 225, 240, 0, 3,
	226, 240, 0, 3, 227, 240, 0, 3,
	228, 240, 0, 3, 229, 240, 0, 3,
	230, 240, 0, 3, 231, 240, 0, 3,
	232, 240, 0, 3, 233, 240, 0, 3,
	234, 240, 0, 3, 235, 240, 0, 3,
	236, 240, 0, 3, 237, 240, 0, 3,
	238, 240, 0, 3, 239, 240, 0, 3,
	256, 34, 33, 3, 261, 262, 0, 3,
	261, 263, 0, 3, 264, 106, 274, 3,
	266, 267, 0, 3, 268, 106, 274, 3,
	274, 8, 85, 3, 275, 7, 1, 3,
	275, 7, 4, 3, 275, 27, 24, 3,
	275, 322, 1, 3, 277, 27, 24, 3,
	279, 274, 8, 3, 280, 273, 1, 3,
	280, 273, 2, 3, 280, 273, 3, 3,
	280, 273, 4, 3, 280, 273, 7, 3,
	280, 273, 275, 3, 281, 273, 1, 3,
	281, 273, 2, 3, 281, 273, 3, 3,
	281, 273, 4, 3, 281, 273, 275, 3,
	282, 273, 1, 3, 282, 273, 2, 3,
	282, 273, 3, 3, 282, 273, 4, 3,
	282, 273, 275, 3, 283, 273, 1, 3,
	283, 273, 2, 3, 283, 273, 3, 3,
	283, 273, 4, 3, 283, 273, 275, 3,
	284, 273, 1, 3, 284, 273, 2, 3,
	284, 273, 3, 3, 284, 273, 4, 3,
	284, 273, 275, 3, 285, 273, 1, 3,
	285, 273, 2, 3, 285, 273, 3, 3,
	285, 273, 4, 3, 285, 273, 275, 3,
	286, 273, 1, 3, 286, 273, 2, 3,
	286, 273, 3, 3, 286, 273, 4, 3,
	286, 273, 275, 3, 287, 273, 1, 3,
	287, 273, 2, 3, 287, 273, 3, 3,
	287, 273, 4, 3, 287, 273, 275, 3,
	288, 273, 1, 3, 288, 273, 2, 3,
	288, 273, 3, 3, 288, 273, 4, 3,
	288, 273, 275, 3, 289, 273, 1, 3,
	289, 273, 2, 3, 289, 273, 3, 3,
	289, 273, 4, 3, 289, 273, 275, 3,
	290, 273, 1, 3, 290, 273, 2, 3,
	290, 273, 3, 3, 290, 273, 4, 3,
	290, 273, 275, 3, 291, 273, 1, 3,
	291, 273, 2, 3, 291, 273, 3, 3,
	291, 273, 4, 3, 291, 273, 275, 3,
	292, 273, 1, 3, 292, 273, 2, 3,
	292, 273, 3, 3, 292, 273, 4, 3,
	292, 273, 275, 3, 293, 273, 1, 3,
	293, 273, 2, 3, 293, 273, 3, 3,
	293, 273, 4, 3, 293, 273, 275, 3,
	294, 273, 1, 3, 294, 273, 2, 3,
	294, 273, 3, 3, 294, 273, 4, 3,
	294, 273, 275, 3, 295, 273, 1, 3,
	295, 273, 2, 3, 295, 273, 3, 3,
	295, 273, 4, 3, 295, 273, 275, 3,
	296, 273, 1, 3, 296, 273, 2, 3,
	296, 273, 3, 3, 296, 273, 4, 3,
	296, 273, 275, 3, 297, 273, 1, 3,
	297, 273, 2, 3, 297, 273, 3, 3,
	297, 273, 4, 3, 297, 273, 275, 3,
	298, 273, 1, 3, 298, 273, 2, 3,
	298, 273, 3, 3, 298, 273, 4, 3,
	298, 273, 275, 3, 299, 273, 1, 3,
	299, 273, 2, 3, 299, 273, 3, 3,
	299, 273, 4, 3, 299, 273, 275, 3,
	300, 273, 1, 3, 300, 273, 2, 3,
	300, 273, 3, 3, 300, 273, 4, 3,
	300, 273, 275, 3, 301, 273, 1, 3,
	301, 273, 2, 3, 301, 273, 3, 3,
	301, 273, 4, 3, 301, 273, 275, 3,
	302, 273, 1, 3, 302, 273, 2, 3,
	302, 273, 3, 3, 302, 273, 4, 3,
	302, 273, 275, 3, 303, 273, 1, 3,
	303, 273, 2, 3, 303, 273, 3, 3,
	303, 273, 4, 3, 303, 273, 275, 3,
	304, 273, 1, 3, 304, 273, 2, 3,
	304, 273, 3, 3, 304, 273, 4, 3,
	304, 273, 275, 3, 305, 273, 1, 3,
	305, 273, 2, 3, 305, 273, 3, 3,
	305, 273, 4, 3, 305, 273, 275, 3,
	306, 273, 1, 3, 306, 273, 2, 3,
	306, 273, 3, 3, 306, 273, 4, 3,
	306, 273, 275, 3, 307, 273, 1, 3,
	307, 273, 2, 3, 307, 273, 3, 3,
	307, 273, 4, 3, 307, 273, 275, 3,
	308, 273, 1, 3, 308, 273, 2, 3,
	308, 273, 3, 3, 308, 273, 4, 3,
	308, 273, 275, 3, 309, 273, 1, 3,
	309, 273, 2, 3, 309, 273, 3, 3,
	309, 273, 4, 3, 309, 273, 275, 3,
	310, 273, 1, 3, 310, 273, 2, 3,
	310, 273, 3, 3, 310, 273, 4, 3,
	310, 273, 275, 3, 311, 273, 1, 3,
	311, 273, 2, 3, 311, 273, 3, 3,
	311, 273, 4, 3, 311, 273, 275, 3,
	312, 273, 1, 3, 312, 273, 2, 3,
	312, 273, 3, 3, 312, 273, 4, 3,
	312, 273, 275, 3, 313, 273, 1, 3,
	313, 273, 2, 3, 313, 273, 3, 3,
	313, 273, 4, 3, 313, 273, 275, 3,
	314, 273, 1, 3, 314, 273, 2, 3,
	314, 273, 3, 3, 314, 273, 4, 3,
	314, 273, 275, 3, 315, 273, 1, 3,
	315, 273, 2, 3, 315, 273, 3, 3,
	315, 273, 4, 3, 315, 273, 275, 3,
	316, 273, 1, 3, 316, 273, 2, 3,
	316, 273, 3, 3, 316, 273, 4, 3,
	316, 273, 275, 3, 317, 273, 1, 3,
	317, 273, 2, 3, 317, 273, 3, 3,
	317, 273, 4, 3, 317, 273, 275, 3,
	318, 273, 1, 3, 318, 273, 2, 3,
	318, 273, 3, 3, 318, 273, 4, 3,
	318, 273, 275, 3, 319, 273, 1, 3,
	319, 273, 2, 3, 319, 273, 3, 3,
	319, 273, 4, 3, 319, 273, 275, 3,
	320, 273, 1, 3, 320, 273, 2, 3,
	320, 273, 3, 3, 320, 273, 4, 3,
	320, 273, 275, 3, 321, 273, 1, 3,
	321, 273, 2, 3, 321, 273, 3, 3,
	321, 273, 4, 3, 321, 273, 275, 3,
	322, 1, 6, 4, 1, 7, 322, 29,
	4, 1, 275, 29, 7, 4, 4, 275,
	7, 29, 4, 4, 275, 29, 7, 4,
	6, 1, 7, 322, 4, 6, 1, 81,
	0, 4, 6, 68, 0, 1, 4, 6,
	72, 0, 1, 4, 6, 81, 0, 1,
	4, 7, 6, 322, 1, 4, 7, 68,
	0, 1, 4, 7, 322, 1, 6, 4,
	7, 322, 1, 29, 4, 17, 14, 20,
	0, 4, 19, 79, 7, 2, 4, 19,
	79, 7, 3, 4, 19, 79, 7, 4,
	4, 26, 1, 67, 0, 4, 26, 4,
	67, 0, 4, 28, 1, 7, 322, 4,
	28, 1, 278, 275, 4, 28, 1, 280,
	273, 4, 28, 2, 89, 7, 4, 28,
	2, 278, 275, 4, 28, 2, 280, 273,
	4, 28, 3, 89, 7, 4, 28, 3,
	278, 275, 4, 28, 3, 280, 273, 4,
	28, 4, 89, 7, 4, 28, 4, 278,
	275, 4, 28, 4, 280, 273, 4, 28,
	280, 273, 7, 4, 30, 35, 279, 8,
	4, 30, 47, 35, 279, 4, 30, 279,
	274, 8, 4, 34, 33, 27, 24, 4,
	35, 279, 274, 8, 4, 37, 34, 33,
	38, 4, 37, 39, 247, 1, 4, 37,
	39, 247, 2, 4, 37, 39, 247, 3,
	4, 37, 39, 247, 4, 4, 37, 39,
	248, 1, 4, 37, 39, 248, 2, 4,
	37, 39, 248, 3, 4, 37, 39, 248,
	4, 4, 37, 39, 249, 1, 4, 37,
	39, 249, 2, 4, 37, 39, 249, 3,
	4, 37, 39, 249, 4, 4, 37, 39,
	250, 1, 4, 37, 39, 250, 2, 4,
	37, 39, 250, 3, 4, 37, 39, 250,
	4, 4, 37, 39, 251, 1, 4, 37,
	39, 251, 2, 4, 37, 39, 251, 3,
	4, 37, 39, 251, 4, 4, 37, 39,
	252, 1, 4, 37, 39, 252, 2, 4,
	37, 39, 252, 3, 4, 37, 39, 252,
	4, 4, 39, 249, 257, 0, 4, 39,
	250, 257, 0, 4, 39, 251, 257, 0,
	4, 39, 252, 257, 0, 4, 40, 36,
	34, 33, 4, 41, 36, 34, 33, 4,
	45, 273, 1, 275, 4, 45, 273, 4,
	275, 4, 47, 35, 8, 69, 4, 53,
	52, 34, 33, 4, 71, 22, 12, 13,
	4, 78, 22, 12, 13, 4, 84, 29,
	1, 7, 4, 84, 29, 2, 7, 4,
	84, 29, 3, 7, 4, 84, 29, 4,
	7, 4, 86, 87, 27, 24, 4, 89,
	1, 7, 322, 4, 92, 151, 152, 274,
	4, 93, 94, 1, 0, 4, 93, 94,
	4, 0, 4, 95, 96, 1, 0, 4,
	95, 96, 4, 0, 4, 101, 102, 1,
	0, 4, 101, 102, 4, 0, 4, 196,
	1, 240, 0, 4, 196, 4, 240, 0,
	4, 197, 1, 240, 0, 4, 197, 4,
	240, 0, 4, 198, 1, 240, 0, 4,
	198, 4, 240, 0, 4, 199, 1, 240,
	0, 4, 199, 4, 240, 0, 4, 200,
	1, 240, 0, 4, 200, 4, 240, 0,
	4, 201, 1, 240, 0, 4, 201, 4,
	240, 0, 4, 202, 1, 240, 0, 4,
	202, 4, 240, 0, 4, 203, 1, 240,
	0, 4, 203, 4, 240, 0, 4, 204,
	1, 240, 0, 4, 204, 4, 240, 0,
	4, 205, 1, 240, 0, 4, 205, 4,
	240, 0, 4, 206, 1, 240, 0, 4,
	206, 4, 240, 0, 4, 207, 1, 240,
	0, 4, 207, 4, 240, 0, 4, 208,
	1, 240, 0, 4, 208, 4, 240, 0,
	4, 209, 1, 240, 0, 4, 209, 4,
	240, 0, 4, 210, 1, 240, 0, 4,
	210, 4, 240, 0, 4, 211, 1, 240,
	0, 4, 211, 4, 240, 0, 4, 212,
	1, 240, 0, 4, 212, 4, 240, 0,
	4, 213, 1, 240, 0, 4, 213, 4,
	240, 0, 4, 214, 1, 240, 0, 4,
	214, 4, 240, 0, 4, 215, 1, 240,
	0, 4, 215, 4, 240, 0, 4, 216,
	1, 240, 0, 4, 216, 4, 240, 0,
	4, 217, 1, 240, 0, 4, 217, 4,
	240, 0, 4, 218, 1, 240, 0, 4,
	218, 4, 240, 0, 4, 219, 1, 240,
	0, 4, 219, 4, 240, 0, 4, 220,
	1, 240, 0, 4, 220, 4, 240, 0,
	4, 221, 1, 240, 0, 4, 221, 4,
	240, 0, 4, 222, 1, 240, 0, 4,
	222, 4, 240, 0, 4, 223, 1, 240,
	0, 4, 223, 4, 240, 0, 4, 224,
	1, 240, 0, 4, 224, 4, 240, 0,
	4, 225, 1, 240, 0, 4, 225, 4,
	240, 0, 4, 226, 1, 240, 0, 4,
	226, 4, 240, 0, 4, 227, 1, 240,
	0, 4, 227, 4, 240, 0, 4, 228,
	1, 240, 0, 4, 228, 4, 240, 0,
	4, 229, 1, 240, 0, 4, 229, 4,
	240, 0, 4, 230, 1, 240, 0, 4,
	230, 4, 240, 0, 4, 231, 1, 240,
	0, 4, 231, 4, 240, 0, 4, 232,
	1, 240, 0, 4, 232, 4, 240, 0,
	4, 233, 1, 240, 0, 4, 233, 4,
	240, 0, 4, 234, 1, 240, 0, 4,
	234, 4, 240, 0, 4, 235, 1, 240,
	0, 4, 235, 4, 240, 0, 4, 236,
	1, 240, 0, 4, 236, 4, 240, 0,
	4, 237, 1, 240, 0, 4, 237, 4,
	240, 0, 4, 238, 1, 240, 0, 4,
	238, 4, 240, 0, 4, 239, 1, 240,
	0, 4, 239, 4, 240, 0, 4, 275,
	7, 322, 1, 4, 280, 273, 1, 275,
	4, 280, 273, 2, 7, 4, 280, 273,
	3, 7, 4, 280, 273, 4, 7, 4,
	280, 273, 4, 275, 4, 281, 273, 1,
	275, 4, 281, 273, 4, 275, 4, 282,
	273, 1, 275, 4, 282, 273, 4, 275,
	4, 283, 273, 1, 275, 4, 283, 273,
	4, 275, 4, 284, 273, 1, 275, 4,
	284, 273, 4, 275, 4, 285, 273, 1,
	275, 4, 285, 273, 4, 275, 4, 286,
	273, 1, 275, 4, 286, 273, 4, 275,
	4, 287, 273, 1, 275, 4, 287, 273,
	4, 275, 4, 288, 273, 1, 275, 4,
	288, 273, 4, 275, 4, 289, 273, 1,
	275, 4, 289, 273, 4, 275, 4, 290,
	273, 1, 275, 4, 290, 273, 4, 275,
	4, 291, 273, 1, 275, 4, 291, 273,
	4, 275, 4, 292, 273, 1, 275, 4,
	292, 273, 4, 275, 4, 293, 273, 1,
	275, 4, 293, 273, 4, 275, 4, 294,
	273, 1, 275, 4, 294, 273, 4, 275,
	4, 295, 273, 1, 275, 4, 295, 273,
	4, 275, 4, 296, 273, 1, 275, 4,
	296, 273, 4, 275, 4, 297, 273, 1,
	275, 4, 297, 273, 4, 275, 4, 298,
	273, 1, 275, 4, 298, 273, 4, 275,
	4, 299, 273, 1, 275, 4, 299, 273,
	4, 275, 4, 300, 273, 1, 275, 4,
	300, 273, 4, 275, 4, 301, 273, 1,
	275, 4, 301, 273, 4, 275, 4, 302,
	273, 1, 275, 4, 302, 273, 4, 275,
	4, 303, 273, 1, 275, 4, 303, 273,
	4, 275, 4, 304, 273, 1, 275, 4,
	304, 273, 4, 275, 4, 305, 273, 1,
	275, 4, 305, 273, 4, 275, 4, 306,
	273, 1, 275, 4, 306, 273, 4, 275,
	4, 307, 273, 1, 275, 4, 307, 273,
	4, 275, 4, 308, 273, 1, 275, 4,
	308, 273, 4, 275, 4, 309, 273, 1,
	275, 4, 309, 273, 4, 275, 4, 310,
	273, 1, 275, 4, 310, 273, 4, 275,
	4, 311, 273, 1, 275, 4, 311, 273,
	4, 275, 4, 312, 273, 1, 275, 4,
	312, 273, 4, 275, 4, 313, 273, 1,
	275, 4, 313, 273, 4, 275, 4, 314,
	273, 1, 275, 4, 314, 273, 4, 275,
	4, 315, 273, 1, 275, 4, 315, 273,
	4, 275, 4, 316, 273, 1, 275, 4,
	316, 273, 4, 275, 4, 317, 273, 1,
	275, 4, 317, 273, 4, 275, 4, 318,
	273, 1, 275, 4, 318, 273, 4, 275,
	4, 319, 273, 1, 275, 4, 319, 273,
	4, 275, 4, 320, 273, 1, 275, 4,
	320, 273, 4, 275, 4, 321, 273, 1,
	275, 4, 321, 273, 4, 275, 5, 19,
	7, 72, 0, 1, 5, 28, 1, 89,
	7, 322, 5, 28, 1, 280, 273, 275,
	5, 28, 2, 280, 273, 7, 5, 28,
	3, 280, 273, 7, 5, 28, 4, 280,
	273, 7, 5, 28, 4, 280, 273, 275,
	5, 30, 35, 279, 274, 8, 5, 34,
	33, 275, 27, 24, 5, 37, 39, 249,
	257, 0, 5, 37, 39, 250, 257, 0,
	5, 37, 39, 251, 257, 0, 5, 37,
	39, 252, 257, 0, 5, 39, 249, 1,
	257, 0, 5, 39, 249, 4, 257, 0,
	5, 39, 250, 1, 257, 0, 5, 39,
	250, 4, 257, 0, 5, 39, 251, 1,
	257, 0, 5, 39, 251, 4, 257, 0,
	5, 39, 252, 1, 257, 0, 5, 39,
	252, 4, 257, 0, 5, 47, 35, 279,
	274, 8, 5, 53, 7, 68, 0, 1,
	5, 76, 7, 81, 0, 1, 5, 86,
	87, 275, 27, 24, 5, 255, 40, 36,
	34, 33, 5, 280, 273, 1, 7, 322,
	5, 280, 273, 4, 275, 7, 5, 280,
	273, 275, 7, 4, 6, 19, 79, 7,
	81, 0, 1, 6, 28, 1, 280, 273,
	7, 322, 6, 28, 4, 280, 273, 275,
	7, 6, 30, 47, 35, 279, 274, 8,
	6, 37, 39, 249, 1, 257, 0, 6,
	37, 39, 249, 4, 257, 0, 6, 37,
	39, 250, 1, 257, 0, 6, 37, 39,
	250, 4, 257, 0, 6, 37, 39, 251,
	1, 257, 0, 6, 37, 39, 251, 4,
	257, 0, 6, 37, 39, 252, 1, 257,
	0, 6, 37, 39, 252, 4, 257, 0,
	6, 280, 273, 1, 275, 7, 322, 6,
	280, 273, 275, 7, 322, 1, 7, 28,
	1, 280, 273, 275, 7, 322
};

static const short _zone_scanner_cond_offsets[] = {
	0, 0, 2, 4, 6, 8, 10, 12,
	14, 14, 14, 17, 19, 21, 24, 26,
	28, 30, 30, 30, 32, 37, 42, 42,
	42, 42, 42, 42, 44, 46, 46, 46,
	48, 48, 48, 48, 50, 50, 50, 50,
	50, 52, 52, 52, 52, 54, 54, 54,
	54, 56, 58, 58, 58, 58, 58, 60,
	60, 62, 62, 62, 62, 62, 64, 64,
	66, 68, 68, 68, 68, 68, 68, 68,
	68, 70, 70, 70, 72, 74, 74, 74,
	76, 76, 78, 78, 80, 82, 82, 82,
	82, 82, 84, 86, 86, 86, 86, 86,
	88, 88, 90, 92, 92, 94, 96, 96,
	96, 96, 96, 98, 98, 98, 100, 100,
	102, 102, 102, 102, 104, 106, 106, 106,
	108, 108, 110, 110, 112, 112, 112, 112,
	114, 114, 114, 114, 116, 116, 118, 118,
	118, 118, 120, 120, 120, 122, 125, 127,
	127, 129, 131, 133, 135, 135, 137, 140,
	140, 140, 140, 140, 140, 140, 140, 140,
	140, 142, 144, 147, 149, 151, 154, 156,
	156, 158, 161, 163, 165, 167, 169, 171,
	174, 176, 178, 180, 182, 184, 186, 188,
	190, 192, 194, 196, 198, 200, 202, 204,
	206, 208, 211, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 215, 217, 219,
	222, 224, 226, 228, 230, 232, 234, 236,
	238, 240, 242, 244, 246, 248, 250, 252,
	254, 256, 258, 263, 268, 273, 278, 278,
	278, 280, 280, 280, 280, 282, 282, 284,
	287, 289, 291, 296, 301, 306, 311, 314,
	316, 321, 326, 328, 330, 332, 334, 336,
	338, 340, 342, 344, 346, 348, 350, 352,
	354, 357, 360, 362, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 366, 366,
	366, 366, 366, 367, 369, 371, 373, 375,
	375, 377, 377, 379, 382, 384, 386, 386,
	388, 390, 390, 390, 390, 390, 390, 392,
	395, 397, 399, 401, 403, 403, 405, 407,
	407, 407, 407, 407, 407, 409, 412, 414,
	417, 420, 420, 420, 420, 420, 422, 425,
	425, 427, 429, 431, 431, 431, 433, 436,
	436, 436, 438, 438, 438, 438, 438, 438,
	440, 442, 442, 442, 444, 444, 444, 444,
	446, 446, 446, 446, 446, 448, 448, 448,
	448, 450, 450, 450, 450, 452, 454, 454,
	454, 454, 454, 456, 456, 458, 458, 458,
	458, 458, 460, 460, 460, 460, 460, 460,
	460, 460, 462, 462, 462, 464, 466, 466,
	466, 468, 468, 470, 470, 472, 474, 474,
	474, 474, 474, 476, 478, 478, 478, 478,
	478, 480, 480, 482, 484, 484, 486, 488,
	488, 488, 488, 488, 490, 490, 490, 492,
	492, 494, 494, 494, 494, 496, 498, 498,
	498, 500, 500, 502, 502, 504, 504, 504,
	504, 506, 506, 506, 506, 508, 508, 510,
	510, 510, 510, 512, 512, 512, 514, 514,
	514, 514, 516, 516, 518, 520, 522, 524,
	526, 526, 528, 531, 534, 537, 539, 541,
	543, 545, 545, 547, 550, 553, 555, 558,
	558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 560, 562,
	564, 566, 568, 570, 572, 574, 576, 578,
	580, 582, 582, 582, 582, 582, 585, 587,
	587, 589, 592, 594, 594, 596, 599, 601,
	601, 603, 606, 609, 612, 612, 614, 616,
	616, 619, 619, 621, 623, 623, 626, 626,
	628, 630, 630, 633, 633, 635, 637, 640,
	640, 640, 640, 642, 644, 646, 648, 650,
	652, 654, 656, 658, 660, 662, 664, 666,
	668, 670, 672, 672, 674, 676, 678, 680,
	682, 684, 686, 688, 691, 693, 695, 698,
	700, 702, 704, 707, 709, 711, 713, 716,
	718, 720, 722, 725, 727, 730, 732, 734,
	737, 740, 743, 745, 748, 750, 752, 755,
	758, 758, 760, 762, 764, 766, 768, 770,
	770, 773, 776, 779, 779, 781, 783, 785,
	787, 789, 791, 793, 795, 797, 799, 799,
	802, 805, 808, 811, 814, 814, 816, 818,
	820, 822, 824, 826, 828, 831, 834, 837,
	839, 839, 839, 839, 839, 839, 841, 844,
	844, 844, 844, 844, 846, 848, 850, 852,
	854, 856, 856, 858, 861, 864, 867, 870,
	870, 872, 874, 876, 878, 878, 880, 883,
	886, 889, 889, 891, 893, 895, 897, 899,
	901, 907, 918, 920, 923, 929, 932, 943,
	946, 949, 952, 954, 956, 958, 960, 966,
	969, 972, 974, 976, 978, 980, 986, 989,
	992, 994, 996, 998, 1000, 1006, 1009, 1012,
	1015, 1015, 1017, 1019, 1021, 1023, 1025, 1027,
	1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043,
	1045, 1047, 1049, 1052, 1055, 1058, 1061, 1064,
	1067, 1070, 1073, 1073, 1073, 1075, 1075, 1075,
	1075, 1077, 1077, 1079, 1079, 1079, 1081, 1081,
	1081, 1081, 1081, 1081, 1083, 1085, 1085, 1085,
	1087, 1087, 1087, 1087, 1089, 1089, 1089, 1089,
	1089, 1091, 1091, 1091, 1091, 1093, 1093, 1093,
	1093, 1095, 1097, 1097, 1097, 1097, 1097, 1099,
	1099, 1101, 1101, 1101, 1101, 1101, 1103, 1103,
	1103, 1103, 1103, 1103, 1103, 1103, 1105, 1105,
	1105, 1107, 1109, 1109, 1109, 1111, 1111, 1113,
	1113, 1115, 1117, 1117, 1117, 1117, 1117, 1119,
	1121, 1121, 1121, 1121, 1121, 1123, 1123, 1125,
	1127, 1127, 1129, 1131, 1131, 1131, 1131, 1131,
	1133, 1133, 1133, 1135, 1135, 1137, 1137, 1137,
	1137, 1139, 1141, 1141, 1141, 1143, 1143, 1145,
	1145, 1147, 1147, 1147, 1147, 1149, 1149, 1149,
	1149, 1151, 1151, 1153, 1153, 1153, 1153, 1155,
	1155, 1155, 1157, 1157, 1157, 1157, 1157, 1159,
	1161, 1163, 1165, 1167, 1169, 1171, 1174, 1177,
	1180, 1180, 1182, 1182, 1184, 1186, 1188, 1190,
	1192, 1194, 1196, 1198, 1198, 1198, 1198, 1198,
	1198, 1198, 1198, 1198, 1198, 1198, 1198, 1198,
	1198, 1198, 1201, 1201, 1203, 1206, 1209, 1212,
	1212, 1214, 1216, 1218, 1220, 1222, 1224, 1224,
	1224, 1224, 1227, 1230, 1233, 1233, 1235, 1237,
	1239, 1241, 1243, 1245, 1245, 1247, 1250, 1253,
	1256, 1259, 1259, 1261, 1263, 1263, 1266, 1266,
	1268, 1270, 1270, 1270, 1270, 1270, 1270, 1270,
	1270, 1270, 1270, 1273, 1273, 1273, 1273, 1273,
	1273, 1273, 1273, 1273, 1273, 1273, 1273, 1273,
	1273, 1275, 1277, 1279, 1281, 1281, 1284, 1287,
	1287, 1289, 1291, 1293, 1295, 1295, 1298, 1301,
	1303, 1305, 1307, 1309, 1311, 1313, 1315, 1317,
	1319, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
	1321, 1323, 1323, 1325, 1328, 1328, 1330, 1333,
	1333, 1335, 1338, 1340, 1340, 1342, 1345, 1348,
	1348, 1348, 1348, 1348, 1348, 1348, 1348, 1348,
	1348, 1350, 1353, 1353, 1353, 1355, 1358, 1360,
	1363, 1365, 1368, 1370, 1373, 1373, 1373, 1373,
	1373, 1375, 1378, 1378, 1380, 1383, 1383, 1385,
	1388, 1388, 1394, 1397, 1408, 1411, 1422, 1425,
	1425, 1425, 1425, 1425, 1425, 1425, 1425, 1427,
	1430, 1430, 1430, 1430, 1430, 1430
};

static const char _zone_scanner_cond_lengths[] = {
	0, 2, 2, 2, 2, 2, 2, 2,
	0, 0, 3, 2, 2, 3, 2, 2,
	2, 0, 0, 2, 5, 5, 0, 0,
	0, 0, 0, 2, 2, 0, 0, 2,
	0, 0, 0, 2, 0, 0, 0, 0,
	2, 0, 0, 0, 2, 0, 0, 0,
	2, 2, 0, 0, 0, 0, 2, 0,
	2, 0, 0, 0, 0, 2, 0, 2,
	2, 0, 0, 0, 0, 0, 0, 0,
	2, 0, 0, 2, 2, 0, 0, 2,
	0, 2, 0, 2, 2, 0, 0, 0,
	0, 2, 2, 0, 0, 0, 0, 2,
	0, 2, 2, 0, 2, 2, 0, 0,
	0, 0, 2, 0, 0, 2, 0, 2,
	0, 0, 0, 2, 2, 0, 0, 2,
	0, 2, 0, 2, 0, 0, 0, 2,
	0, 0, 0, 2, 0, 2, 0, 0,
	0, 2, 0, 0, 2, 3, 2, 0,
	2, 2, 2, 2, 0, 2, 3, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	2, 2, 3, 2, 2, 3, 2, 0,
	2, 3, 2, 2, 2, 2, 2, 3,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 2, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2, 2, 2, 3,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 5, 5, 5, 5, 0, 0,
	2, 0, 0, 0, 2, 0, 2, 3,
	2, 2, 5, 5, 5, 5, 3, 2,
	5, 5, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 2, 3, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1, 0, 0,
	0, 0, 1, 2, 2, 2, 2, 0,
	2, 0, 2, 3, 2, 2, 0, 2,
	2, 0, 0, 0, 0, 0, 2, 3,
	2, 2, 2, 2, 0, 2, 2, 0,
	0, 0, 0, 0, 2, 3, 2, 3,
	3, 0, 0, 0, 0, 2, 3, 0,
	2, 2, 2, 0, 0, 2, 3, 0,
	0, 2, 0, 0, 0, 0, 0, 2,
	2, 0, 0, 2, 0, 0, 0, 2,
	0, 0, 0, 0, 2, 0, 0, 0,
	2, 0, 0, 0, 2, 2, 0, 0,
	0, 0, 2, 0, 2, 0, 0, 0,
	0, 2, 0, 0, 0, 0, 0, 0,
	0, 2, 0, 0, 2, 2, 0, 0,
	2, 0, 2, 0, 2, 2, 0, 0,
	0, 0, 2, 2, 0, 0, 0, 0,
	2, 0, 2, 2, 0, 2, 2, 0,
	0, 0, 0, 2, 0, 0, 2, 0,
	2, 0, 0, 0, 2, 2, 0, 0,
	2, 0, 2, 0, 2, 0, 0, 0,
	2, 0, 0, 0, 2, 0, 2, 0,
	0, 0, 2, 0, 0, 2, 0, 0,
	0, 2, 0, 2, 2, 2, 2, 2,
	0, 2, 3, 3, 3, 2, 2, 2,
	2, 0, 2, 3, 3, 2, 3, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 0, 0, 0, 0, 3, 2, 0,
	2, 3, 2, 0, 2, 3, 2, 0,
	2, 3, 3, 3, 0, 2, 2, 0,
	3, 0, 2, 2, 0, 3, 0, 2,
	2, 0, 3, 0, 2, 2, 3, 0,
	0, 0, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 0, 2, 2, 2, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 2,
	2, 2, 3, 2, 2, 2, 3, 2,
	2, 2, 3, 2, 3, 2, 2, 3,
	3, 3, 2, 3, 2, 2, 3, 3,
	0, 2, 2, 2, 2, 2, 2, 0,
	3, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 0, 3,
	3, 3, 3, 3, 0, 2, 2, 2,
	2, 2, 2, 2, 3, 3, 3, 2,
	0, 0, 0, 0, 0, 2, 3, 0,
	0, 0, 0, 2, 2, 2, 2, 2,
	2, 0, 2, 3, 3, 3, 3, 0,
	2, 2, 2, 2, 0, 2, 3, 3,
	3, 0, 2, 2, 2, 2, 2, 2,
	6, 11, 2, 3, 6, 3, 11, 3,
	3, 3, 2, 2, 2, 2, 6, 3,
	3, 2, 2, 2, 2, 6, 3, 3,
	2, 2, 2, 2, 6, 3, 3, 3,
	0, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 0, 0, 2, 0, 0, 0,
	2, 0, 2, 0, 0, 2, 0, 0,
	0, 0, 0, 2, 2, 0, 0, 2,
	0, 0, 0, 2, 0, 0, 0, 0,
	2, 0, 0, 0, 2, 0, 0, 0,
	2, 2, 0, 0, 0, 0, 2, 0,
	2, 0, 0, 0, 0, 2, 0, 0,
	0, 0, 0, 0, 0, 2, 0, 0,
	2, 2, 0, 0, 2, 0, 2, 0,
	2, 2, 0, 0, 0, 0, 2, 2,
	0, 0, 0, 0, 2, 0, 2, 2,
	0, 2, 2, 0, 0, 0, 0, 2,
	0, 0, 2, 0, 2, 0, 0, 0,
	2, 2, 0, 0, 2, 0, 2, 0,
	2, 0, 0, 0, 2, 0, 0, 0,
	2, 0, 2, 0, 0, 0, 2, 0,
	0, 2, 0, 0, 0, 0, 2, 2,
	2, 2, 2, 2, 2, 3, 3, 3,
	0, 2, 0, 2, 2, 2, 2, 2,
	2, 2, 2, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 3, 0, 2, 3, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 0, 0,
	0, 3, 3, 3, 0, 2, 2, 2,
	2, 2, 2, 0, 2, 3, 3, 3,
	3, 0, 2, 2, 0, 3, 0, 2,
	2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	2, 2, 2, 2, 0, 3, 3, 0,
	2, 2, 2, 2, 0, 3, 3, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 0, 0, 0, 0, 0, 0, 0,
	2, 0, 2, 3, 0, 2, 3, 0,
	2, 3, 2, 0, 2, 3, 3, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	2, 3, 0, 0, 2, 3, 2, 3,
	2, 3, 2, 3, 0, 0, 0, 0,
	2, 3, 0, 2, 3, 0, 2, 3,
	0, 6, 3, 11, 3, 11, 3, 0,
	0, 0, 0, 0, 0, 0, 2, 3,
	0, 0, 0, 0, 0, 0
};

static const short _zone_scanner_cond_keys[] = {
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 58, 59, 59,
	60, 127, -128, 9, 10, 10, 11, 58,
	59, 59, 60, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 58, 59, 59, 60, 127, -128, 9,
	10, 10, 11, 58, 59, 59, 60, 127,
	-128, 9, 10, 10, 11, 58, 59, 59,
	60, 127, -128, 9, 10, 10, 11, 58,
	59, 59, 60, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 58, 59, 59, 60, 127,
	-128, 9, 10, 10, 11, 58, 59, 59,
	60, 127, -128, 9, 10, 10, 11, 58,
	59, 59, 60, 127, -128, 9, 10, 10,
	11, 58, 59, 59, 60, 127, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 58, 59, 59,
	60, 127, -128, 9, 10, 10, 11, 58,
	59, 59, 60, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 10, 10, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 9, 9, 10, 10, 32, 32,
	40, 40, 41, 41, 59, 59, 9, 9,
	10, 10, 32, 32, 40, 40, 41, 41,
	43, 43, 47, 47, 48, 57, 59, 59,
	65, 90, 97, 122, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 9, 9,
	10, 10, 32, 32, 40, 40, 41, 41,
	59, 59, -128, 9, 10, 10, 11, 127,
	9, 9, 10, 10, 32, 32, 40, 40,
	41, 41, 43, 43, 47, 47, 48, 57,
	59, 59, 65, 90, 97, 122, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	9, 9, 10, 10, 32, 32, 40, 40,
	41, 41, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	9, 9, 10, 10, 32, 32, 40, 40,
	41, 41, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	9, 9, 10, 10, 32, 32, 40, 40,
	41, 41, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	10, 10, 59, 59, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, 10, 10, 59, 59, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	10, 10, 59, 59, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 10, 10, 59, 59,
	-128, 9, 10, 10, 11, 127, 10, 10,
	59, 59, -128, 9, 10, 10, 11, 127,
	9, 9, 10, 10, 32, 32, 40, 40,
	41, 41, 59, 59, -128, 9, 10, 10,
	11, 127, 9, 9, 10, 10, 32, 32,
	40, 40, 41, 41, 43, 43, 47, 47,
	48, 57, 59, 59, 65, 90, 97, 122,
	-128, 9, 10, 10, 11, 127, 9, 9,
	10, 10, 32, 32, 40, 40, 41, 41,
	43, 43, 47, 47, 48, 57, 59, 59,
	65, 90, 97, 122, -128, 9, 10, 10,
	11, 127, 10, 10, 59, 59, -128, 9,
	10, 10, 11, 127, 0
};

static const char _zone_scanner_cond_spaces[] = {
	0, 0, 0, 0, 0, 0, 5, 5,
	5, 5, 0, 0, 0, 0, 0, 0,
	0, 5, 5, 5, 5, 0, 0, 0,
	5, 5, 0, 0, 0, 0, 5, 5,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	0, 0, 0, 0, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 5, 5, 5, 5, 5, 5, 5,
	5, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5, 5, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5, 5,
	5, 5, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5, 5,
	5, 5, 5, 5, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5, 5, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2, 2, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5, 5, 0, 0,
	0, 5, 5, 5, 5, 5, 5, 5,
	5, 0, 0, 0, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 0, 0,
	0, 0, 0, 0, 0, 0, 5, 5,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 5, 5, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 5, 5, 5, 5, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	0, 0, 0, 5, 5, 5, 5, 0,
	0, 0, 5, 5, 5, 5, 5, 5,
	0, 0, 0, 5, 5, 5, 5, 5,
	5, 0, 0, 0, 5, 5, 5, 5,
	5, 5, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1, 1, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5, 5, 5,
	5, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	5, 5, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5, 5,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 8, 11, 8,
	8, 8, 11, 3, 6, 3, 3, 3,
	3, 3, 3, 6, 3, 3, 1, 1,
	6, 6, 6, 4, 9, 4, 4, 4,
	9, 7, 7, 7, 8, 11, 8, 8,
	8, 3, 3, 3, 11, 3, 3, 10,
	10, 10, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	8, 11, 8, 8, 8, 11, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 8, 11, 8, 8,
	8, 11, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	8, 11, 8, 8, 8, 11, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1,
	1, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 1, 1, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 1, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5, 5, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5,
	5, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5, 5, 5, 5, 5,
	5, 0, 0, 5, 5, 0, 0, 0,
	5, 5, 0, 0, 0, 5, 5, 0,
	0, 0, 0, 0, 5, 5, 0, 0,
	0, 0, 0, 0, 5, 5, 0, 0,
	0, 5, 5, 0, 0, 0, 5, 5,
	0, 0, 0, 5, 5, 0, 0, 0,
	5, 5, 0, 0, 0, 5, 5, 0,
	0, 0, 5, 5, 0, 0, 0, 5,
	5, 0, 0, 0, 4, 9, 4, 4,
	4, 9, 7, 7, 7, 3, 6, 3,
	3, 3, 3, 3, 3, 6, 3, 3,
	6, 6, 6, 8, 11, 8, 8, 8,
	3, 3, 3, 11, 3, 3, 10, 10,
	10, 5, 5, 0, 0, 0, 0
};

static const short _zone_scanner_key_offsets[] = {
	0, 0, 40, 58, 94, 110, 127, 135,
	143, 144, 145, 148, 167, 186, 192, 244,
	264, 302, 310, 312, 322, 336, 350, 354,
	356, 358, 360, 362, 372, 382, 384, 386,
	396, 398, 400, 402, 412, 418, 420, 422,
	424, 434, 438, 440, 442, 452, 454, 456,
	458, 468, 478, 480, 482, 484, 485, 495,
	496, 506, 508, 510, 512, 514, 524, 528,
	534, 570, 572, 574, 576, 578, 580, 582,
	584, 594, 598, 600, 610, 620, 626, 627,
	637, 638, 648, 650, 660, 670, 674, 676,
	678, 680, 690, 700, 706, 708, 710, 712,
	722, 724, 734, 746, 748, 759, 771, 773,
	775, 777, 779, 789, 791, 793, 803, 809,
	819, 821, 823, 825, 835, 845, 853, 855,
	865, 867, 877, 879, 889, 891, 893, 895,
	905, 911, 913, 915, 925, 927, 937, 939,
	941, 943, 955, 957, 959, 969, 972, 1012,
	1016, 1022, 1060, 1078, 1086, 1098, 1106, 1109,
	1110, 1116, 1118, 1120, 1122, 1124, 1126, 1128,
	1134, 1140, 1178, 1181, 1199, 1237, 1240, 1248,
	1260, 1268, 1271, 1287, 1337, 1355, 1374, 1414,
	1420, 1434, 1448, 1500, 1516, 1530, 1540, 1550,
	1562, 1574, 1588, 1600, 1614, 1624, 1638, 1654,
	1668, 1678, 1684, 1698, 1700, 1702, 1704, 1706,
	1708, 1714, 1716, 1718, 1724, 1732, 1752, 1792,
	1798, 1816, 1868, 1884, 1898, 1908, 1918, 1930,
	1942, 1956, 1968, 1982, 1992, 2006, 2022, 2036,
	2046, 2061, 2101, 2115, 2129, 2145, 2161, 2163,
	2165, 2175, 2177, 2179, 2181, 2191, 2193, 2203,
	2209, 2223, 2237, 2253, 2269, 2285, 2301, 2304,
	2356, 2370, 2384, 2398, 2410, 2418, 2426, 2436,
	2446, 2458, 2468, 2480, 2488, 2500, 2514, 2526,
	2534, 2540, 2546, 2556, 2562, 2563, 2564, 2575,
	2591, 2607, 2609, 2611, 2613, 2629, 2635, 2641,
	2647, 2659, 2665, 2667, 2669, 2681, 2687, 2693,
	2699, 2701, 2703, 2709, 2715, 2723, 2743, 2751,
	2752, 2762, 2774, 2784, 2787, 2793, 2809, 2819,
	2837, 2845, 2846, 2848, 2850, 2852, 2862, 2870,
	2873, 2879, 2891, 2899, 2917, 2927, 2945, 2953,
	2954, 2956, 2958, 2960, 2970, 2978, 2984, 3000,
	3003, 3006, 3013, 3020, 3028, 3036, 3053, 3056,
	3057, 3067, 3107, 3123, 3125, 3127, 3137, 3140,
	3148, 3150, 3160, 3164, 3166, 3168, 3170, 3172,
	3182, 3192, 3194, 3196, 3206, 3208, 3210, 3212,
	3222, 3228, 3230, 3232, 3234, 3244, 3248, 3250,
	3252, 3262, 3264, 3266, 3268, 3278, 3288, 3290,
	3292, 3294, 3295, 3305, 3306, 3316, 3318, 3320,
	3322, 3324, 3334, 3336, 3338, 3340, 3342, 3344,
	3346, 3348, 3358, 3362, 3364, 3374, 3384, 3390,
	3391, 3401, 3402, 3412, 3414, 3424, 3434, 3438,
	3440, 3442, 3444, 3454, 3464, 3470, 3472, 3474,
	3476, 3486, 3488, 3498, 3510, 3512, 3523, 3535,
	3537, 3539, 3541, 3543, 3553, 3555, 3557, 3567,
	3573, 3583, 3585, 3587, 3589, 3599, 3609, 3617,
	3619, 3629, 3631, 3641, 3643, 3653, 3655, 3657,
	3659, 3669, 3675, 3677, 3679, 3689, 3691, 3701,
	3703, 3705, 3707, 3719, 3721, 3723, 3733, 3735,
	3737, 3739, 3749, 3751, 3761, 3767, 3775, 3783,
	3795, 3801, 3817, 3820, 3823, 3826, 3832, 3841,
	3851, 3863, 3869, 3885, 3888, 3891, 3899, 3902,
	3914, 3922, 3926, 3932, 3934, 3941, 3943, 3945,
	3947, 3949, 3950, 3951, 3953, 3955, 3957, 3958,
	3964, 3968, 3972, 3973, 3975, 3977, 3979, 3981,
	3987, 3989, 3991, 3993, 3995, 3996, 3997, 3999,
	4001, 4003, 4004, 4005, 4006, 4012, 4013, 4014,
	4016, 4018, 4020, 4021, 4022, 4023, 4029, 4031,
	4032, 4033, 4034, 4035, 4041, 4042, 4043, 4049,
	4051, 4053, 4055, 4057, 4059, 4061, 4063, 4069,
	4071, 4073, 4075, 4077, 4079, 4081, 4085, 4087,
	4089, 4095, 4097, 4099, 4105, 4107, 4109, 4113,
	4115, 4116, 4122, 4124, 4126, 4129, 4136, 4138,
	4140, 4142, 4144, 4145, 4146, 4148, 4150, 4152,
	4153, 4159, 4160, 4161, 4167, 4168, 4169, 4175,
	4189, 4197, 4199, 4201, 4203, 4205, 4207, 4213,
	4219, 4221, 4223, 4225, 4227, 4229, 4235, 4239,
	4241, 4247, 4249, 4251, 4257, 4259, 4261, 4263,
	4269, 4271, 4273, 4279, 4283, 4285, 4291, 4293,
	4295, 4301, 4303, 4305, 4307, 4313, 4315, 4317,
	4323, 4326, 4335, 4344, 4350, 4359, 4365, 4380,
	4386, 4394, 4402, 4410, 4428, 4436, 4454, 4462,
	4480, 4488, 4506, 4514, 4526, 4534, 4537, 4545,
	4557, 4565, 4568, 4576, 4588, 4596, 4599, 4607,
	4619, 4627, 4630, 4633, 4636, 4642, 4648, 4660,
	4666, 4669, 4678, 4684, 4699, 4705, 4708, 4710,
	4718, 4733, 4739, 4742, 4748, 4758, 4774, 4777,
	4784, 4797, 4799, 4807, 4817, 4825, 4835, 4844,
	4852, 4858, 4866, 4874, 4884, 4892, 4902, 4911,
	4919, 4925, 4934, 4936, 4950, 4962, 4976, 4988,
	5002, 5014, 5028, 5038, 5041, 5054, 5067, 5070,
	5083, 5096, 5106, 5109, 5122, 5135, 5145, 5148,
	5161, 5174, 5184, 5187, 5193, 5196, 5204, 5212,
	5215, 5218, 5221, 5227, 5230, 5238, 5246, 5249,
	5252, 5254, 5262, 5270, 5278, 5286, 5294, 5309,
	5315, 5318, 5321, 5324, 5326, 5334, 5342, 5350,
	5362, 5368, 5380, 5386, 5398, 5404, 5419, 5425,
	5428, 5431, 5434, 5437, 5440, 5446, 5452, 5460,
	5468, 5480, 5486, 5499, 5501, 5504, 5507, 5510,
	5523, 5525, 5526, 5529, 5532, 5534, 5546, 5549,
	5550, 5557, 5564, 5566, 5574, 5586, 5592, 5600,
	5608, 5620, 5626, 5642, 5645, 5648, 5651, 5654,
	5656, 5664, 5672, 5680, 5692, 5698, 5714, 5717,
	5720, 5723, 5725, 5733, 5743, 5749, 5757, 5765,
	5772, 5806, 5819, 5821, 5824, 5838, 5841, 5882,
	5891, 5894, 5897, 5903, 5911, 5919, 5928, 5965,
	5968, 5971, 5977, 5985, 5993, 6006, 6047, 6050,
	6053, 6059, 6067, 6075, 6090, 6124, 6127, 6130,
	6133, 6163, 6175, 6187, 6193, 6201, 6209, 6217,
	6225, 6233, 6241, 6249, 6257, 6265, 6273, 6288,
	6294, 6307, 6309, 6312, 6315, 6318, 6321, 6324,
	6327, 6330, 6333, 6335, 6337, 6343, 6345, 6347,
	6349, 6355, 6357, 6363, 6371, 6373, 6379, 6383,
	6385, 6387, 6389, 6391, 6397, 6403, 6405, 6407,
	6413, 6415, 6417, 6419, 6425, 6431, 6433, 6435,
	6437, 6443, 6447, 6449, 6451, 6457, 6459, 6461,
	6463, 6469, 6475, 6477, 6479, 6481, 6482, 6488,
	6489, 6495, 6497, 6499, 6501, 6503, 6509, 6511,
	6513, 6515, 6517, 6519, 6521, 6523, 6529, 6533,
	6535, 6541, 6547, 6553, 6554, 6560, 6561, 6567,
	6569, 6575, 6581, 6585, 6587, 6589, 6591, 6597,
	6603, 6609, 6611, 6613, 6615, 6621, 6623, 6629,
	6637, 6639, 6646, 6654, 6656, 6658, 6660, 6662,
	6668, 6670, 6672, 6678, 6684, 6690, 6692, 6694,
	6696, 6702, 6708, 6716, 6718, 6724, 6726, 6732,
	6734, 6740, 6742, 6744, 6746, 6752, 6758, 6760,
	6762, 6768, 6770, 6776, 6778, 6780, 6782, 6790,
	6792, 6794, 6800, 6809, 6815, 6821, 6823, 6831,
	6839, 6847, 6859, 6865, 6878, 6880, 6883, 6886,
	6889, 6896, 6898, 6900, 6908, 6916, 6924, 6932,
	6940, 6953, 6959, 6971, 6977, 6984, 6990, 6997,
	7004, 7010, 7017, 7029, 7035, 7036, 7037, 7038,
	7039, 7040, 7043, 7049, 7061, 7064, 7067, 7070,
	7072, 7080, 7088, 7096, 7104, 7112, 7125, 7131,
	7137, 7149, 7152, 7155, 7158, 7160, 7168, 7176,
	7184, 7192, 7200, 7212, 7218, 7234, 7237, 7240,
	7243, 7246, 7248, 7256, 7265, 7274, 7277, 7279,
	7287, 7299, 7305, 7311, 7317, 7318, 7324, 7330,
	7336, 7342, 7349, 7352, 7358, 7364, 7365, 7371,
	7377, 7384, 7390, 7396, 7397, 7403, 7409, 7416,
	7418, 7426, 7434, 7442, 7454, 7460, 7463, 7466,
	7468, 7476, 7488, 7494, 7506, 7512, 7515, 7518,
	7536, 7569, 7617, 7667, 7685, 7735, 7753, 7786,
	7851, 7916, 7916, 7916, 7916, 7928, 7928, 7928,
	7928, 7944, 7944, 7961, 7964, 7964, 8004, 8007,
	8007, 8023, 8026, 8038, 8038, 8054, 8057, 8060,
	8060, 8060, 8060, 8060, 8060, 8060, 8060, 8060,
	8060, 8076, 8079, 8079, 8079, 8089, 8092, 8104,
	8107, 8119, 8122, 8134, 8137, 8137, 8137, 8137,
	8137, 8150, 8153, 8153, 8169, 8172, 8172, 8188,
	8191, 8191, 8205, 8208, 8221, 8224, 8265, 8274,
	8274, 8274, 8274, 8274, 8274, 8274, 8274, 8290,
	8293, 8293, 8293, 8293, 8293, 8293
};

static const short _zone_scanner_trans_keys[] = {
	9, 32, 40, 41, 65, 67, 68, 69,
	72, 73, 75, 76, 77, 78, 80, 82,
	83, 84, 85, 97, 99, 100, 101, 104,
	105, 107, 108, 109, 110, 112, 114, 115,
	116, 117, 778, 827, 1034, 1083, 48, 57,
	9, 32, 40, 41, 68, 72, 77, 83,
	87, 100, 104, 109, 115, 119, 1034, 1083,
	48, 57, 9, 32, 40, 41, 65, 67,
	68, 69, 72, 73, 75, 76, 77, 78,
	80, 82, 83, 84, 85, 97, 99, 100,
	101, 104, 105, 107, 108, 109, 110, 112,
	114, 115, 116, 117, 1034, 1083, 9, 32,
	40, 41, 65, 70, 80, 97, 102, 112,
	2058, 2107, 2314, 2363, 2570, 2619, 9, 32,
	40, 41, 92, 2058, 2107, 2314, 2363, 2570,
	2619, -128, 8, 11, 58, 60, 127, 9,
	32, 40, 41, 778, 827, 1034, 1083, 9,
	32, 40, 41, 778, 827, 1034, 1083, 10,
	35, 1034, 896, 1151, 9, 32, 40, 41,
	92, 1802, 1851, 2058, 2107, 2314, 2363, 2570,
	2619, -128, 8, 11, 58, 60, 127, 9,
	32, 40, 41, 92, 1802, 1851, 2058, 2107,
	2314, 2363, 2570, 2619, -128, 8, 11, 58,
	60, 127, 778, 1034, 640, 895, 896, 1151,
	9, 32, 40, 41, 58, 65, 67, 68,
	69, 72, 73, 75, 76, 77, 78, 80,
	82, 83, 84, 85, 92, 97, 99, 100,
	101, 104, 105, 107, 108, 109, 110, 112,
	114, 115, 116, 117, 1802, 1851, 2058, 2107,
	2314, 2363, 2570, 2619, -128, 8, 11, 47,
	48, 57, 60, 127, 9, 32, 40, 41,
	68, 72, 77, 83, 87, 100, 104, 109,
	115, 119, 778, 827, 1034, 1083, 48, 57,
	9, 32, 40, 41, 65, 67, 68, 69,
	72, 73, 75, 76, 77, 78, 80, 82,
	83, 84, 85, 97, 99, 100, 101, 104,
	105, 107, 108, 109, 110, 112, 114, 115,
	116, 117, 778, 827, 1034, 1083, 65, 68,
	69, 78, 97, 100, 101, 110, 65, 97,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 777, 778, 800, 808, 809, 827,
	1033, 1034, 1056, 1064, 1065, 1083, 896, 1151,
	777, 778, 800, 808, 809, 827, 1033, 1034,
	1056, 1064, 1065, 1083, 896, 1151, 78, 83,
	110, 115, 83, 115, 75, 107, 69, 101,
	89, 121, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 82, 114,
	84, 116, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 65, 97, 77, 109,
	69, 101, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 72, 78, 83, 104,
	110, 115, 67, 99, 73, 105, 68, 100,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 65, 83, 97, 115, 77, 109,
	69, 101, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 75, 107, 69, 101,
	89, 121, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 85, 117,
	73, 105, 52, 54, 56, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 52,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 73, 105, 78, 110, 70, 102,
	79, 111, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 78, 80, 110, 112,
	9, 32, 40, 41, 1034, 1083, 9, 32,
	40, 41, 65, 67, 68, 69, 72, 73,
	75, 76, 77, 78, 80, 82, 83, 84,
	85, 97, 99, 100, 101, 104, 105, 107,
	108, 109, 110, 112, 114, 115, 116, 117,
	1034, 1083, 80, 112, 83, 115, 69, 101,
	67, 99, 75, 107, 69, 101, 89, 121,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 69, 88, 101, 120, 89, 121,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 51, 54, 79, 80,
	111, 112, 50, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 52, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	67, 99, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 73, 88,
	105, 120, 78, 110, 70, 102, 79, 111,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 65, 73, 83, 97,
	105, 115, 80, 112, 84, 116, 82, 114,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 68, 100, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 9, 32,
	40, 41, 69, 101, 2058, 2107, 2314, 2363,
	2570, 2619, 67, 99, 9, 32, 40, 41,
	51, 2058, 2107, 2314, 2363, 2570, 2619, 9,
	32, 40, 41, 80, 112, 2058, 2107, 2314,
	2363, 2570, 2619, 65, 97, 82, 114, 65,
	97, 77, 109, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 84, 116, 82,
	114, 9, 32, 40, 41, 2058, 2107, 2314,
	2363, 2570, 2619, 80, 82, 84, 112, 114,
	116, 9, 32, 40, 41, 2058, 2107, 2314,
	2363, 2570, 2619, 83, 115, 73, 105, 71,
	103, 9, 32, 40, 41, 2058, 2107, 2314,
	2363, 2570, 2619, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 79, 80, 82,
	83, 111, 112, 114, 115, 65, 97, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 70, 102, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 86, 118, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 72, 104, 70, 102, 80, 112, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 76, 88, 89, 108, 120, 121, 83,
	115, 65, 97, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 84, 116, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 80, 112, 69, 101, 48, 57, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 48, 57, 82, 114, 73, 105, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 1034, 896, 1151, 9, 32, 40, 41,
	65, 67, 68, 69, 72, 73, 75, 76,
	77, 78, 80, 82, 83, 84, 85, 97,
	99, 100, 101, 104, 105, 107, 108, 109,
	110, 112, 114, 115, 116, 117, 778, 827,
	1034, 1083, 48, 57, 78, 80, 110, 112,
	9, 32, 40, 41, 1034, 1083, 9, 32,
	40, 41, 65, 67, 68, 69, 72, 73,
	75, 76, 77, 78, 80, 82, 83, 84,
	85, 97, 99, 100, 101, 104, 105, 107,
	108, 109, 110, 112, 114, 115, 116, 117,
	1034, 1083, 48, 57, 9, 32, 40, 41,
	68, 72, 77, 83, 87, 100, 104, 109,
	115, 119, 1034, 1083, 48, 57, 9, 32,
	40, 41, 1034, 1083, 48, 57, 68, 72,
	77, 83, 87, 100, 104, 109, 115, 119,
	48, 57, 9, 32, 40, 41, 1034, 1083,
	48, 57, 1034, 896, 1151, 10, 73, 79,
	84, 105, 111, 116, 78, 110, 67, 99,
	76, 108, 85, 117, 68, 100, 69, 101,
	32, 59, 9, 10, 40, 41, 9, 32,
	40, 41, 1034, 1083, 9, 32, 40, 41,
	65, 67, 68, 69, 72, 73, 75, 76,
	77, 78, 80, 82, 83, 84, 85, 97,
	99, 100, 101, 104, 105, 107, 108, 109,
	110, 112, 114, 115, 116, 117, 1034, 1083,
	48, 57, 1034, 896, 1151, 9, 32, 40,
	41, 68, 72, 77, 83, 87, 100, 104,
	109, 115, 119, 1034, 1083, 48, 57, 9,
	32, 40, 41, 65, 67, 68, 69, 72,
	73, 75, 76, 77, 78, 80, 82, 83,
	84, 85, 97, 99, 100, 101, 104, 105,
	107, 108, 109, 110, 112, 114, 115, 116,
	117, 1034, 1083, 48, 57, 1034, 896, 1151,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	68, 72, 77, 83, 87, 100, 104, 109,
	115, 119, 48, 57, 9, 32, 40, 41,
	1034, 1083, 48, 57, 1034, 896, 1151, 9,
	32, 40, 41, 65, 70, 80, 97, 102,
	112, 2058, 2107, 2314, 2363, 2570, 2619, 9,
	32, 40, 41, 58, 65, 67, 68, 69,
	72, 73, 75, 76, 77, 78, 80, 82,
	83, 84, 85, 92, 97, 99, 100, 101,
	104, 105, 107, 108, 109, 110, 112, 114,
	115, 116, 117, 2058, 2107, 2314, 2363, 2570,
	2619, -128, 8, 11, 47, 48, 57, 60,
	127, 9, 32, 40, 41, 65, 70, 80,
	97, 102, 112, 1802, 1851, 2058, 2107, 2314,
	2363, 2570, 2619, 9, 32, 40, 41, 92,
	1802, 1851, 2058, 2107, 2314, 2363, 2570, 2619,
	-128, 8, 11, 58, 60, 127, 9, 32,
	40, 41, 65, 67, 68, 69, 72, 73,
	75, 76, 77, 78, 80, 82, 83, 84,
	85, 97, 99, 100, 101, 104, 105, 107,
	108, 109, 110, 112, 114, 115, 116, 117,
	778, 827, 1034, 1083, 48, 57, 778, 1034,
	640, 895, 896, 1151, 9, 32, 40, 41,
	778, 827, 1034, 1083, -128, 8, 11, 58,
	60, 127, 9, 32, 40, 41, 778, 827,
	1034, 1083, -128, 8, 11, 58, 60, 127,
	9, 32, 40, 41, 58, 65, 67, 68,
	69, 72, 73, 75, 76, 77, 78, 80,
	82, 83, 84, 85, 92, 97, 99, 100,
	101, 104, 105, 107, 108, 109, 110, 112,
	114, 115, 116, 117, 1802, 1851, 2058, 2107,
	2314, 2363, 2570, 2619, -128, 8, 11, 47,
	48, 57, 60, 127, 9, 32, 40, 41,
	65, 68, 69, 78, 97, 100, 101, 110,
	778, 827, 1034, 1083, 9, 32, 40, 41,
	72, 78, 83, 104, 110, 115, 778, 827,
	1034, 1083, 9, 32, 40, 41, 85, 117,
	778, 827, 1034, 1083, 9, 32, 40, 41,
	73, 105, 778, 827, 1034, 1083, 9, 32,
	40, 41, 78, 80, 110, 112, 778, 827,
	1034, 1083, 9, 32, 40, 41, 69, 88,
	101, 120, 778, 827, 1034, 1083, 9, 32,
	40, 41, 51, 54, 79, 80, 111, 112,
	778, 827, 1034, 1083, 9, 32, 40, 41,
	73, 88, 105, 120, 778, 827, 1034, 1083,
	9, 32, 40, 41, 65, 73, 83, 97,
	105, 115, 778, 827, 1034, 1083, 9, 32,
	40, 41, 84, 116, 778, 827, 1034, 1083,
	9, 32, 40, 41, 80, 82, 84, 112,
	114, 116, 778, 827, 1034, 1083, 9, 32,
	40, 41, 79, 80, 82, 83, 111, 112,
	114, 115, 778, 827, 1034, 1083, 9, 32,
	40, 41, 76, 88, 89, 108, 120, 121,
	778, 827, 1034, 1083, 9, 32, 40, 41,
	82, 114, 778, 827, 1034, 1083, 778, 1034,
	640, 895, 896, 1151, 9, 32, 40, 41,
	73, 79, 84, 105, 111, 116, 778, 827,
	1034, 1083, 82, 114, 73, 105, 71, 103,
	73, 105, 78, 110, 32, 59, 9, 10,
	40, 41, 84, 116, 76, 108, 32, 59,
	9, 10, 40, 41, 9, 32, 40, 41,
	778, 827, 1034, 1083, 9, 32, 40, 41,
	68, 72, 77, 83, 87, 100, 104, 109,
	115, 119, 778, 827, 1034, 1083, 48, 57,
	9, 32, 40, 41, 65, 67, 68, 69,
	72, 73, 75, 76, 77, 78, 80, 82,
	83, 84, 85, 97, 99, 100, 101, 104,
	105, 107, 108, 109, 110, 112, 114, 115,
	116, 117, 778, 827, 1034, 1083, 48, 57,
	778, 1034, 640, 895, 896, 1151, 9, 32,
	40, 41, 65, 70, 80, 97, 102, 112,
	1802, 1851, 2058, 2107, 2314, 2363, 2570, 2619,
	9, 32, 40, 41, 58, 65, 67, 68,
	69, 72, 73, 75, 76, 77, 78, 80,
	82, 83, 84, 85, 92, 97, 99, 100,
	101, 104, 105, 107, 108, 109, 110, 112,
	114, 115, 116, 117, 1802, 1851, 2058, 2107,
	2314, 2363, 2570, 2619, -128, 8, 11, 47,
	48, 57, 60, 127, 9, 32, 40, 41,
	65, 68, 69, 78, 97, 100, 101, 110,
	778, 827, 1034, 1083, 9, 32, 40, 41,
	72, 78, 83, 104, 110, 115, 778, 827,
	1034, 1083, 9, 32, 40, 41, 85, 117,
	778, 827, 1034, 1083, 9, 32, 40, 41,
	73, 105, 778, 827, 1034, 1083, 9, 32,
	40, 41, 78, 80, 110, 112, 778, 827,
	1034, 1083, 9, 32, 40, 41, 69, 88,
	101, 120, 778, 827, 1034, 1083, 9, 32,
	40, 41, 51, 54, 79, 80, 111, 112,
	778, 827, 1034, 1083, 9, 32, 40, 41,
	73, 88, 105, 120, 778, 827, 1034, 1083,
	9, 32, 40, 41, 65, 73, 83, 97,
	105, 115, 778, 827, 1034, 1083, 9, 32,
	40, 41, 84, 116, 778, 827, 1034, 1083,
	9, 32, 40, 41, 80, 82, 84, 112,
	114, 116, 778, 827, 1034, 1083, 9, 32,
	40, 41, 79, 80, 82, 83, 111, 112,
	114, 115, 778, 827, 1034, 1083, 9, 32,
	40, 41, 76, 88, 89, 108, 120, 121,
	778, 827, 1034, 1083, 9, 32, 40, 41,
	82, 114, 778, 827, 1034, 1083, 9, 32,
	35, 40, 41, 778, 827, 1034, 1083, -128,
	8, 11, 58, 60, 127, 9, 32, 40,
	41, 65, 67, 68, 69, 72, 73, 75,
	76, 77, 78, 80, 82, 83, 84, 85,
	97, 99, 100, 101, 104, 105, 107, 108,
	109, 110, 112, 114, 115, 116, 117, 778,
	827, 1034, 1083, 48, 57, 777, 778, 800,
	808, 809, 827, 1033, 1034, 1056, 1064, 1065,
	1083, 896, 1151, 777, 778, 800, 808, 809,
	827, 1033, 1034, 1056, 1064, 1065, 1083, 896,
	1151, 777, 778, 800, 808, 809, 827, 1033,
	1034, 1056, 1064, 1065, 1083, 640, 895, 896,
	1151, 777, 778, 800, 808, 809, 827, 1033,
	1034, 1056, 1064, 1065, 1083, 640, 895, 896,
	1151, 65, 97, 65, 97, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 83,
	115, 68, 100, 66, 98, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 76,
	108, 9, 32, 40, 41, 2058, 2107, 2314,
	2363, 2570, 2619, 778, 1034, 640, 895, 896,
	1151, 9, 32, 40, 41, 778, 827, 1034,
	1083, -128, 8, 11, 58, 60, 127, 9,
	32, 40, 41, 778, 827, 1034, 1083, -128,
	8, 11, 58, 60, 127, 777, 778, 800,
	808, 809, 827, 1033, 1034, 1056, 1064, 1065,
	1083, 640, 895, 896, 1151, 777, 778, 800,
	808, 809, 827, 1033, 1034, 1056, 1064, 1065,
	1083, 640, 895, 896, 1151, 777, 778, 800,
	808, 809, 827, 1033, 1034, 1056, 1064, 1065,
	1083, 640, 895, 896, 1151, 777, 778, 800,
	808, 809, 827, 1033, 1034, 1056, 1064, 1065,
	1083, 640, 895, 896, 1151, 1034, 896, 1151,
	9, 32, 40, 41, 58, 65, 67, 68,
	69, 72, 73, 75, 76, 77, 78, 80,
	82, 83, 84, 85, 92, 97, 99, 100,
	101, 104, 105, 107, 108, 109, 110, 112,
	114, 115, 116, 117, 1802, 1851, 2058, 2107,
	2314, 2363, 2570, 2619, -128, 8, 11, 47,
	48, 57, 60, 127, 777, 778, 800, 808,
	809, 827, 1033, 1034, 1056, 1064, 1065, 1083,
	896, 1151, 777, 778, 800, 808, 809, 827,
	1033, 1034, 1056, 1064, 1065, 1083, 896, 1151,
	9, 32, 40, 41, 65, 68, 69, 78,
	97, 100, 101, 110, 1034, 1083, 9, 32,
	40, 41, 72, 78, 83, 104, 110, 115,
	1034, 1083, 9, 32, 40, 41, 85, 117,
	1034, 1083, 9, 32, 40, 41, 73, 105,
	1034, 1083, 9, 32, 40, 41, 78, 80,
	110, 112, 1034, 1083, 9, 32, 40, 41,
	69, 88, 101, 120, 1034, 1083, 9, 32,
	40, 41, 51, 54, 79, 80, 111, 112,
	1034, 1083, 9, 32, 40, 41, 73, 88,
	105, 120, 1034, 1083, 9, 32, 40, 41,
	65, 73, 83, 97, 105, 115, 1034, 1083,
	9, 32, 40, 41, 84, 116, 1034, 1083,
	9, 32, 40, 41, 80, 82, 84, 112,
	114, 116, 1034, 1083, 9, 32, 40, 41,
	79, 80, 82, 83, 111, 112, 114, 115,
	1034, 1083, 9, 32, 40, 41, 76, 88,
	89, 108, 120, 121, 1034, 1083, 9, 32,
	40, 41, 82, 114, 1034, 1083, 778, 1034,
	640, 895, 896, 1151, 778, 1034, 640, 895,
	896, 1151, 9, 32, 40, 41, 78, 80,
	110, 112, 1034, 1083, 778, 1034, 640, 895,
	896, 1151, 10, 10, 42, 46, 64, 92,
	95, 45, 57, 65, 90, 97, 122, 32,
	42, 46, 59, 92, 95, 9, 10, 40,
	41, 45, 57, 65, 90, 97, 122, 32,
	42, 45, 59, 92, 95, 9, 10, 40,
	41, 47, 57, 65, 90, 97, 122, 48,
	57, 48, 57, 48, 57, 32, 42, 46,
	59, 92, 95, 9, 10, 40, 41, 45,
	57, 65, 90, 97, 122, 32, 59, 9,
	10, 40, 41, 32, 59, 9, 10, 40,
	41, 34, 92, 33, 58, 60, 126, 32,
	33, 59, 92, 9, 10, 35, 39, 40,
	41, 42, 126, 32, 47, 48, 57, 58,
	126, 48, 57, 48, 57, 32, 33, 59,
	92, 9, 10, 35, 39, 40, 41, 42,
	126, 9, 34, 92, 522, 32, 126, 32,
	59, 9, 10, 40, 41, 32, 47, 48,
	57, 58, 126, 48, 57, 48, 57, 9,
	34, 92, 522, 32, 126, 9, 32, 40,
	41, 1034, 1083, 9, 32, 40, 41, 1034,
	1083, 48, 57, 9, 32, 40, 41, 68,
	72, 77, 83, 87, 100, 104, 109, 115,
	119, 778, 827, 1034, 1083, 48, 57, 9,
	32, 40, 41, 778, 827, 1034, 1083, 10,
	9, 32, 40, 41, 778, 827, 1034, 1083,
	48, 57, 68, 72, 77, 83, 87, 100,
	104, 109, 115, 119, 48, 57, 9, 32,
	40, 41, 778, 827, 1034, 1083, 48, 57,
	1034, 896, 1151, 9, 32, 40, 41, 1034,
	1083, 9, 32, 40, 41, 42, 46, 92,
	95, 1034, 1083, 45, 57, 65, 90, 97,
	122, 42, 46, 92, 95, 45, 57, 65,
	90, 97, 122, 9, 32, 40, 41, 42,
	45, 92, 95, 778, 827, 1034, 1083, 47,
	57, 65, 90, 97, 122, 9, 32, 40,
	41, 778, 827, 1034, 1083, 10, 48, 57,
	48, 57, 48, 57, 42, 46, 92, 95,
	45, 57, 65, 90, 97, 122, 9, 32,
	40, 41, 778, 827, 1034, 1083, 1034, 896,
	1151, 9, 32, 40, 41, 1034, 1083, 9,
	32, 40, 41, 1034, 1083, -128, 8, 11,
	58, 60, 127, 9, 32, 40, 41, 778,
	827, 1034, 1083, 9, 32, 40, 41, 42,
	46, 92, 95, 778, 827, 1034, 1083, 45,
	57, 65, 90, 97, 122, 42, 46, 92,
	95, 45, 57, 65, 90, 97, 122, 9,
	32, 40, 41, 42, 45, 92, 95, 778,
	827, 1034, 1083, 47, 57, 65, 90, 97,
	122, 9, 32, 40, 41, 778, 827, 1034,
	1083, 10, 48, 57, 48, 57, 48, 57,
	42, 46, 92, 95, 45, 57, 65, 90,
	97, 122, 9, 32, 40, 41, 778, 827,
	1034, 1083, 778, 1034, 640, 895, 896, 1151,
	9, 32, 40, 41, 42, 46, 92, 95,
	1034, 1083, 45, 57, 65, 90, 97, 122,
	1034, 896, 1151, 1034, 896, 1151, 43, 47,
	57, 65, 90, 97, 122, 43, 47, 57,
	65, 90, 97, 122, 43, 61, 47, 57,
	65, 90, 97, 122, 43, 61, 47, 57,
	65, 90, 97, 122, 9, 32, 40, 41,
	43, 2058, 2107, 2314, 2363, 2570, 2619, 47,
	57, 65, 90, 97, 122, 1034, 896, 1151,
	61, 9, 32, 40, 41, 2058, 2107, 2314,
	2363, 2570, 2619, 9, 32, 40, 41, 65,
	67, 68, 69, 72, 73, 75, 76, 77,
	78, 80, 82, 83, 84, 85, 97, 99,
	100, 101, 104, 105, 107, 108, 109, 110,
	112, 114, 115, 116, 117, 2058, 2107, 2314,
	2363, 2570, 2619, 9, 32, 40, 41, 65,
	70, 80, 97, 102, 112, 2058, 2107, 2314,
	2363, 2570, 2619, 65, 97, 65, 97, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 1034, 896, 1151, 65, 68, 69, 78,
	97, 100, 101, 110, 65, 97, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	78, 83, 110, 115, 83, 115, 75, 107,
	69, 101, 89, 121, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	82, 114, 84, 116, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 65, 97,
	77, 109, 69, 101, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 72, 78,
	83, 104, 110, 115, 67, 99, 73, 105,
	68, 100, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 65, 83, 97, 115,
	77, 109, 69, 101, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 75, 107,
	69, 101, 89, 121, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	85, 117, 73, 105, 52, 54, 56, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 52, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 73, 105, 78, 110,
	70, 102, 79, 111, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 80, 112,
	83, 115, 69, 101, 67, 99, 75, 107,
	69, 101, 89, 121, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 69, 88,
	101, 120, 89, 121, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	51, 54, 79, 80, 111, 112, 50, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 52, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 67, 99, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 73, 88, 105, 120, 78, 110,
	70, 102, 79, 111, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	65, 73, 83, 97, 105, 115, 80, 112,
	84, 116, 82, 114, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 68, 100,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 9, 32, 40, 41, 69, 101,
	2058, 2107, 2314, 2363, 2570, 2619, 67, 99,
	9, 32, 40, 41, 51, 2058, 2107, 2314,
	2363, 2570, 2619, 9, 32, 40, 41, 80,
	112, 2058, 2107, 2314, 2363, 2570, 2619, 65,
	97, 82, 114, 65, 97, 77, 109, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 84, 116, 82, 114, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 80,
	82, 84, 112, 114, 116, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 83,
	115, 73, 105, 71, 103, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 79, 80, 82, 83, 111, 112, 114,
	115, 65, 97, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 70, 102, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 86, 118, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 72, 104, 70,
	102, 80, 112, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 76, 88, 89,
	108, 120, 121, 83, 115, 65, 97, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 84, 116, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 80, 112, 69,
	101, 48, 57, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 48, 57, 82,
	114, 73, 105, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 83, 115, 68,
	100, 66, 98, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 76, 108, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 9, 32, 40, 41, 1034, 1083, 9,
	32, 40, 41, 1034, 1083, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 65,
	70, 97, 102, 48, 57, 65, 70, 97,
	102, 9, 32, 40, 41, 2058, 2107, 2314,
	2363, 2570, 2619, 48, 57, 65, 70, 97,
	102, 1034, 896, 1151, 1034, 896, 1151, 1034,
	896, 1151, 9, 32, 40, 41, 1034, 1083,
	9, 32, 40, 41, 48, 1034, 1083, 49,
	57, 9, 32, 40, 41, 778, 827, 1034,
	1083, 48, 57, 9, 32, 40, 41, 1034,
	1083, 48, 57, 65, 70, 97, 102, 48,
	57, 65, 70, 97, 102, 9, 32, 40,
	41, 2058, 2107, 2314, 2363, 2570, 2619, 48,
	57, 65, 70, 97, 102, 1034, 896, 1151,
	1034, 896, 1151, 9, 32, 40, 41, 1034,
	1083, 48, 57, 1034, 896, 1151, 68, 69,
	73, 80, 82, 100, 101, 105, 112, 114,
	48, 57, 32, 59, 9, 10, 40, 41,
	48, 57, 72, 83, 104, 115, 32, 59,
	9, 10, 40, 41, 65, 97, 32, 45,
	59, 9, 10, 40, 41, 78, 110, 83,
	115, 69, 101, 67, 99, 51, 45, 83,
	115, 72, 104, 65, 97, 49, 32, 59,
	9, 10, 40, 41, 67, 68, 99, 100,
	67, 68, 99, 100, 45, 71, 103, 79,
	111, 83, 115, 84, 116, 32, 59, 9,
	10, 40, 41, 83, 115, 65, 97, 80,
	112, 50, 51, 53, 54, 83, 115, 72,
	104, 65, 97, 50, 53, 54, 32, 59,
	9, 10, 40, 41, 56, 52, 83, 115,
	72, 104, 65, 97, 51, 56, 52, 32,
	59, 9, 10, 40, 41, 50, 52, 53,
	53, 49, 57, 32, 59, 9, 10, 40,
	41, 52, 56, 32, 59, 9, 10, 40,
	41, 78, 110, 68, 100, 73, 105, 82,
	114, 69, 101, 67, 99, 84, 116, 32,
	59, 9, 10, 40, 41, 82, 114, 73,
	105, 86, 118, 65, 97, 84, 116, 69,
	101, 68, 79, 100, 111, 78, 110, 83,
	115, 32, 59, 9, 10, 40, 41, 73,
	105, 68, 100, 32, 59, 9, 10, 40,
	41, 83, 115, 65, 97, 77, 83, 109,
	115, 68, 100, 53, 32, 59, 9, 10,
	40, 41, 72, 104, 65, 97, 49, 50,
	53, 32, 45, 59, 9, 10, 40, 41,
	78, 110, 83, 115, 69, 101, 67, 99,
	51, 45, 83, 115, 72, 104, 65, 97,
	49, 32, 59, 9, 10, 40, 41, 53,
	54, 32, 59, 9, 10, 40, 41, 49,
	50, 32, 59, 9, 10, 40, 41, 65,
	73, 79, 80, 83, 85, 97, 105, 111,
	112, 115, 117, 48, 57, 32, 59, 9,
	10, 40, 41, 48, 57, 67, 99, 80,
	112, 75, 107, 73, 105, 88, 120, 32,
	59, 9, 10, 40, 41, 65, 80, 83,
	97, 112, 115, 67, 99, 80, 112, 75,
	107, 73, 105, 88, 120, 32, 59, 9,
	10, 40, 41, 71, 75, 103, 107, 80,
	112, 32, 59, 9, 10, 40, 41, 73,
	105, 88, 120, 32, 59, 9, 10, 40,
	41, 80, 112, 75, 107, 73, 105, 32,
	59, 9, 10, 40, 41, 73, 105, 68,
	100, 32, 59, 9, 10, 40, 41, 71,
	75, 103, 107, 80, 112, 32, 59, 9,
	10, 40, 41, 73, 105, 88, 120, 32,
	59, 9, 10, 40, 41, 80, 112, 75,
	107, 73, 105, 32, 59, 9, 10, 40,
	41, 82, 114, 73, 105, 32, 59, 9,
	10, 40, 41, 46, 48, 57, 32, 46,
	59, 9, 10, 40, 41, 48, 57, 42,
	92, 95, 45, 57, 64, 90, 97, 122,
	32, 59, 9, 10, 40, 41, 42, 92,
	95, 45, 57, 64, 90, 97, 122, 9,
	32, 40, 41, 1034, 1083, 9, 32, 40,
	41, 42, 92, 95, 1034, 1083, 45, 57,
	64, 90, 97, 122, 9, 32, 40, 41,
	1034, 1083, 9, 32, 40, 41, 1034, 1083,
	48, 57, 9, 32, 40, 41, 1034, 1083,
	48, 57, 9, 32, 40, 41, 1034, 1083,
	48, 57, 9, 32, 40, 41, 68, 72,
	77, 83, 87, 100, 104, 109, 115, 119,
	1034, 1083, 48, 57, 9, 32, 40, 41,
	1034, 1083, 48, 57, 9, 32, 40, 41,
	68, 72, 77, 83, 87, 100, 104, 109,
	115, 119, 1034, 1083, 48, 57, 9, 32,
	40, 41, 1034, 1083, 48, 57, 9, 32,
	40, 41, 68, 72, 77, 83, 87, 100,
	104, 109, 115, 119, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	32, 59, 68, 72, 77, 83, 87, 100,
	104, 109, 115, 119, 9, 10, 40, 41,
	48, 57, 32, 59, 9, 10, 40, 41,
	48, 57, 68, 72, 77, 83, 87, 100,
	104, 109, 115, 119, 48, 57, 32, 59,
	9, 10, 40, 41, 48, 57, 1034, 896,
	1151, 9, 32, 40, 41, 1034, 1083, 48,
	57, 68, 72, 77, 83, 87, 100, 104,
	109, 115, 119, 48, 57, 9, 32, 40,
	41, 1034, 1083, 48, 57, 1034, 896, 1151,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	68, 72, 77, 83, 87, 100, 104, 109,
	115, 119, 48, 57, 9, 32, 40, 41,
	1034, 1083, 48, 57, 1034, 896, 1151, 9,
	32, 40, 41, 1034, 1083, 48, 57, 68,
	72, 77, 83, 87, 100, 104, 109, 115,
	119, 48, 57, 9, 32, 40, 41, 1034,
	1083, 48, 57, 1034, 896, 1151, 1034, 896,
	1151, 1034, 896, 1151, 32, 59, 9, 10,
	40, 41, 9, 32, 40, 41, 1034, 1083,
	9, 32, 40, 41, 1034, 1083, -128, 8,
	11, 58, 60, 127, 32, 59, 9, 10,
	40, 41, 1034, 896, 1151, 42, 92, 95,
	45, 57, 64, 90, 97, 122, 9, 32,
	40, 41, 1034, 1083, 9, 32, 40, 41,
	42, 92, 95, 1034, 1083, 45, 57, 64,
	90, 97, 122, 32, 59, 9, 10, 40,
	41, 1034, 896, 1151, 48, 57, 9, 32,
	40, 41, 1034, 1083, 48, 57, 9, 32,
	40, 41, 42, 92, 95, 1034, 1083, 45,
	57, 64, 90, 97, 122, 32, 59, 9,
	10, 40, 41, 1034, 896, 1151, 32, 59,
	9, 10, 40, 41, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	-128, 8, 11, 58, 60, 127, 1034, 896,
	1151, 46, 48, 58, 65, 70, 97, 102,
	32, 46, 59, 9, 10, 40, 41, 48,
	58, 65, 70, 97, 102, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 9,
	32, 40, 41, 78, 83, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 78, 83, 1034,
	1083, 48, 57, 9, 32, 40, 41, 46,
	1034, 1083, 48, 57, 9, 32, 40, 41,
	78, 83, 1034, 1083, 9, 32, 40, 41,
	1034, 1083, 9, 32, 40, 41, 1034, 1083,
	48, 57, 9, 32, 40, 41, 1034, 1083,
	48, 57, 9, 32, 40, 41, 69, 87,
	1034, 1083, 48, 57, 9, 32, 40, 41,
	1034, 1083, 48, 57, 9, 32, 40, 41,
	69, 87, 1034, 1083, 48, 57, 9, 32,
	40, 41, 46, 1034, 1083, 48, 57, 9,
	32, 40, 41, 69, 87, 1034, 1083, 9,
	32, 40, 41, 1034, 1083, 9, 32, 40,
	41, 45, 1034, 1083, 48, 57, 48, 57,
	9, 32, 40, 41, 46, 109, 2058, 2107,
	2314, 2363, 2570, 2619, 48, 57, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	48, 57, 9, 32, 40, 41, 46, 109,
	2058, 2107, 2314, 2363, 2570, 2619, 48, 57,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 48, 57, 9, 32, 40, 41,
	46, 109, 2058, 2107, 2314, 2363, 2570, 2619,
	48, 57, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 48, 57, 9, 32,
	40, 41, 46, 109, 2058, 2107, 2314, 2363,
	2570, 2619, 48, 57, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 1034, 896,
	1151, 9, 32, 40, 41, 109, 2058, 2107,
	2314, 2363, 2570, 2619, 48, 57, 9, 32,
	40, 41, 109, 2058, 2107, 2314, 2363, 2570,
	2619, 48, 57, 1034, 896, 1151, 9, 32,
	40, 41, 109, 2058, 2107, 2314, 2363, 2570,
	2619, 48, 57, 9, 32, 40, 41, 109,
	2058, 2107, 2314, 2363, 2570, 2619, 48, 57,
	9, 32, 40, 41, 2058, 2107, 2314, 2363,
	2570, 2619, 1034, 896, 1151, 9, 32, 40,
	41, 109, 2058, 2107, 2314, 2363, 2570, 2619,
	48, 57, 9, 32, 40, 41, 109, 2058,
	2107, 2314, 2363, 2570, 2619, 48, 57, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 1034, 896, 1151, 9, 32, 40, 41,
	109, 2058, 2107, 2314, 2363, 2570, 2619, 48,
	57, 9, 32, 40, 41, 109, 2058, 2107,
	2314, 2363, 2570, 2619, 48, 57, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	1034, 896, 1151, 9, 32, 40, 41, 1034,
	1083, 1034, 896, 1151, 9, 32, 40, 41,
	1034, 1083, 48, 57, 9, 32, 40, 41,
	1034, 1083, 48, 57, 1034, 896, 1151, 1034,
	896, 1151, 1034, 896, 1151, 9, 32, 40,
	41, 1034, 1083, 1034, 896, 1151, 9, 32,
	40, 41, 1034, 1083, 48, 57, 9, 32,
	40, 41, 1034, 1083, 48, 57, 1034, 896,
	1151, 1034, 896, 1151, 48, 57, 9, 32,
	40, 41, 1034, 1083, 48, 57, 9, 32,
	40, 41, 1034, 1083, 48, 57, 9, 32,
	40, 41, 1034, 1083, 48, 57, 9, 32,
	40, 41, 1034, 1083, 48, 57, 9, 32,
	40, 41, 1034, 1083, 48, 57, 9, 32,
	40, 41, 42, 92, 95, 1034, 1083, 45,
	57, 64, 90, 97, 122, 32, 59, 9,
	10, 40, 41, 1034, 896, 1151, 1034, 896,
	1151, 1034, 896, 1151, 48, 57, 9, 32,
	40, 41, 1034, 1083, 48, 57, 9, 32,
	40, 41, 1034, 1083, 48, 57, 9, 32,
	40, 41, 1034, 1083, 48, 57, 9, 32,
	40, 41, 1034, 1083, -128, 8, 11, 58,
	60, 127, 9, 32, 40, 41, 1034, 1083,
	9, 32, 40, 41, 1034, 1083, -128, 8,
	11, 58, 60, 127, 9, 32, 40, 41,
	1034, 1083, 9, 32, 40, 41, 1034, 1083,
	-128, 8, 11, 58, 60, 127, 9, 32,
	40, 41, 1034, 1083, 9, 32, 40, 41,
	42, 92, 95, 1034, 1083, 45, 57, 64,
	90, 97, 122, 32, 59, 9, 10, 40,
	41, 1034, 896, 1151, 1034, 896, 1151, 1034,
	896, 1151, 1034, 896, 1151, 1034, 896, 1151,
	48, 57, 65, 90, 97, 122, 9, 32,
	40, 41, 1034, 1083, 9, 32, 40, 41,
	1034, 1083, 48, 57, 9, 32, 40, 41,
	1034, 1083, 48, 57, 9, 32, 40, 41,
	1034, 1083, 48, 57, 65, 90, 97, 122,
	9, 32, 40, 41, 1034, 1083, 9, 32,
	40, 41, 43, 1034, 1083, 47, 57, 65,
	90, 97, 122, 1546, 1595, 1034, 896, 1151,
	1034, 896, 1151, 1034, 896, 1151, 9, 32,
	33, 40, 41, 49, 50, 2058, 2107, 2314,
	2363, 2570, 2619, 49, 50, 58, 46, 48,
	57, 47, 46, 57, 48, 57, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	48, 57, 1034, 896, 1151, 58, 46, 48,
	58, 65, 70, 97, 102, 47, 46, 58,
	65, 70, 97, 102, 48, 57, 9, 32,
	40, 41, 1034, 1083, 48, 57, 9, 32,
	40, 41, 1034, 1083, 48, 57, 65, 90,
	97, 122, 9, 32, 40, 41, 1034, 1083,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	65, 70, 97, 102, 48, 57, 65, 70,
	97, 102, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 48, 57, 65, 70,
	97, 102, 1034, 896, 1151, 1034, 896, 1151,
	1034, 896, 1151, 1034, 896, 1151, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	65, 70, 97, 102, 48, 57, 65, 70,
	97, 102, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 48, 57, 65, 70,
	97, 102, 1034, 896, 1151, 1034, 896, 1151,
	1034, 896, 1151, 48, 57, 9, 32, 40,
	41, 1034, 1083, 48, 57, 9, 32, 40,
	41, 48, 49, 50, 51, 1034, 1083, 9,
	32, 40, 41, 1034, 1083, 9, 32, 40,
	41, 1034, 1083, 48, 57, 9, 32, 40,
	41, 1034, 1083, 48, 57, 9, 32, 40,
	41, 46, 1034, 1083, 6153, 6176, 6184, 6185,
	6409, 6432, 6440, 6441, 6665, 6688, 6696, 6697,
	9482, 9531, 9738, 9787, 10250, 10299, 10506, 10555,
	10762, 10811, 11274, 11323, 11530, 11579, 11786, 11835,
	12298, 12347, 12554, 12603, 12810, 12859, 3081, 3104,
	3112, 3113, 3115, 4106, 4155, 3119, 3129, 3137,
	3162, 3169, 3194, 1546, 1595, 4106, 3968, 4223,
	4617, 4640, 4648, 4649, 13578, 13627, 13834, 13883,
	14346, 14395, 14602, 14651, 14858, 14907, 5642, 5504,
	5759, 3115, 6153, 6176, 6184, 6185, 6409, 6432,
	6440, 6441, 6665, 6688, 6696, 6697, 9482, 9531,
	9738, 9787, 10250, 10299, 10506, 10555, 10762, 10811,
	11274, 11323, 11530, 11579, 11786, 11835, 12298, 12347,
	12554, 12603, 12810, 12859, 3119, 3129, 3137, 3162,
	3169, 3194, 7690, 8202, 8714, 7552, 7807, 8064,
	8319, 8576, 8831, 1034, 896, 1151, 1034, 896,
	1151, 9, 32, 40, 41, 1034, 1083, 9,
	32, 40, 41, 1034, 1083, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 9,
	32, 40, 41, 46, 1034, 1083, 48, 57,
	46, 6153, 6176, 6184, 6185, 6409, 6432, 6440,
	6441, 6665, 6688, 6696, 6697, 9482, 9531, 9738,
	9787, 10250, 10299, 10506, 10555, 10762, 10811, 11274,
	11323, 11530, 11579, 11786, 11835, 12298, 12347, 12554,
	12603, 12810, 12859, 48, 57, 1034, 896, 1151,
	1034, 896, 1151, 9, 32, 40, 41, 1034,
	1083, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 46, 1034, 1083,
	48, 58, 65, 70, 97, 102, 46, 6153,
	6176, 6184, 6185, 6409, 6432, 6440, 6441, 6665,
	6688, 6696, 6697, 9482, 9531, 9738, 9787, 10250,
	10299, 10506, 10555, 10762, 10811, 11274, 11323, 11530,
	11579, 11786, 11835, 12298, 12347, 12554, 12603, 12810,
	12859, 48, 58, 65, 70, 97, 102, 1034,
	896, 1151, 1034, 896, 1151, 9, 32, 40,
	41, 1034, 1083, 9, 32, 40, 41, 1034,
	1083, 48, 57, 9, 32, 40, 41, 1034,
	1083, 48, 57, 9, 32, 40, 41, 42,
	92, 95, 1034, 1083, 45, 57, 64, 90,
	97, 122, 6153, 6176, 6184, 6185, 6409, 6432,
	6440, 6441, 6665, 6688, 6696, 6697, 9482, 9531,
	9738, 9787, 10250, 10299, 10506, 10555, 10762, 10811,
	11274, 11323, 11530, 11579, 11786, 11835, 12298, 12347,
	12554, 12603, 12810, 12859, 1034, 896, 1151, 1034,
	896, 1151, 1034, 896, 1151, 65, 67, 68,
	69, 72, 73, 75, 76, 77, 78, 80,
	82, 83, 84, 85, 97, 99, 100, 101,
	104, 105, 107, 108, 109, 110, 112, 114,
	115, 116, 117, 9, 32, 40, 41, 65,
	70, 80, 97, 102, 112, 1034, 1083, 9,
	32, 40, 41, 1034, 1083, 48, 57, 65,
	90, 97, 122, 9, 32, 40, 41, 1034,
	1083, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 1034, 1083, 48,
	57, 9, 32, 40, 41, 42, 92, 95,
	1034, 1083, 45, 57, 64, 90, 97, 122,
	9, 32, 40, 41, 1034, 1083, 9, 32,
	40, 41, 43, 1034, 1083, 47, 57, 65,
	90, 97, 122, 1546, 1595, 1034, 896, 1151,
	1034, 896, 1151, 1034, 896, 1151, 1034, 896,
	1151, 1034, 896, 1151, 1034, 896, 1151, 1034,
	896, 1151, 1034, 896, 1151, 65, 97, 65,
	97, 9, 32, 40, 41, 1034, 1083, 83,
	115, 68, 100, 66, 98, 9, 32, 40,
	41, 1034, 1083, 76, 108, 9, 32, 40,
	41, 1034, 1083, 65, 68, 69, 78, 97,
	100, 101, 110, 65, 97, 9, 32, 40,
	41, 1034, 1083, 78, 83, 110, 115, 83,
	115, 75, 107, 69, 101, 89, 121, 9,
	32, 40, 41, 1034, 1083, 9, 32, 40,
	41, 1034, 1083, 82, 114, 84, 116, 9,
	32, 40, 41, 1034, 1083, 65, 97, 77,
	109, 69, 101, 9, 32, 40, 41, 1034,
	1083, 72, 78, 83, 104, 110, 115, 67,
	99, 73, 105, 68, 100, 9, 32, 40,
	41, 1034, 1083, 65, 83, 97, 115, 77,
	109, 69, 101, 9, 32, 40, 41, 1034,
	1083, 75, 107, 69, 101, 89, 121, 9,
	32, 40, 41, 1034, 1083, 9, 32, 40,
	41, 1034, 1083, 85, 117, 73, 105, 52,
	54, 56, 9, 32, 40, 41, 1034, 1083,
	52, 9, 32, 40, 41, 1034, 1083, 73,
	105, 78, 110, 70, 102, 79, 111, 9,
	32, 40, 41, 1034, 1083, 80, 112, 83,
	115, 69, 101, 67, 99, 75, 107, 69,
	101, 89, 121, 9, 32, 40, 41, 1034,
	1083, 69, 88, 101, 120, 89, 121, 9,
	32, 40, 41, 1034, 1083, 9, 32, 40,
	41, 1034, 1083, 51, 54, 79, 80, 111,
	112, 50, 9, 32, 40, 41, 1034, 1083,
	52, 9, 32, 40, 41, 1034, 1083, 67,
	99, 9, 32, 40, 41, 1034, 1083, 9,
	32, 40, 41, 1034, 1083, 73, 88, 105,
	120, 78, 110, 70, 102, 79, 111, 9,
	32, 40, 41, 1034, 1083, 9, 32, 40,
	41, 1034, 1083, 65, 73, 83, 97, 105,
	115, 80, 112, 84, 116, 82, 114, 9,
	32, 40, 41, 1034, 1083, 68, 100, 9,
	32, 40, 41, 1034, 1083, 9, 32, 40,
	41, 69, 101, 1034, 1083, 67, 99, 9,
	32, 40, 41, 51, 1034, 1083, 9, 32,
	40, 41, 80, 112, 1034, 1083, 65, 97,
	82, 114, 65, 97, 77, 109, 9, 32,
	40, 41, 1034, 1083, 84, 116, 82, 114,
	9, 32, 40, 41, 1034, 1083, 80, 82,
	84, 112, 114, 116, 9, 32, 40, 41,
	1034, 1083, 83, 115, 73, 105, 71, 103,
	9, 32, 40, 41, 1034, 1083, 9, 32,
	40, 41, 1034, 1083, 79, 80, 82, 83,
	111, 112, 114, 115, 65, 97, 9, 32,
	40, 41, 1034, 1083, 70, 102, 9, 32,
	40, 41, 1034, 1083, 86, 118, 9, 32,
	40, 41, 1034, 1083, 72, 104, 70, 102,
	80, 112, 9, 32, 40, 41, 1034, 1083,
	76, 88, 89, 108, 120, 121, 83, 115,
	65, 97, 9, 32, 40, 41, 1034, 1083,
	84, 116, 9, 32, 40, 41, 1034, 1083,
	80, 112, 69, 101, 48, 57, 9, 32,
	40, 41, 1034, 1083, 48, 57, 82, 114,
	73, 105, 9, 32, 40, 41, 1034, 1083,
	42, 92, 95, 45, 57, 64, 90, 97,
	122, 32, 59, 9, 10, 40, 41, 32,
	59, 9, 10, 40, 41, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 65,
	90, 97, 122, 9, 32, 40, 41, 1034,
	1083, 9, 32, 40, 41, 43, 1034, 1083,
	47, 57, 65, 90, 97, 122, 1546, 1595,
	1034, 896, 1151, 1034, 896, 1151, 1034, 896,
	1151, 43, 47, 57, 65, 90, 97, 122,
	1546, 1595, 48, 57, 9, 32, 40, 41,
	1034, 1083, 48, 57, 9, 32, 40, 41,
	1034, 1083, 48, 57, 9, 32, 40, 41,
	1034, 1083, 48, 57, 9, 32, 40, 41,
	1034, 1083, 48, 57, 9, 32, 40, 41,
	1034, 1083, 48, 57, 9, 32, 40, 41,
	45, 1034, 1083, 48, 57, 65, 70, 97,
	102, 9, 32, 40, 41, 1034, 1083, 9,
	32, 40, 41, 1034, 1083, 48, 57, 65,
	86, 97, 118, 48, 57, 65, 86, 97,
	118, 61, 48, 57, 65, 86, 97, 118,
	48, 57, 65, 86, 97, 118, 61, 48,
	57, 65, 86, 97, 118, 61, 48, 57,
	65, 86, 97, 118, 48, 57, 65, 86,
	97, 118, 61, 48, 57, 65, 86, 97,
	118, 32, 59, 9, 10, 40, 41, 48,
	57, 65, 86, 97, 118, 32, 59, 9,
	10, 40, 41, 61, 61, 61, 61, 61,
	1034, 896, 1151, 48, 57, 65, 70, 97,
	102, 9, 32, 40, 41, 1034, 1083, 48,
	57, 65, 70, 97, 102, 1034, 896, 1151,
	1034, 896, 1151, 1034, 896, 1151, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 45, 1034, 1083, 48,
	57, 65, 70, 97, 102, 32, 59, 9,
	10, 40, 41, 48, 57, 65, 70, 97,
	102, 32, 59, 9, 10, 40, 41, 48,
	57, 65, 70, 97, 102, 1034, 896, 1151,
	1034, 896, 1151, 1034, 896, 1151, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	65, 70, 97, 102, 48, 57, 65, 70,
	97, 102, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 48, 57, 65, 70,
	97, 102, 1034, 896, 1151, 1034, 896, 1151,
	1034, 896, 1151, 1034, 896, 1151, 48, 57,
	9, 32, 40, 41, 1034, 1083, 48, 57,
	9, 32, 40, 41, 46, 1034, 1083, 48,
	57, 32, 46, 59, 9, 10, 40, 41,
	48, 57, 1034, 896, 1151, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 9,
	32, 40, 41, 1034, 1083, 48, 57, 65,
	70, 97, 102, 48, 57, 65, 70, 97,
	102, 48, 57, 65, 70, 97, 102, 48,
	57, 65, 70, 97, 102, 58, 48, 57,
	65, 70, 97, 102, 48, 57, 65, 70,
	97, 102, 48, 57, 65, 70, 97, 102,
	48, 57, 65, 70, 97, 102, 32, 58,
	59, 9, 10, 40, 41, 1034, 896, 1151,
	48, 57, 65, 70, 97, 102, 48, 57,
	65, 70, 97, 102, 45, 48, 57, 65,
	70, 97, 102, 48, 57, 65, 70, 97,
	102, 32, 45, 59, 9, 10, 40, 41,
	48, 57, 65, 70, 97, 102, 48, 57,
	65, 70, 97, 102, 45, 48, 57, 65,
	70, 97, 102, 48, 57, 65, 70, 97,
	102, 32, 45, 59, 9, 10, 40, 41,
	48, 57, 9, 32, 40, 41, 1034, 1083,
	48, 57, 9, 32, 40, 41, 1034, 1083,
	48, 57, 9, 32, 40, 41, 1034, 1083,
	48, 57, 9, 32, 40, 41, 1034, 1083,
	-128, 8, 11, 58, 60, 127, 32, 59,
	9, 10, 40, 41, 1034, 896, 1151, 1034,
	896, 1151, 48, 57, 9, 32, 40, 41,
	1034, 1083, 48, 57, 9, 32, 40, 41,
	1034, 1083, -128, 8, 11, 58, 60, 127,
	9, 32, 40, 41, 1034, 1083, 9, 32,
	40, 41, 1034, 1083, -128, 8, 11, 58,
	60, 127, 32, 59, 9, 10, 40, 41,
	1034, 896, 1151, 1034, 896, 1151, 9, 32,
	36, 40, 41, 42, 92, 95, 778, 827,
	1034, 1083, 45, 57, 64, 90, 97, 122,
	9, 32, 36, 40, 41, 42, 58, 92,
	95, 1802, 1851, 2058, 2107, 2314, 2363, 2570,
	2619, -128, 8, 11, 44, 45, 57, 60,
	63, 64, 90, 91, 96, 97, 122, 123,
	127, 9, 32, 36, 40, 41, 42, 65,
	67, 68, 69, 72, 73, 75, 76, 77,
	78, 80, 82, 83, 84, 85, 92, 95,
	97, 99, 100, 101, 104, 105, 107, 108,
	109, 110, 112, 114, 115, 116, 117, 778,
	827, 1034, 1083, 45, 57, 64, 90, 98,
	122, 9, 32, 36, 40, 41, 42, 65,
	67, 68, 69, 72, 73, 75, 76, 77,
	78, 80, 82, 83, 84, 85, 92, 95,
	97, 99, 100, 101, 104, 105, 107, 108,
	109, 110, 112, 114, 115, 116, 117, 778,
	827, 1034, 1083, 45, 47, 48, 57, 64,
	90, 98, 122, 9, 32, 36, 40, 41,
	42, 92, 95, 778, 827, 1034, 1083, 45,
	57, 64, 90, 97, 122, 9, 32, 36,
	40, 41, 42, 65, 67, 68, 69, 72,
	73, 75, 76, 77, 78, 80, 82, 83,
	84, 85, 92, 95, 97, 99, 100, 101,
	104, 105, 107, 108, 109, 110, 112, 114,
	115, 116, 117, 778, 827, 1034, 1083, 45,
	47, 48, 57, 64, 90, 98, 122, 9,
	32, 36, 40, 41, 42, 92, 95, 778,
	827, 1034, 1083, 45, 57, 64, 90, 97,
	122, 9, 32, 36, 40, 41, 42, 58,
	92, 95, 1802, 1851, 2058, 2107, 2314, 2363,
	2570, 2619, -128, 8, 11, 44, 45, 57,
	60, 63, 64, 90, 91, 96, 97, 122,
	123, 127, 9, 32, 36, 40, 41, 42,
	58, 65, 67, 68, 69, 72, 73, 75,
	76, 77, 78, 80, 82, 83, 84, 85,
	92, 95, 97, 99, 100, 101, 104, 105,
	107, 108, 109, 110, 112, 114, 115, 116,
	117, 1802, 1851, 2058, 2107, 2314, 2363, 2570,
	2619, -128, 8, 11, 44, 45, 47, 48,
	57, 60, 63, 64, 90, 91, 96, 98,
	122, 123, 127, 9, 32, 36, 40, 41,
	42, 58, 65, 67, 68, 69, 72, 73,
	75, 76, 77, 78, 80, 82, 83, 84,
	85, 92, 95, 97, 99, 100, 101, 104,
	105, 107, 108, 109, 110, 112, 114, 115,
	116, 117, 1802, 1851, 2058, 2107, 2314, 2363,
	2570, 2619, -128, 8, 11, 44, 45, 47,
	48, 57, 60, 63, 64, 90, 91, 96,
	98, 122, 123, 127, 32, 33, 59, 92,
	9, 10, 35, 39, 40, 41, 42, 126,
	9, 32, 40, 41, 42, 46, 92, 95,
	1034, 1083, 45, 57, 65, 90, 97, 122,
	9, 32, 40, 41, 43, 2058, 2107, 2314,
	2363, 2570, 2619, 47, 57, 65, 90, 97,
	122, 1034, 896, 1151, 9, 32, 40, 41,
	65, 67, 68, 69, 72, 73, 75, 76,
	77, 78, 80, 82, 83, 84, 85, 97,
	99, 100, 101, 104, 105, 107, 108, 109,
	110, 112, 114, 115, 116, 117, 2058, 2107,
	2314, 2363, 2570, 2619, 1034, 896, 1151, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 48, 57, 65, 70, 97, 102, 1034,
	896, 1151, 9, 32, 40, 41, 1034, 1083,
	48, 57, 65, 70, 97, 102, 9, 32,
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619,
	48, 57, 65, 70, 97, 102, 1034, 896,
	1151, 1034, 896, 1151, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, -128, 8,
	11, 58, 60, 127, 1034, 896, 1151, 9,
	32, 40, 41, 2058, 2107, 2314, 2363, 2570,
	2619, 1034, 896, 1151, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 48, 57,
	1034, 896, 1151, 9, 32, 40, 41, 2058,
	2107, 2314, 2363, 2570, 2619, 48, 57, 1034,
	896, 1151, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 48, 57, 1034, 896,
	1151, 9, 32, 33, 40, 41, 49, 50,
	2058, 2107, 2314, 2363, 2570, 2619, 1034, 896,
	1151, 9, 32, 40, 41, 2058, 2107, 2314,
	2363, 2570, 2619, 48, 57, 65, 70, 97,
	102, 1034, 896, 1151, 9, 32, 40, 41,
	2058, 2107, 2314, 2363, 2570, 2619, 48, 57,
	65, 70, 97, 102, 1034, 896, 1151, 4617,
	4640, 4648, 4649, 13578, 13627, 13834, 13883, 14346,
	14395, 14602, 14651, 14858, 14907, 5642, 5504, 5759,
	3081, 3104, 3112, 3113, 3115, 4106, 4155, 3119,
	3129, 3137, 3162, 3169, 3194, 4106, 3968, 4223,
	3115, 6153, 6176, 6184, 6185, 6409, 6432, 6440,
	6441, 6665, 6688, 6696, 6697, 9482, 9531, 9738,
	9787, 10250, 10299, 10506, 10555, 10762, 10811, 11274,
	11323, 11530, 11579, 11786, 11835, 12298, 12347, 12554,
	12603, 12810, 12859, 3119, 3129, 3137, 3162, 3169,
	3194, 7690, 8202, 8714, 7552, 7807, 8064, 8319,
	8576, 8831, 9, 32, 40, 41, 2058, 2107,
	2314, 2363, 2570, 2619, 48, 57, 65, 70,
	97, 102, 1034, 896, 1151, 0
};

static const char _zone_scanner_single_lengths[] = {
	0, 38, 16, 36, 16, 11, 8, 8,
	1, 1, 1, 13, 13, 2, 44, 18,
	38, 8, 2, 10, 12, 12, 4, 2,
	2, 2, 2, 10, 10, 2, 2, 10,
	2, 2, 2, 10, 6, 2, 2, 2,
	10, 4, 2, 2, 10, 2, 2, 2,
	10, 10, 2, 2, 2, 1, 10, 1,
	10, 2, 2, 2, 2, 10, 4, 6,
	36, 2, 2, 2, 2, 2, 2, 2,
	10, 4, 2, 10, 10, 6, 1, 10,
	1, 10, 2, 10, 10, 4, 2, 2,
	2, 10, 10, 6, 2, 2, 2, 10,
	2, 10, 12, 2, 11, 12, 2, 2,
	2, 2, 10, 2, 2, 10, 6, 10,
	2, 2, 2, 10, 10, 8, 2, 10,
	2, 10, 2, 10, 2, 2, 2, 10,
	6, 2, 2, 10, 2, 10, 2, 2,
	0, 10, 2, 2, 10, 1, 38, 4,
	6, 36, 16, 6, 10, 6, 1, 1,
	6, 2, 2, 2, 2, 2, 2, 2,
	6, 36, 1, 16, 36, 1, 6, 10,
	6, 1, 16, 42, 18, 13, 38, 2,
	8, 8, 44, 16, 14, 10, 10, 12,
	12, 14, 12, 14, 10, 14, 16, 14,
	10, 2, 14, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 8, 18, 38, 2,
	18, 44, 16, 14, 10, 10, 12, 12,
	14, 12, 14, 10, 14, 16, 14, 10,
	9, 38, 12, 12, 12, 12, 2, 2,
	10, 2, 2, 2, 10, 2, 10, 2,
	8, 8, 12, 12, 12, 12, 1, 44,
	12, 12, 14, 12, 8, 8, 10, 10,
	12, 10, 12, 8, 12, 14, 12, 8,
	2, 2, 10, 2, 1, 1, 5, 6,
	6, 0, 0, 0, 6, 2, 2, 2,
	4, 0, 0, 0, 4, 4, 2, 0,
	0, 0, 4, 6, 6, 18, 8, 1,
	8, 10, 8, 1, 6, 10, 4, 12,
	8, 1, 0, 0, 0, 4, 8, 1,
	6, 6, 8, 12, 4, 12, 8, 1,
	0, 0, 0, 4, 8, 2, 10, 1,
	1, 1, 1, 2, 2, 11, 1, 1,
	10, 40, 16, 2, 2, 10, 1, 8,
	2, 10, 4, 2, 2, 2, 2, 10,
	10, 2, 2, 10, 2, 2, 2, 10,
	6, 2, 2, 2, 10, 4, 2, 2,
	10, 2, 2, 2, 10, 10, 2, 2,
	2, 1, 10, 1, 10, 2, 2, 2,
	2, 10, 2, 2, 2, 2, 2, 2,
	2, 10, 4, 2, 10, 10, 6, 1,
	10, 1, 10, 2, 10, 10, 4, 2,
	2, 2, 10, 10, 6, 2, 2, 2,
	10, 2, 10, 12, 2, 11, 12, 2,
	2, 2, 2, 10, 2, 2, 10, 6,
	10, 2, 2, 2, 10, 10, 8, 2,
	10, 2, 10, 2, 10, 2, 2, 2,
	10, 6, 2, 2, 10, 2, 10, 2,
	2, 0, 10, 2, 2, 10, 2, 2,
	2, 10, 2, 10, 6, 6, 6, 6,
	0, 10, 1, 1, 1, 6, 7, 8,
	6, 0, 10, 1, 1, 6, 1, 10,
	2, 4, 2, 2, 3, 2, 2, 2,
	2, 1, 1, 2, 2, 2, 1, 2,
	4, 4, 1, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 2,
	2, 1, 1, 1, 2, 1, 1, 2,
	2, 2, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 2, 1, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 4, 2, 2,
	2, 2, 2, 2, 2, 2, 4, 2,
	1, 2, 2, 2, 3, 3, 2, 2,
	2, 2, 1, 1, 2, 2, 2, 1,
	2, 1, 1, 2, 1, 1, 2, 12,
	2, 2, 2, 2, 2, 2, 2, 6,
	2, 2, 2, 2, 2, 2, 4, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2,
	1, 3, 3, 2, 3, 6, 9, 6,
	6, 6, 6, 16, 6, 16, 6, 16,
	6, 12, 2, 10, 2, 1, 6, 10,
	6, 1, 6, 10, 6, 1, 6, 10,
	6, 1, 1, 1, 2, 6, 6, 2,
	1, 3, 6, 9, 2, 1, 0, 6,
	9, 2, 1, 2, 10, 10, 1, 1,
	3, 0, 6, 8, 6, 8, 7, 8,
	6, 6, 6, 8, 6, 8, 7, 8,
	6, 7, 0, 12, 10, 12, 10, 12,
	10, 12, 10, 1, 11, 11, 1, 11,
	11, 10, 1, 11, 11, 10, 1, 11,
	11, 10, 1, 6, 1, 6, 6, 1,
	1, 1, 6, 1, 6, 6, 1, 1,
	0, 6, 6, 6, 6, 6, 9, 2,
	1, 1, 1, 0, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 9, 2, 1,
	1, 1, 1, 1, 0, 6, 6, 6,
	6, 6, 7, 2, 1, 1, 1, 13,
	2, 1, 1, 1, 0, 10, 1, 1,
	1, 1, 0, 6, 6, 6, 6, 6,
	6, 0, 10, 1, 1, 1, 1, 0,
	6, 6, 6, 6, 0, 10, 1, 1,
	1, 0, 6, 10, 6, 6, 6, 7,
	34, 7, 2, 1, 14, 1, 35, 3,
	1, 1, 6, 6, 6, 7, 35, 1,
	1, 6, 6, 6, 7, 35, 1, 1,
	6, 6, 6, 9, 34, 1, 1, 1,
	30, 12, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 9, 6,
	7, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 6, 2, 2, 2,
	6, 2, 6, 8, 2, 6, 4, 2,
	2, 2, 2, 6, 6, 2, 2, 6,
	2, 2, 2, 6, 6, 2, 2, 2,
	6, 4, 2, 2, 6, 2, 2, 2,
	6, 6, 2, 2, 2, 1, 6, 1,
	6, 2, 2, 2, 2, 6, 2, 2,
	2, 2, 2, 2, 2, 6, 4, 2,
	6, 6, 6, 1, 6, 1, 6, 2,
	6, 6, 4, 2, 2, 2, 6, 6,
	6, 2, 2, 2, 6, 2, 6, 8,
	2, 7, 8, 2, 2, 2, 2, 6,
	2, 2, 6, 6, 6, 2, 2, 2,
	6, 6, 8, 2, 6, 2, 6, 2,
	6, 2, 2, 2, 6, 6, 2, 2,
	6, 2, 6, 2, 2, 0, 6, 2,
	2, 6, 3, 2, 2, 0, 6, 6,
	6, 6, 6, 7, 2, 1, 1, 1,
	1, 2, 0, 6, 6, 6, 6, 6,
	7, 6, 6, 0, 1, 0, 1, 1,
	0, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 0, 6, 1, 1, 1, 0,
	6, 6, 6, 6, 6, 7, 2, 0,
	2, 1, 1, 1, 0, 6, 6, 6,
	6, 6, 6, 0, 10, 1, 1, 1,
	1, 0, 6, 7, 3, 1, 0, 6,
	6, 0, 0, 0, 1, 0, 0, 0,
	0, 3, 1, 0, 0, 1, 0, 0,
	3, 0, 0, 1, 0, 0, 3, 0,
	6, 6, 6, 6, 2, 1, 1, 0,
	6, 6, 6, 6, 2, 1, 1, 12,
	17, 42, 42, 12, 42, 12, 17, 47,
	47, 0, 0, 0, 4, 0, 0, 0,
	10, 0, 11, 1, 0, 40, 1, 0,
	10, 1, 6, 0, 10, 1, 1, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	10, 1, 0, 0, 10, 1, 10, 1,
	10, 1, 10, 1, 0, 0, 0, 0,
	13, 1, 0, 10, 1, 0, 10, 1,
	0, 14, 1, 7, 1, 35, 3, 0,
	0, 0, 0, 0, 0, 0, 10, 1,
	0, 0, 0, 0, 0, 0
};

static const char _zone_scanner_range_lengths[] = {
	0, 1, 1, 0, 0, 3, 0, 0,
	0, 0, 1, 3, 3, 2, 4, 1,
	0, 0, 0, 0, 1, 1, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	1, 1, 0, 0, 0, 1, 1, 0,
	0, 1, 1, 1, 1, 1, 1, 0,
	0, 0, 0, 0, 0, 0, 0, 2,
	0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 4, 0, 3, 1, 2,
	3, 3, 4, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 2, 0, 0, 0, 0, 0, 0,
	2, 0, 0, 2, 0, 1, 1, 2,
	0, 4, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	3, 1, 1, 1, 2, 2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2,
	3, 3, 2, 2, 2, 2, 1, 4,
	1, 1, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	2, 2, 0, 2, 0, 0, 3, 5,
	5, 1, 1, 1, 5, 2, 2, 2,
	4, 3, 1, 1, 4, 1, 2, 3,
	1, 1, 1, 0, 1, 1, 0, 0,
	1, 1, 1, 1, 0, 3, 3, 3,
	0, 0, 1, 1, 1, 3, 0, 1,
	0, 3, 0, 3, 3, 3, 0, 0,
	1, 1, 1, 3, 0, 2, 3, 1,
	1, 3, 3, 3, 3, 3, 1, 0,
	0, 0, 0, 0, 0, 0, 1, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 1, 1, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1, 1, 3,
	3, 3, 1, 1, 1, 0, 1, 1,
	3, 3, 3, 1, 1, 1, 1, 1,
	3, 0, 2, 0, 2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2,
	0, 0, 0, 0, 0, 0, 0, 2,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2, 0, 0, 0,
	0, 0, 0, 0, 0, 2, 0, 0,
	0, 0, 0, 2, 0, 0, 2, 0,
	0, 0, 0, 0, 0, 0, 2, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	2, 0, 0, 2, 0, 0, 0, 0,
	0, 2, 0, 0, 0, 2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	2, 0, 0, 2, 0, 0, 2, 1,
	3, 0, 0, 0, 0, 0, 2, 0,
	0, 0, 0, 0, 0, 2, 0, 0,
	2, 0, 0, 2, 0, 0, 0, 2,
	0, 0, 2, 0, 0, 2, 0, 0,
	2, 0, 0, 0, 2, 0, 0, 2,
	1, 3, 3, 2, 3, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 0, 3, 2,
	1, 3, 0, 3, 2, 1, 1, 1,
	3, 2, 1, 2, 0, 3, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 0, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 2,
	1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 3, 0, 3, 2, 1,
	1, 1, 1, 1, 3, 0, 1, 1,
	3, 0, 3, 0, 1, 1, 1, 0,
	0, 0, 1, 1, 1, 1, 1, 0,
	3, 3, 1, 1, 3, 0, 1, 1,
	3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 1, 1,
	1, 1, 1, 0, 0, 1, 1, 0,
	0, 3, 0, 1, 0, 1, 3, 3,
	1, 1, 0, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 3, 3, 1, 1,
	0, 1, 1, 3, 0, 1, 1, 1,
	0, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1, 1, 0,
	0, 0, 3, 2, 2, 1, 1, 1,
	1, 3, 0, 3, 0, 1, 1, 1,
	3, 0, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 3, 3, 3, 3, 3,
	3, 3, 5, 2, 0, 0, 0, 0,
	0, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 2, 3,
	5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 1, 1,
	3, 3, 3, 3, 0, 3, 3, 3,
	3, 2, 1, 3, 3, 0, 3, 3,
	2, 3, 3, 0, 3, 3, 2, 1,
	1, 1, 1, 3, 2, 1, 1, 1,
	1, 3, 0, 3, 2, 1, 1, 3,
	8, 3, 4, 3, 4, 3, 8, 9,
	9, 0, 0, 0, 4, 0, 0, 0,
	3, 0, 3, 1, 0, 0, 1, 0,
	3, 1, 3, 0, 3, 1, 1, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	3, 1, 0, 0, 0, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 0, 0,
	0, 1, 0, 3, 1, 0, 3, 1,
	0, 0, 1, 3, 1, 3, 3, 0,
	0, 0, 0, 0, 0, 0, 3, 1,
	0, 0, 0, 0, 0, 0
};

static const short _zone_scanner_index_offsets[] = {
	0, 0, 40, 58, 95, 112, 127, 136,
	145, 147, 149, 152, 169, 186, 191, 240,
	260, 299, 308, 311, 322, 336, 350, 355,
	358, 361, 364, 367, 378, 389, 392, 395,
	406, 409, 412, 415, 426, 433, 436, 439,
	442, 453, 458, 461, 464, 475, 478, 481,
	484, 495, 506, 509, 512, 515, 517, 528,
	530, 541, 544, 547, 550, 553, 564, 569,
	576, 613, 616, 619, 622, 625, 628, 631,
	634, 645, 650, 653, 664, 675, 682, 684,
	695, 697, 708, 711, 722, 733, 738, 741,
	744, 747, 758, 769, 776, 779, 782, 785,
	796, 799, 810, 823, 826, 838, 851, 854,
	857, 860, 863, 874, 877, 880, 891, 898,
	909, 912, 915, 918, 929, 940, 949, 952,
	963, 966, 977, 980, 991, 994, 997, 1000,
	1011, 1018, 1021, 1024, 1035, 1038, 1049, 1052,
	1055, 1057, 1069, 1072, 1075, 1086, 1089, 1129,
	1134, 1141, 1179, 1197, 1205, 1217, 1225, 1228,
	1230, 1237, 1240, 1243, 1246, 1249, 1252, 1255,
	1260, 1267, 1305, 1308, 1326, 1364, 1367, 1375,
	1387, 1395, 1398, 1415, 1462, 1481, 1498, 1538,
	1543, 1555, 1567, 1616, 1633, 1648, 1659, 1670,
	1683, 1696, 1711, 1724, 1739, 1750, 1765, 1782,
	1797, 1808, 1813, 1828, 1831, 1834, 1837, 1840,
	1843, 1848, 1851, 1854, 1859, 1868, 1888, 1928,
	1933, 1952, 2001, 2018, 2033, 2044, 2055, 2068,
	2081, 2096, 2109, 2124, 2135, 2150, 2167, 2182,
	2193, 2206, 2246, 2260, 2274, 2289, 2304, 2307,
	2310, 2321, 2324, 2327, 2330, 2341, 2344, 2355,
	2360, 2372, 2384, 2399, 2414, 2429, 2444, 2447,
	2496, 2510, 2524, 2539, 2552, 2561, 2570, 2581,
	2592, 2605, 2616, 2629, 2638, 2651, 2666, 2679,
	2688, 2693, 2698, 2709, 2714, 2716, 2718, 2727,
	2739, 2751, 2753, 2755, 2757, 2769, 2774, 2779,
	2784, 2793, 2797, 2799, 2801, 2810, 2816, 2821,
	2825, 2827, 2829, 2835, 2842, 2850, 2870, 2879,
	2881, 2891, 2903, 2913, 2916, 2923, 2937, 2945,
	2961, 2970, 2972, 2974, 2976, 2978, 2986, 2995,
	2998, 3005, 3015, 3024, 3040, 3048, 3064, 3073,
	3075, 3077, 3079, 3081, 3089, 3098, 3103, 3117,
	3120, 3123, 3128, 3133, 3139, 3145, 3160, 3163,
	3165, 3176, 3217, 3234, 3237, 3240, 3251, 3254,
	3263, 3266, 3277, 3282, 3285, 3288, 3291, 3294,
	3305, 3316, 3319, 3322, 3333, 3336, 3339, 3342,
	3353, 3360, 3363, 3366, 3369, 3380, 3385, 3388,
	3391, 3402, 3405, 3408, 3411, 3422, 3433, 3436,
	3439, 3442, 3444, 3455, 3457, 3468, 3471, 3474,
	3477, 3480, 3491, 3494, 3497, 3500, 3503, 3506,
	3509, 3512, 3523, 3528, 3531, 3542, 3553, 3560,
	3562, 3573, 3575, 3586, 3589, 3600, 3611, 3616,
	3619, 3622, 3625, 3636, 3647, 3654, 3657, 3660,
	3663, 3674, 3677, 3688, 3701, 3704, 3716, 3729,
	3732, 3735, 3738, 3741, 3752, 3755, 3758, 3769,
	3776, 3787, 3790, 3793, 3796, 3807, 3818, 3827,
	3830, 3841, 3844, 3855, 3858, 3869, 3872, 3875,
	3878, 3889, 3896, 3899, 3902, 3913, 3916, 3927,
	3930, 3933, 3935, 3947, 3950, 3953, 3964, 3967,
	3970, 3973, 3984, 3987, 3998, 4005, 4013, 4021,
	4031, 4035, 4049, 4052, 4055, 4058, 4065, 4074,
	4084, 4094, 4098, 4112, 4115, 4118, 4126, 4129,
	4141, 4147, 4152, 4157, 4160, 4166, 4169, 4172,
	4175, 4178, 4180, 4182, 4185, 4188, 4191, 4193,
	4198, 4203, 4208, 4210, 4213, 4216, 4219, 4222,
	4227, 4230, 4233, 4236, 4239, 4241, 4243, 4246,
	4249, 4252, 4254, 4256, 4258, 4263, 4265, 4267,
	4270, 4273, 4276, 4278, 4280, 4282, 4287, 4290,
	4292, 4294, 4296, 4298, 4303, 4305, 4307, 4312,
	4315, 4318, 4321, 4324, 4327, 4330, 4333, 4338,
	4341, 4344, 4347, 4350, 4353, 4356, 4361, 4364,
	4367, 4372, 4375, 4378, 4383, 4386, 4389, 4394,
	4397, 4399, 4404, 4407, 4410, 4414, 4420, 4423,
	4426, 4429, 4432, 4434, 4436, 4439, 4442, 4445,
	4447, 4452, 4454, 4456, 4461, 4463, 4465, 4470,
	4484, 4490, 4493, 4496, 4499, 4502, 4505, 4510,
	4517, 4520, 4523, 4526, 4529, 4532, 4537, 4542,
	4545, 4550, 4553, 4556, 4561, 4564, 4567, 4570,
	4575, 4578, 4581, 4586, 4591, 4594, 4599, 4602,
	4605, 4610, 4613, 4616, 4619, 4624, 4627, 4630,
	4635, 4638, 4645, 4652, 4657, 4664, 4671, 4684,
	4691, 4699, 4707, 4715, 4733, 4741, 4759, 4767,
	4785, 4793, 4809, 4815, 4827, 4833, 4836, 4844,
	4856, 4864, 4867, 4875, 4887, 4895, 4898, 4906,
	4918, 4926, 4929, 4932, 4935, 4940, 4947, 4957,
	4962, 4965, 4972, 4979, 4992, 4997, 5000, 5002,
	5010, 5023, 5028, 5031, 5036, 5047, 5061, 5064,
	5069, 5078, 5080, 5088, 5098, 5106, 5116, 5125,
	5134, 5141, 5149, 5157, 5167, 5175, 5185, 5194,
	5203, 5210, 5219, 5221, 5235, 5247, 5261, 5273,
	5287, 5299, 5313, 5324, 5327, 5340, 5353, 5356,
	5369, 5382, 5393, 5396, 5409, 5422, 5433, 5436,
	5449, 5462, 5473, 5476, 5483, 5486, 5494, 5502,
	5505, 5508, 5511, 5518, 5521, 5529, 5537, 5540,
	5543, 5545, 5553, 5561, 5569, 5577, 5585, 5598,
	5603, 5606, 5609, 5612, 5614, 5622, 5630, 5638,
	5648, 5655, 5665, 5672, 5682, 5689, 5702, 5707,
	5710, 5713, 5716, 5719, 5722, 5726, 5733, 5741,
	5749, 5759, 5766, 5777, 5780, 5783, 5786, 5789,
	5803, 5806, 5808, 5811, 5814, 5816, 5828, 5831,
	5833, 5838, 5843, 5845, 5853, 5863, 5870, 5878,
	5886, 5896, 5900, 5914, 5917, 5920, 5923, 5926,
	5928, 5936, 5944, 5952, 5962, 5966, 5980, 5983,
	5986, 5989, 5991, 5999, 6010, 6017, 6025, 6033,
	6041, 6076, 6087, 6090, 6093, 6108, 6111, 6150,
	6157, 6160, 6163, 6170, 6178, 6186, 6195, 6232,
	6235, 6238, 6245, 6253, 6261, 6272, 6311, 6314,
	6317, 6324, 6332, 6340, 6353, 6388, 6391, 6394,
	6397, 6428, 6441, 6451, 6458, 6466, 6474, 6482,
	6490, 6498, 6506, 6514, 6522, 6530, 6538, 6551,
	6558, 6569, 6572, 6575, 6578, 6581, 6584, 6587,
	6590, 6593, 6596, 6599, 6602, 6609, 6612, 6615,
	6618, 6625, 6628, 6635, 6644, 6647, 6654, 6659,
	6662, 6665, 6668, 6671, 6678, 6685, 6688, 6691,
	6698, 6701, 6704, 6707, 6714, 6721, 6724, 6727,
	6730, 6737, 6742, 6745, 6748, 6755, 6758, 6761,
	6764, 6771, 6778, 6781, 6784, 6787, 6789, 6796,
	6798, 6805, 6808, 6811, 6814, 6817, 6824, 6827,
	6830, 6833, 6836, 6839, 6842, 6845, 6852, 6857,
	6860, 6867, 6874, 6881, 6883, 6890, 6892, 6899,
	6902, 6909, 6916, 6921, 6924, 6927, 6930, 6937,
	6944, 6951, 6954, 6957, 6960, 6967, 6970, 6977,
	6986, 6989, 6997, 7006, 7009, 7012, 7015, 7018,
	7025, 7028, 7031, 7038, 7045, 7052, 7055, 7058,
	7061, 7068, 7075, 7084, 7087, 7094, 7097, 7104,
	7107, 7114, 7117, 7120, 7123, 7130, 7137, 7140,
	7143, 7150, 7153, 7160, 7163, 7166, 7168, 7176,
	7179, 7182, 7189, 7196, 7201, 7206, 7208, 7216,
	7224, 7232, 7242, 7249, 7260, 7263, 7266, 7269,
	7272, 7277, 7280, 7282, 7290, 7298, 7306, 7314,
	7322, 7333, 7340, 7350, 7354, 7359, 7363, 7368,
	7373, 7377, 7382, 7390, 7395, 7397, 7399, 7401,
	7403, 7405, 7408, 7412, 7422, 7425, 7428, 7431,
	7433, 7441, 7449, 7457, 7465, 7473, 7484, 7489,
	7493, 7501, 7504, 7507, 7510, 7512, 7520, 7528,
	7536, 7544, 7552, 7562, 7566, 7580, 7583, 7586,
	7589, 7592, 7594, 7602, 7611, 7618, 7621, 7623,
	7631, 7641, 7645, 7649, 7653, 7655, 7659, 7663,
	7667, 7671, 7677, 7680, 7684, 7688, 7690, 7694,
	7698, 7704, 7708, 7712, 7714, 7718, 7722, 7728,
	7730, 7738, 7746, 7754, 7764, 7769, 7772, 7775,
	7777, 7785, 7795, 7802, 7812, 7817, 7820, 7823,
	7839, 7865, 7911, 7958, 7974, 8021, 8037, 8063,
	8120, 8177, 8178, 8179, 8180, 8189, 8190, 8191,
	8192, 8206, 8207, 8222, 8225, 8226, 8267, 8270,
	8271, 8285, 8288, 8298, 8299, 8313, 8316, 8319,
	8320, 8321, 8322, 8323, 8324, 8325, 8326, 8327,
	8328, 8342, 8345, 8346, 8347, 8358, 8361, 8373,
	8376, 8388, 8391, 8403, 8406, 8407, 8408, 8409,
	8410, 8424, 8427, 8428, 8442, 8445, 8446, 8460,
	8463, 8464, 8479, 8482, 8493, 8496, 8535, 8542,
	8543, 8544, 8545, 8546, 8547, 8548, 8549, 8563,
	8566, 8567, 8568, 8569, 8570, 8571
};

static const short _zone_scanner_indicies[] = {
	1, 1, 2, 3, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16,
	17, 18, 19, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17,
	18, 19, 20, 21, 22, 23, 4, 0,
	25, 25, 26, 27, 29, 30, 31, 32,
	33, 29, 30, 31, 32, 33, 34, 35,
	28, 24, 37, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49,
	50, 51, 52, 53, 54, 40, 41, 42,
	43, 44, 45, 46, 47, 48, 49, 50,
	51, 52, 53, 54, 55, 56, 36, 58,
	58, 59, 60, 61, 62, 63, 61, 62,
	63, 64, 65, 66, 66, 67, 68, 57,
	70, 70, 72, 73, 74, 75, 76, 69,
	69, 77, 78, 69, 69, 69, 71, 80,
	80, 81, 82, 83, 84, 83, 84, 79,
	86, 86, 87, 88, 89, 90, 89, 90,
	85, 92, 91, 94, 93, 96, 95, 71,
	97, 97, 98, 99, 74, 83, 84, 83,
	100, 101, 102, 83, 103, 69, 69, 69,
	79, 104, 104, 105, 106, 74, 89, 90,
	89, 107, 108, 109, 89, 110, 69, 69,
	69, 79, 92, 112, 91, 111, 79, 113,
	113, 115, 116, 69, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 74, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 20, 21, 133, 134, 135,
	136, 137, 138, 69, 69, 117, 69, 114,
	140, 140, 141, 142, 29, 30, 31, 32,
	33, 29, 30, 31, 32, 33, 83, 84,
	143, 144, 28, 139, 146, 146, 147, 148,
	40, 41, 42, 43, 44, 45, 46, 47,
	48, 49, 50, 51, 52, 53, 54, 40,
	41, 42, 43, 44, 45, 46, 47, 48,
	49, 50, 51, 52, 53, 54, 89, 90,
	149, 150, 145, 151, 152, 153, 154, 151,
	152, 153, 154, 36, 155, 155, 36, 156,
	156, 157, 158, 159, 160, 161, 161, 162,
	163, 57, 80, 83, 80, 81, 82, 84,
	164, 83, 164, 165, 166, 167, 95, 79,
	86, 89, 86, 87, 88, 90, 168, 89,
	168, 169, 170, 171, 95, 79, 172, 173,
	172, 173, 36, 174, 174, 36, 175, 175,
	36, 176, 176, 36, 177, 177, 36, 178,
	178, 179, 180, 181, 182, 183, 183, 184,
	185, 57, 186, 186, 187, 188, 189, 190,
	191, 191, 192, 193, 57, 194, 194, 36,
	195, 195, 36, 196, 196, 197, 198, 199,
	200, 201, 201, 202, 203, 57, 204, 204,
	36, 205, 205, 36, 206, 206, 36, 207,
	207, 208, 209, 210, 211, 212, 212, 213,
	214, 57, 215, 216, 217, 215, 216, 217,
	36, 218, 218, 36, 219, 219, 36, 220,
	220, 36, 221, 221, 222, 223, 224, 225,
	226, 226, 227, 228, 57, 229, 230, 229,
	230, 36, 231, 231, 36, 232, 232, 36,
	233, 233, 234, 235, 236, 237, 238, 238,
	239, 240, 57, 241, 241, 36, 242, 242,
	36, 243, 243, 36, 244, 244, 245, 246,
	247, 248, 249, 249, 250, 251, 57, 252,
	252, 253, 254, 255, 256, 257, 257, 258,
	259, 57, 260, 260, 36, 261, 261, 36,
	262, 263, 36, 264, 36, 265, 265, 266,
	267, 268, 269, 270, 270, 271, 272, 57,
	273, 36, 274, 274, 275, 276, 277, 278,
	279, 279, 280, 281, 57, 282, 282, 36,
	283, 283, 36, 284, 284, 36, 285, 285,
	36, 286, 286, 287, 288, 289, 290, 291,
	291, 292, 293, 57, 294, 295, 294, 295,
	36, 296, 296, 297, 298, 299, 300, 36,
	301, 301, 302, 303, 304, 305, 306, 307,
	308, 309, 310, 311, 312, 313, 314, 315,
	316, 317, 318, 304, 305, 306, 307, 308,
	309, 310, 311, 312, 313, 314, 315, 316,
	317, 318, 319, 320, 36, 295, 295, 36,
	321, 321, 36, 322, 322, 36, 323, 323,
	36, 324, 324, 36, 325, 325, 36, 326,
	326, 36, 327, 327, 328, 329, 330, 331,
	332, 332, 333, 334, 57, 335, 336, 335,
	336, 36, 337, 337, 36, 338, 338, 339,
	340, 341, 342, 343, 343, 344, 345, 57,
	346, 346, 347, 348, 349, 350, 351, 351,
	352, 353, 57, 354, 355, 356, 357, 356,
	357, 36, 358, 36, 359, 359, 360, 361,
	362, 363, 364, 364, 365, 366, 57, 367,
	36, 368, 368, 369, 370, 371, 372, 373,
	373, 374, 375, 57, 376, 376, 36, 377,
	377, 378, 379, 380, 381, 382, 382, 383,
	384, 57, 385, 385, 386, 387, 388, 389,
	390, 390, 391, 392, 57, 393, 394, 393,
	394, 36, 395, 395, 36, 396, 396, 36,
	397, 397, 36, 398, 398, 399, 400, 401,
	402, 403, 403, 404, 405, 57, 406, 406,
	407, 408, 409, 410, 411, 411, 412, 413,
	57, 414, 415, 416, 414, 415, 416, 36,
	417, 417, 36, 418, 418, 36, 419, 419,
	36, 420, 420, 421, 422, 423, 424, 425,
	425, 426, 427, 57, 428, 428, 36, 429,
	429, 430, 431, 432, 433, 434, 434, 435,
	436, 57, 437, 437, 438, 439, 440, 440,
	441, 442, 443, 443, 444, 445, 57, 446,
	446, 36, 447, 447, 448, 449, 450, 451,
	452, 453, 453, 454, 455, 57, 456, 456,
	457, 458, 459, 459, 460, 461, 462, 462,
	463, 464, 57, 465, 465, 36, 466, 466,
	36, 467, 467, 36, 468, 468, 36, 469,
	469, 470, 471, 472, 473, 474, 474, 475,
	476, 57, 477, 477, 36, 478, 478, 36,
	479, 479, 480, 481, 482, 483, 484, 484,
	485, 486, 57, 487, 488, 489, 487, 488,
	489, 36, 490, 490, 491, 492, 493, 494,
	495, 495, 496, 497, 57, 498, 498, 36,
	499, 499, 36, 500, 500, 36, 501, 501,
	502, 503, 504, 505, 506, 506, 507, 508,
	57, 509, 509, 510, 511, 512, 513, 514,
	514, 515, 516, 57, 517, 518, 519, 520,
	517, 518, 519, 520, 36, 521, 521, 36,
	522, 522, 523, 524, 525, 526, 527, 527,
	528, 529, 57, 530, 530, 36, 531, 531,
	532, 533, 534, 535, 536, 536, 537, 538,
	57, 539, 539, 36, 540, 540, 541, 542,
	543, 544, 545, 545, 546, 547, 57, 548,
	548, 36, 549, 549, 36, 550, 550, 36,
	551, 551, 552, 553, 554, 555, 556, 556,
	557, 558, 57, 559, 560, 561, 559, 560,
	561, 36, 562, 562, 36, 563, 563, 36,
	564, 564, 565, 566, 567, 568, 569, 569,
	570, 571, 57, 572, 572, 36, 573, 573,
	574, 575, 576, 577, 578, 578, 579, 580,
	57, 581, 581, 36, 582, 582, 36, 584,
	583, 586, 586, 587, 588, 590, 591, 592,
	592, 593, 594, 589, 585, 595, 595, 36,
	596, 596, 36, 597, 597, 598, 599, 600,
	601, 602, 602, 603, 604, 57, 606, 605,
	36, 607, 607, 608, 609, 5, 6, 7,
	8, 9, 10, 11, 12, 13, 14, 15,
	16, 17, 18, 19, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16,
	17, 18, 19, 20, 21, 610, 611, 4,
	0, 612, 295, 612, 295, 36, 613, 613,
	614, 615, 616, 617, 36, 618, 618, 619,
	620, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636,
	622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637,
	638, 621, 583, 639, 639, 640, 641, 643,
	644, 645, 646, 647, 643, 644, 645, 646,
	647, 648, 649, 642, 24, 639, 639, 640,
	641, 648, 649, 650, 24, 652, 653, 654,
	655, 656, 652, 653, 654, 655, 656, 651,
	24, 657, 657, 658, 659, 661, 662, 660,
	24, 664, 663, 36, 666, 665, 668, 669,
	670, 668, 669, 670, 667, 671, 671, 667,
	672, 672, 667, 673, 673, 667, 674, 674,
	667, 675, 675, 667, 676, 676, 667, 677,
	677, 677, 677, 667, 679, 679, 680, 681,
	682, 683, 678, 684, 684, 685, 686, 5,
	6, 7, 8, 9, 10, 11, 12, 13,
	14, 15, 16, 17, 18, 19, 5, 6,
	7, 8, 9, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 687, 688, 4,
	583, 691, 689, 690, 693, 693, 694, 695,
	29, 30, 31, 32, 33, 29, 30, 31,
	32, 33, 696, 697, 28, 692, 698, 698,
	699, 700, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18,
	19, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19,
	701, 702, 4, 583, 704, 703, 36, 25,
	25, 26, 27, 34, 35, 705, 24, 707,
	708, 709, 710, 711, 707, 708, 709, 710,
	711, 706, 24, 712, 712, 713, 714, 716,
	717, 715, 24, 719, 718, 36, 721, 721,
	722, 723, 61, 62, 63, 61, 62, 63,
	724, 725, 66, 66, 726, 727, 720, 728,
	728, 729, 730, 69, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 74, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 731, 732, 69, 69, 733,
	734, 69, 69, 117, 69, 585, 736, 736,
	737, 738, 61, 62, 63, 61, 62, 63,
	83, 84, 739, 740, 741, 742, 743, 744,
	735, 745, 745, 746, 747, 74, 89, 90,
	748, 107, 108, 109, 749, 110, 69, 69,
	69, 79, 750, 750, 751, 752, 5, 6,
	7, 8, 9, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 5, 6, 7,
	8, 9, 10, 11, 12, 13, 14, 15,
	16, 17, 18, 19, 89, 90, 753, 754,
	4, 0, 92, 756, 91, 755, 85, 757,
	757, 758, 759, 760, 761, 760, 761, 91,
	91, 91, 79, 762, 762, 763, 764, 92,
	765, 92, 765, 91, 91, 91, 85, 766,
	766, 767, 768, 69, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 74, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 89, 90, 753, 769, 108,
	109, 753, 770, 69, 69, 117, 69, 114,
	80, 80, 81, 82, 151, 152, 153, 154,
	151, 152, 153, 154, 83, 84, 83, 84,
	735, 80, 80, 81, 82, 215, 216, 217,
	215, 216, 217, 83, 84, 83, 84, 735,
	80, 80, 81, 82, 260, 260, 83, 84,
	83, 84, 735, 80, 80, 81, 82, 282,
	282, 83, 84, 83, 84, 735, 80, 80,
	81, 82, 612, 295, 612, 295, 83, 84,
	83, 84, 735, 80, 80, 81, 82, 335,
	336, 335, 336, 83, 84, 83, 84, 735,
	80, 80, 81, 82, 354, 355, 356, 357,
	356, 357, 83, 84, 83, 84, 735, 80,
	80, 81, 82, 393, 394, 393, 394, 83,
	84, 83, 84, 735, 80, 80, 81, 82,
	414, 415, 416, 414, 415, 416, 83, 84,
	83, 84, 735, 80, 80, 81, 82, 477,
	477, 83, 84, 83, 84, 735, 80, 80,
	81, 82, 487, 488, 489, 487, 488, 489,
	83, 84, 83, 84, 735, 80, 80, 81,
	82, 517, 518, 519, 520, 517, 518, 519,
	520, 83, 84, 83, 84, 735, 80, 80,
	81, 82, 559, 560, 561, 559, 560, 561,
	83, 84, 83, 84, 735, 80, 80, 81,
	82, 595, 595, 83, 84, 83, 84, 735,
	92, 772, 91, 771, 79, 80, 80, 81,
	82, 668, 669, 670, 668, 669, 670, 83,
	84, 83, 84, 773, 774, 774, 667, 775,
	775, 667, 776, 776, 667, 777, 777, 667,
	778, 778, 667, 779, 779, 779, 779, 667,
	780, 780, 667, 781, 781, 667, 782, 782,
	782, 782, 667, 784, 784, 785, 786, 83,
	84, 787, 788, 783, 790, 790, 791, 792,
	29, 30, 31, 32, 33, 29, 30, 31,
	32, 33, 83, 84, 793, 794, 28, 789,
	795, 795, 796, 797, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16,
	17, 18, 19, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17,
	18, 19, 89, 90, 798, 799, 4, 0,
	92, 801, 91, 800, 145, 803, 803, 804,
	805, 61, 62, 63, 61, 62, 63, 83,
	84, 806, 807, 741, 742, 808, 809, 802,
	810, 810, 811, 812, 69, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 74, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 89, 90, 813, 769,
	108, 109, 814, 770, 69, 69, 117, 69,
	114, 784, 784, 785, 786, 151, 152, 153,
	154, 151, 152, 153, 154, 83, 84, 787,
	788, 802, 784, 784, 785, 786, 215, 216,
	217, 215, 216, 217, 83, 84, 787, 788,
	802, 784, 784, 785, 786, 260, 260, 83,
	84, 787, 788, 802, 784, 784, 785, 786,
	282, 282, 83, 84, 787, 788, 802, 784,
	784, 785, 786, 612, 295, 612, 295, 83,
	84, 787, 788, 802, 784, 784, 785, 786,
	335, 336, 335, 336, 83, 84, 787, 788,
	802, 784, 784, 785, 786, 354, 355, 356,
	357, 356, 357, 83, 84, 787, 788, 802,
	784, 784, 785, 786, 393, 394, 393, 394,
	83, 84, 787, 788, 802, 784, 784, 785,
	786, 414, 415, 416, 414, 415, 416, 83,
	84, 787, 788, 802, 784, 784, 785, 786,
	477, 477, 83, 84, 787, 788, 802, 784,
	784, 785, 786, 487, 488, 489, 487, 488,
	489, 83, 84, 787, 788, 802, 784, 784,
	785, 786, 517, 518, 519, 520, 517, 518,
	519, 520, 83, 84, 787, 788, 802, 784,
	784, 785, 786, 559, 560, 561, 559, 560,
	561, 83, 84, 787, 788, 802, 784, 784,
	785, 786, 595, 595, 83, 84, 787, 788,
	802, 815, 815, 94, 817, 818, 93, 93,
	819, 820, 93, 93, 93, 816, 821, 821,
	822, 823, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18,
	19, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19,
	83, 84, 824, 825, 4, 114, 80, 83,
	80, 81, 82, 84, 826, 827, 826, 828,
	829, 830, 689, 79, 86, 89, 86, 87,
	88, 90, 831, 756, 831, 832, 833, 834,
	689, 85, 757, 760, 757, 758, 759, 761,
	835, 827, 835, 836, 837, 838, 91, 771,
	79, 762, 92, 762, 763, 764, 765, 839,
	756, 839, 840, 841, 842, 91, 771, 79,
	843, 843, 36, 844, 844, 36, 845, 845,
	846, 847, 848, 849, 850, 850, 851, 852,
	57, 853, 853, 36, 854, 854, 36, 855,
	855, 36, 856, 856, 857, 858, 859, 860,
	861, 861, 862, 863, 57, 864, 864, 36,
	865, 865, 866, 867, 868, 869, 870, 870,
	871, 872, 57, 666, 874, 665, 873, 79,
	875, 875, 876, 877, 878, 761, 878, 761,
	665, 665, 665, 79, 879, 879, 880, 881,
	882, 765, 882, 765, 665, 665, 665, 85,
	875, 878, 875, 876, 877, 761, 883, 827,
	883, 884, 885, 838, 665, 873, 79, 879,
	882, 879, 880, 881, 765, 886, 756, 886,
	887, 888, 842, 665, 873, 79, 757, 760,
	757, 758, 759, 761, 889, 760, 889, 890,
	891, 167, 91, 111, 79, 762, 92, 762,
	763, 764, 765, 892, 92, 892, 893, 894,
	171, 91, 111, 79, 896, 895, 71, 897,
	897, 898, 899, 69, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 74, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 83, 84, 824, 900, 101,
	102, 824, 901, 69, 69, 117, 69, 114,
	80, 83, 80, 81, 82, 84, 902, 827,
	902, 903, 904, 838, 895, 79, 86, 89,
	86, 87, 88, 90, 905, 756, 905, 906,
	907, 842, 895, 79, 679, 679, 680, 681,
	151, 152, 153, 154, 151, 152, 153, 154,
	682, 683, 908, 679, 679, 680, 681, 215,
	216, 217, 215, 216, 217, 682, 683, 908,
	679, 679, 680, 681, 260, 260, 682, 683,
	908, 679, 679, 680, 681, 282, 282, 682,
	683, 908, 679, 679, 680, 681, 612, 295,
	612, 295, 682, 683, 908, 679, 679, 680,
	681, 335, 336, 335, 336, 682, 683, 908,
	679, 679, 680, 681, 354, 355, 356, 357,
	356, 357, 682, 683, 908, 679, 679, 680,
	681, 393, 394, 393, 394, 682, 683, 908,
	679, 679, 680, 681, 414, 415, 416, 414,
	415, 416, 682, 683, 908, 679, 679, 680,
	681, 477, 477, 682, 683, 908, 679, 679,
	680, 681, 487, 488, 489, 487, 488, 489,
	682, 683, 908, 679, 679, 680, 681, 517,
	518, 519, 520, 517, 518, 519, 520, 682,
	683, 908, 679, 679, 680, 681, 559, 560,
	561, 559, 560, 561, 682, 683, 908, 679,
	679, 680, 681, 595, 595, 682, 683, 908,
	666, 910, 665, 909, 85, 666, 912, 665,
	911, 145, 679, 679, 680, 681, 294, 295,
	294, 295, 682, 683, 908, 92, 914, 91,
	913, 145, 916, 915, 918, 917, 920, 921,
	922, 923, 920, 920, 920, 920, 919, 924,
	925, 926, 924, 927, 925, 924, 924, 925,
	925, 925, 919, 928, 929, 929, 928, 930,
	929, 928, 928, 929, 929, 929, 919, 931,
	925, 933, 932, 934, 932, 935, 936, 937,
	935, 938, 936, 935, 935, 936, 936, 936,
	932, 928, 928, 928, 928, 919, 939, 939,
	939, 939, 919, 942, 943, 941, 941, 940,
	944, 941, 944, 943, 944, 941, 945, 941,
	940, 941, 947, 941, 946, 948, 946, 949,
	946, 950, 951, 950, 953, 950, 951, 952,
	951, 946, 954, 955, 956, 954, 954, 940,
	944, 944, 944, 944, 957, 954, 958, 954,
	946, 959, 946, 960, 946, 961, 962, 963,
	961, 961, 946, 965, 965, 966, 967, 968,
	969, 964, 965, 965, 966, 967, 968, 969,
	971, 970, 973, 973, 974, 975, 977, 978,
	979, 980, 981, 977, 978, 979, 980, 981,
	982, 983, 982, 983, 976, 972, 985, 985,
	986, 987, 988, 989, 988, 989, 984, 991,
	990, 973, 973, 974, 975, 982, 983, 982,
	983, 992, 972, 995, 996, 997, 998, 999,
	995, 996, 997, 998, 999, 994, 993, 1000,
	1000, 1001, 1002, 1004, 1005, 1004, 1005, 1003,
	972, 1007, 1006, 964, 1009, 1009, 1010, 1011,
	1012, 1013, 1008, 1009, 1009, 1010, 1011, 1014,
	1015, 1016, 1014, 1012, 1013, 1014, 1014, 1014,
	1008, 1017, 1018, 1019, 1017, 1017, 1017, 1017,
	1008, 1021, 1021, 1022, 1023, 1024, 1024, 1025,
	1024, 1026, 1027, 1026, 1027, 1024, 1024, 1024,
	1020, 1028, 1028, 1029, 1030, 1031, 1032, 1031,
	1032, 1020, 1034, 1033, 1035, 1017, 1037, 1036,
	1038, 1036, 1039, 1040, 1041, 1039, 1039, 1039,
	1039, 1036, 1021, 1021, 1022, 1023, 1026, 1027,
	1026, 1027, 1020, 1043, 1042, 1008, 1044, 1044,
	1045, 1046, 1047, 1048, 690, 1044, 1044, 1045,
	1046, 1047, 1048, 1049, 1049, 1049, 1050, 1052,
	1052, 1053, 1054, 1055, 1056, 1055, 1057, 1051,
	1059, 1059, 1060, 1061, 1062, 1063, 1064, 1062,
	1065, 1066, 1065, 1067, 1062, 1062, 1062, 1058,
	1069, 1070, 1071, 1069, 1069, 1069, 1069, 1068,
	1072, 1072, 1073, 1074, 1075, 1075, 1076, 1075,
	1077, 1078, 1077, 1078, 1075, 1075, 1075, 1058,
	1079, 1079, 1080, 1081, 1065, 1066, 1065, 1066,
	85, 1083, 1082, 1084, 1069, 1086, 1085, 1087,
	1085, 1088, 1089, 1090, 1088, 1088, 1088, 1088,
	1085, 1072, 1072, 1073, 1074, 1077, 1078, 1077,
	1078, 1058, 1083, 1092, 1082, 1091, 85, 1093,
	1093, 1094, 1095, 1062, 1063, 1064, 1062, 1096,
	1097, 1062, 1062, 1062, 1068, 1099, 1098, 690,
	1101, 1100, 690, 1103, 1103, 1103, 1103, 1102,
	1104, 1104, 1104, 1104, 1102, 1105, 1106, 1105,
	1105, 1105, 1102, 1107, 1108, 1107, 1107, 1107,
	1102, 1108, 1108, 1109, 1110, 1103, 1111, 1112,
	1113, 1113, 1114, 1115, 1103, 1103, 1103, 1102,
	1117, 1116, 1102, 1108, 1102, 1119, 1119, 1120,
	1121, 1122, 1123, 1124, 1124, 1125, 1126, 1118,
	1127, 1127, 1128, 1129, 1130, 1131, 1132, 1133,
	1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141,
	1142, 1143, 1144, 1130, 1131, 1132, 1133, 1134,
	1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1147, 1147, 1148, 1149,
	1118, 1150, 1150, 1151, 1152, 1153, 1154, 1155,
	1153, 1154, 1155, 1156, 1157, 1158, 1158, 1159,
	1160, 1118, 1161, 1161, 1118, 1162, 1162, 1118,
	1163, 1163, 1164, 1165, 1166, 1167, 1168, 1168,
	1169, 1170, 1118, 1172, 1171, 1118, 1173, 1174,
	1175, 1176, 1173, 1174, 1175, 1176, 1118, 1177,
	1177, 1118, 1178, 1178, 1179, 1180, 1181, 1182,
	1183, 1183, 1184, 1185, 1118, 1186, 1187, 1186,
	1187, 1118, 1188, 1188, 1118, 1189, 1189, 1118,
	1190, 1190, 1118, 1191, 1191, 1118, 1192, 1192,
	1193, 1194, 1195, 1196, 1197, 1197, 1198, 1199,
	1118, 1200, 1200, 1201, 1202, 1203, 1204, 1205,
	1205, 1206, 1207, 1118, 1208, 1208, 1118, 1209,
	1209, 1118, 1210, 1210, 1211, 1212, 1213, 1214,
	1215, 1215, 1216, 1217, 1118, 1218, 1218, 1118,
	1219, 1219, 1118, 1220, 1220, 1118, 1221, 1221,
	1222, 1223, 1224, 1225, 1226, 1226, 1227, 1228,
	1118, 1229, 1230, 1231, 1229, 1230, 1231, 1118,
	1232, 1232, 1118, 1233, 1233, 1118, 1234, 1234,
	1118, 1235, 1235, 1236, 1237, 1238, 1239, 1240,
	1240, 1241, 1242, 1118, 1243, 1244, 1243, 1244,
	1118, 1245, 1245, 1118, 1246, 1246, 1118, 1247,
	1247, 1248, 1249, 1250, 1251, 1252, 1252, 1253,
	1254, 1118, 1255, 1255, 1118, 1256, 1256, 1118,
	1257, 1257, 1118, 1258, 1258, 1259, 1260, 1261,
	1262, 1263, 1263, 1264, 1265, 1118, 1266, 1266,
	1267, 1268, 1269, 1270, 1271, 1271, 1272, 1273,
	1118, 1274, 1274, 1118, 1275, 1275, 1118, 1276,
	1277, 1118, 1278, 1118, 1279, 1279, 1280, 1281,
	1282, 1283, 1284, 1284, 1285, 1286, 1118, 1287,
	1118, 1288, 1288, 1289, 1290, 1291, 1292, 1293,
	1293, 1294, 1295, 1118, 1296, 1296, 1118, 1297,
	1297, 1118, 1298, 1298, 1118, 1299, 1299, 1118,
	1300, 1300, 1301, 1302, 1303, 1304, 1305, 1305,
	1306, 1307, 1118, 1308, 1308, 1118, 1309, 1309,
	1118, 1310, 1310, 1118, 1311, 1311, 1118, 1312,
	1312, 1118, 1313, 1313, 1118, 1314, 1314, 1118,
	1315, 1315, 1316, 1317, 1318, 1319, 1320, 1320,
	1321, 1322, 1118, 1323, 1324, 1323, 1324, 1118,
	1325, 1325, 1118, 1326, 1326, 1327, 1328, 1329,
	1330, 1331, 1331, 1332, 1333, 1118, 1334, 1334,
	1335, 1336, 1337, 1338, 1339, 1339, 1340, 1341,
	1118, 1342, 1343, 1344, 1345, 1344, 1345, 1118,
	1346, 1118, 1347, 1347, 1348, 1349, 1350, 1351,
	1352, 1352, 1353, 1354, 1118, 1355, 1118, 1356,
	1356, 1357, 1358, 1359, 1360, 1361, 1361, 1362,
	1363, 1118, 1364, 1364, 1118, 1365, 1365, 1366,
	1367, 1368, 1369, 1370, 1370, 1371, 1372, 1118,
	1373, 1373, 1374, 1375, 1376, 1377, 1378, 1378,
	1379, 1380, 1118, 1381, 1382, 1381, 1382, 1118,
	1383, 1383, 1118, 1384, 1384, 1118, 1385, 1385,
	1118, 1386, 1386, 1387, 1388, 1389, 1390, 1391,
	1391, 1392, 1393, 1118, 1394, 1394, 1395, 1396,
	1397, 1398, 1399, 1399, 1400, 1401, 1118, 1402,
	1403, 1404, 1402, 1403, 1404, 1118, 1405, 1405,
	1118, 1406, 1406, 1118, 1407, 1407, 1118, 1408,
	1408, 1409, 1410, 1411, 1412, 1413, 1413, 1414,
	1415, 1118, 1416, 1416, 1118, 1417, 1417, 1418,
	1419, 1420, 1421, 1422, 1422, 1423, 1424, 1118,
	1425, 1425, 1426, 1427, 1428, 1428, 1429, 1430,
	1431, 1431, 1432, 1433, 1118, 1434, 1434, 1118,
	1435, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1441, 1442, 1443, 1118, 1444, 1444, 1445, 1446,
	1447, 1447, 1448, 1449, 1450, 1450, 1451, 1452,
	1118, 1453, 1453, 1118, 1454, 1454, 1118, 1455,
	1455, 1118, 1456, 1456, 1118, 1457, 1457, 1458,
	1459, 1460, 1461, 1462, 1462, 1463, 1464, 1118,
	1465, 1465, 1118, 1466, 1466, 1118, 1467, 1467,
	1468, 1469, 1470, 1471, 1472, 1472, 1473, 1474,
	1118, 1475, 1476, 1477, 1475, 1476, 1477, 1118,
	1478, 1478, 1479, 1480, 1481, 1482, 1483, 1483,
	1484, 1485, 1118, 1486, 1486, 1118, 1487, 1487,
	1118, 1488, 1488, 1118, 1489, 1489, 1490, 1491,
	1492, 1493, 1494, 1494, 1495, 1496, 1118, 1497,
	1497, 1498, 1499, 1500, 1501, 1502, 1502, 1503,
	1504, 1118, 1505, 1506, 1507, 1508, 1505, 1506,
	1507, 1508, 1118, 1509, 1509, 1118, 1510, 1510,
	1511, 1512, 1513, 1514, 1515, 1515, 1516, 1517,
	1118, 1518, 1518, 1118, 1519, 1519, 1520, 1521,
	1522, 1523, 1524, 1524, 1525, 1526, 1118, 1527,
	1527, 1118, 1528, 1528, 1529, 1530, 1531, 1532,
	1533, 1533, 1534, 1535, 1118, 1536, 1536, 1118,
	1537, 1537, 1118, 1538, 1538, 1118, 1539, 1539,
	1540, 1541, 1542, 1543, 1544, 1544, 1545, 1546,
	1118, 1547, 1548, 1549, 1547, 1548, 1549, 1118,
	1550, 1550, 1118, 1551, 1551, 1118, 1552, 1552,
	1553, 1554, 1555, 1556, 1557, 1557, 1558, 1559,
	1118, 1560, 1560, 1118, 1561, 1561, 1562, 1563,
	1564, 1565, 1566, 1566, 1567, 1568, 1118, 1569,
	1569, 1118, 1570, 1570, 1118, 1571, 1118, 1572,
	1572, 1573, 1574, 1576, 1577, 1578, 1578, 1579,
	1580, 1575, 1118, 1581, 1581, 1118, 1582, 1582,
	1118, 1583, 1583, 1584, 1585, 1586, 1587, 1588,
	1588, 1589, 1590, 1118, 1591, 1591, 1118, 1592,
	1592, 1118, 1593, 1593, 1118, 1594, 1594, 1595,
	1596, 1597, 1598, 1599, 1599, 1600, 1601, 1118,
	1602, 1602, 1118, 1603, 1603, 1604, 1605, 1606,
	1607, 1608, 1608, 1609, 1610, 1118, 1612, 1612,
	1613, 1614, 1615, 1616, 1611, 1612, 1612, 1613,
	1614, 1615, 1616, 1618, 1617, 1619, 1619, 1620,
	1621, 1623, 1624, 1622, 1617, 1626, 1626, 1627,
	1628, 1630, 1631, 1629, 1629, 1629, 1625, 1632,
	1632, 1632, 1625, 1633, 1633, 1634, 1635, 1636,
	1637, 1638, 1638, 1639, 1640, 1629, 1629, 1629,
	1625, 1642, 1641, 1625, 1644, 1643, 1611, 1646,
	1645, 1611, 1647, 1647, 1648, 1649, 1650, 1651,
	1611, 1647, 1647, 1648, 1649, 1652, 1650, 1651,
	1653, 1617, 1654, 1654, 1655, 1656, 1658, 1658,
	1659, 1660, 1657, 1617, 1661, 1661, 1662, 1663,
	1665, 1666, 1664, 1664, 1664, 1625, 1667, 1667,
	1667, 1625, 1668, 1668, 1669, 1670, 1671, 1672,
	1673, 1673, 1674, 1675, 1664, 1664, 1664, 1625,
	1677, 1676, 1625, 1679, 1678, 1611, 1680, 1680,
	1681, 1682, 1683, 1684, 1657, 1617, 1686, 1685,
	1611, 1689, 1690, 1691, 1692, 1693, 1689, 1690,
	1691, 1692, 1693, 1688, 1687, 1694, 1694, 1694,
	1694, 1695, 1687, 1696, 1697, 1696, 1697, 1687,
	1698, 1698, 1698, 1698, 1687, 1699, 1699, 1687,
	1700, 1701, 1700, 1700, 1700, 1687, 1702, 1702,
	1687, 1703, 1703, 1687, 1704, 1704, 1687, 1705,
	1705, 1687, 1706, 1687, 1707, 1687, 1708, 1708,
	1687, 1709, 1709, 1687, 1710, 1710, 1687, 1711,
	1687, 1712, 1712, 1712, 1712, 1687, 1713, 1714,
	1713, 1714, 1687, 1715, 1716, 1715, 1716, 1687,
	1717, 1687, 1718, 1718, 1687, 1719, 1719, 1687,
	1720, 1720, 1687, 1721, 1721, 1687, 1722, 1722,
	1722, 1722, 1687, 1723, 1723, 1687, 1724, 1724,
	1687, 1725, 1725, 1687, 1726, 1727, 1687, 1728,
	1687, 1729, 1687, 1730, 1730, 1687, 1731, 1731,
	1687, 1732, 1732, 1687, 1733, 1687, 1734, 1687,
	1735, 1687, 1736, 1736, 1736, 1736, 1687, 1737,
	1687, 1738, 1687, 1739, 1739, 1687, 1740, 1740,
	1687, 1741, 1741, 1687, 1742, 1687, 1743, 1687,
	1744, 1687, 1745, 1745, 1745, 1745, 1687, 1746,
	1747, 1687, 1748, 1687, 1749, 1687, 1750, 1687,
	1751, 1687, 1752, 1752, 1752, 1752, 1687, 1753,
	1687, 1754, 1687, 1755, 1755, 1755, 1755, 1687,
	1756, 1756, 1687, 1757, 1757, 1687, 1758, 1758,
	1687, 1759, 1759, 1687, 1760, 1760, 1687, 1761,
	1761, 1687, 1762, 1762, 1687, 1763, 1763, 1763,
	1763, 1687, 1764, 1764, 1687, 1765, 1765, 1687,
	1766, 1766, 1687, 1767, 1767, 1687, 1768, 1768,
	1687, 1769, 1769, 1687, 1770, 1771, 1770, 1771,
	1687, 1772, 1772, 1687, 1773, 1773, 1687, 1774,
	1774, 1774, 1774, 1687, 1775, 1775, 1687, 1776,
	1776, 1687, 1777, 1777, 1777, 1777, 1687, 1778,
	1778, 1687, 1779, 1779, 1687, 1780, 1781, 1780,
	1781, 1687, 1782, 1782, 1687, 1783, 1687, 1784,
	1784, 1784, 1784, 1687, 1785, 1785, 1687, 1786,
	1786, 1687, 1787, 1788, 1789, 1687, 1790, 1791,
	1790, 1790, 1790, 1687, 1792, 1792, 1687, 1793,
	1793, 1687, 1794, 1794, 1687, 1795, 1795, 1687,
	1796, 1687, 1797, 1687, 1798, 1798, 1687, 1799,
	1799, 1687, 1800, 1800, 1687, 1801, 1687, 1802,
	1802, 1802, 1802, 1687, 1803, 1687, 1804, 1687,
	1805, 1805, 1805, 1805, 1687, 1806, 1687, 1807,
	1687, 1808, 1808, 1808, 1808, 1687, 1811, 1812,
	1813, 1814, 1815, 1816, 1811, 1812, 1813, 1814,
	1815, 1816, 1810, 1809, 1817, 1817, 1817, 1817,
	1818, 1809, 1819, 1819, 1809, 1820, 1820, 1809,
	1821, 1821, 1809, 1822, 1822, 1809, 1823, 1823,
	1809, 1824, 1824, 1824, 1824, 1809, 1825, 1826,
	1827, 1825, 1826, 1827, 1809, 1828, 1828, 1809,
	1829, 1829, 1809, 1830, 1830, 1809, 1831, 1831,
	1809, 1832, 1832, 1809, 1833, 1833, 1833, 1833,
	1809, 1834, 1835, 1834, 1835, 1809, 1836, 1836,
	1809, 1837, 1837, 1837, 1837, 1809, 1838, 1838,
	1809, 1839, 1839, 1809, 1840, 1840, 1840, 1840,
	1809, 1841, 1841, 1809, 1842, 1842, 1809, 1843,
	1843, 1809, 1844, 1844, 1844, 1844, 1809, 1845,
	1845, 1809, 1846, 1846, 1809, 1847, 1847, 1847,
	1847, 1809, 1848, 1849, 1848, 1849, 1809, 1850,
	1850, 1809, 1851, 1851, 1851, 1851, 1809, 1852,
	1852, 1809, 1853, 1853, 1809, 1854, 1854, 1854,
	1854, 1809, 1855, 1855, 1809, 1856, 1856, 1809,
	1857, 1857, 1809, 1858, 1858, 1858, 1858, 1809,
	1859, 1859, 1809, 1860, 1860, 1809, 1861, 1861,
	1861, 1861, 1809, 1863, 1863, 1862, 1864, 1865,
	1864, 1864, 1864, 1865, 1862, 1866, 1866, 1866,
	1866, 1866, 1866, 71, 1867, 1867, 1867, 1867,
	71, 1868, 1868, 1868, 1868, 1868, 1868, 71,
	1869, 1869, 1870, 1871, 1872, 1873, 71, 1874,
	1874, 1875, 1876, 1877, 1877, 1877, 1878, 1879,
	1877, 1877, 1877, 71, 1880, 1880, 1881, 1882,
	1883, 1884, 71, 1886, 1886, 1887, 1888, 1890,
	1891, 1889, 1885, 1892, 1892, 1893, 1894, 1896,
	1897, 1895, 1885, 1898, 1898, 1899, 1900, 1902,
	1903, 1901, 1885, 1905, 1905, 1906, 1907, 1909,
	1910, 1911, 1912, 1913, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1908, 1904, 1916, 1916, 1917,
	1918, 1920, 1921, 1919, 1885, 1922, 1922, 1923,
	1924, 1926, 1927, 1928, 1929, 1930, 1926, 1927,
	1928, 1929, 1930, 1931, 1932, 1925, 1904, 1933,
	1933, 1934, 1935, 1937, 1938, 1936, 1885, 1939,
	1939, 1940, 1941, 1943, 1944, 1945, 1946, 1947,
	1943, 1944, 1945, 1946, 1947, 1948, 1949, 1942,
	1904, 1950, 1950, 1951, 1952, 1954, 1955, 1953,
	1885, 1956, 1956, 1958, 1959, 1960, 1961, 1962,
	1958, 1959, 1960, 1961, 1962, 1956, 1956, 1957,
	1904, 1956, 1956, 1956, 1956, 1963, 1904, 1965,
	1966, 1967, 1968, 1969, 1965, 1966, 1967, 1968,
	1969, 1964, 1904, 1970, 1970, 1970, 1970, 1971,
	1904, 1973, 1972, 71, 1939, 1939, 1940, 1941,
	1948, 1949, 1974, 1904, 1976, 1977, 1978, 1979,
	1980, 1976, 1977, 1978, 1979, 1980, 1975, 1904,
	1981, 1981, 1982, 1983, 1985, 1986, 1984, 1904,
	1988, 1987, 71, 1922, 1922, 1923, 1924, 1931,
	1932, 1989, 1904, 1991, 1992, 1993, 1994, 1995,
	1991, 1992, 1993, 1994, 1995, 1990, 1904, 1996,
	1996, 1997, 1998, 2000, 2001, 1999, 1904, 2003,
	2002, 71, 1905, 1905, 1906, 1907, 1914, 1915,
	2004, 1904, 2006, 2007, 2008, 2009, 2010, 2006,
	2007, 2008, 2009, 2010, 2005, 1904, 2011, 2011,
	2012, 2013, 2015, 2016, 2014, 1904, 2018, 2017,
	71, 2020, 2019, 71, 2022, 2021, 71, 71,
	71, 71, 71, 2023, 2024, 2024, 2025, 2026,
	2027, 2028, 71, 2030, 2030, 2031, 2032, 2033,
	2034, 2029, 2029, 2029, 71, 2035, 2035, 2035,
	2035, 71, 2037, 2036, 71, 2038, 2038, 2038,
	2038, 2038, 2038, 71, 2039, 2039, 2040, 2041,
	2042, 2043, 71, 2044, 2044, 2045, 2046, 2047,
	2047, 2047, 2048, 2049, 2047, 2047, 2047, 71,
	2050, 2050, 2050, 2050, 71, 2052, 2051, 71,
	2053, 1885, 2054, 2054, 2055, 2056, 2058, 2059,
	2057, 1885, 2060, 2060, 2061, 2062, 2063, 2063,
	2063, 2064, 2065, 2063, 2063, 2063, 71, 2066,
	2066, 2066, 2066, 71, 2068, 2067, 71, 2070,
	2070, 2070, 2070, 2069, 2071, 2071, 2072, 2073,
	2074, 2075, 2076, 2076, 2077, 2078, 2070, 2080,
	2080, 2081, 2082, 2083, 2084, 2085, 2085, 2086,
	2087, 2079, 2079, 2079, 2070, 2089, 2088, 2070,
	2090, 2090, 2090, 2090, 1862, 2091, 2092, 2091,
	2091, 2091, 2092, 2092, 2092, 1862, 2094, 2093,
	2095, 2095, 2096, 2097, 2099, 2100, 2098, 2093,
	2101, 2101, 2102, 2103, 2105, 2106, 2107, 2108,
	2104, 2093, 2109, 2109, 2110, 2111, 2113, 2114,
	2112, 2093, 2115, 2115, 2116, 2117, 2105, 2106,
	2119, 2120, 2118, 2093, 2121, 2121, 2122, 2123,
	2124, 2126, 2127, 2125, 2093, 2128, 2128, 2129,
	2130, 2105, 2106, 2131, 2132, 2093, 2133, 2133,
	2134, 2135, 2136, 2137, 2093, 2133, 2133, 2134,
	2135, 2136, 2137, 2138, 2093, 2139, 2139, 2140,
	2141, 2143, 2144, 2142, 2093, 2145, 2145, 2146,
	2147, 2149, 2150, 2151, 2152, 2148, 2093, 2153,
	2153, 2154, 2155, 2157, 2158, 2156, 2093, 2159,
	2159, 2160, 2161, 2149, 2150, 2163, 2164, 2162,
	2093, 2165, 2165, 2166, 2167, 2168, 2170, 2171,
	2169, 2093, 2172, 2172, 2173, 2174, 2149, 2150,
	2175, 2176, 2093, 2177, 2177, 2178, 2179, 2180,
	2181, 2093, 2177, 2177, 2178, 2179, 2182, 2180,
	2181, 2183, 2093, 2184, 2093, 2185, 2185, 2186,
	2187, 2188, 2190, 2191, 2192, 2193, 2193, 2194,
	2195, 2189, 2093, 2196, 2196, 2197, 2198, 2200,
	2201, 2202, 2202, 2203, 2204, 2199, 2093, 2205,
	2205, 2206, 2207, 2208, 2210, 2211, 2212, 2213,
	2213, 2214, 2215, 2209, 2093, 2216, 2216, 2217,
	2218, 2220, 2221, 2202, 2202, 2222, 2223, 2219,
	2093, 2224, 2224, 2225, 2226, 2227, 2229, 2230,
	2231, 2232, 2232, 2233, 2234, 2228, 2093, 2235,
	2235, 2236, 2237, 2239, 2240, 2202, 2202, 2241,
	2242, 2238, 2093, 2243, 2243, 2244, 2245, 2246,
	2243, 2248, 2249, 2250, 2250, 2251, 2252, 2247,
	2093, 2253, 2253, 2254, 2255, 2256, 2257, 2202,
	2202, 2258, 2259, 2093, 2261, 2260, 2093, 2262,
	2262, 2263, 2264, 2262, 2266, 2267, 2268, 2268,
	2269, 2270, 2265, 2093, 2243, 2243, 2244, 2245,
	2243, 2248, 2249, 2250, 2250, 2251, 2252, 2271,
	2093, 2273, 2272, 2093, 2274, 2274, 2275, 2276,
	2278, 2279, 2280, 2281, 2281, 2282, 2283, 2277,
	2093, 2224, 2224, 2225, 2226, 2229, 2230, 2231,
	2232, 2232, 2233, 2234, 2284, 2093, 2235, 2235,
	2236, 2237, 2239, 2240, 2202, 2202, 2241, 2242,
	2093, 2286, 2285, 2093, 2287, 2287, 2288, 2289,
	2291, 2292, 2293, 2294, 2294, 2295, 2296, 2290,
	2093, 2205, 2205, 2206, 2207, 2210, 2211, 2212,
	2213, 2213, 2214, 2215, 2297, 2093, 2216, 2216,
	2217, 2218, 2220, 2221, 2202, 2202, 2222, 2223,
	2093, 2299, 2298, 2093, 2300, 2300, 2301, 2302,
	2304, 2305, 2306, 2307, 2307, 2308, 2309, 2303,
	2093, 2185, 2185, 2186, 2187, 2190, 2191, 2192,
	2193, 2193, 2194, 2195, 2310, 2093, 2196, 2196,
	2197, 2198, 2200, 2201, 2202, 2202, 2203, 2204,
	2093, 2312, 2311, 2093, 2313, 2313, 2314, 2315,
	2316, 2317, 2093, 2319, 2318, 2093, 2320, 2320,
	2321, 2322, 2324, 2325, 2323, 2093, 2165, 2165,
	2166, 2167, 2170, 2171, 2326, 2093, 2328, 2327,
	2093, 2330, 2329, 2093, 2332, 2331, 2093, 2333,
	2333, 2334, 2335, 2336, 2337, 2093, 2339, 2338,
	2093, 2340, 2340, 2341, 2342, 2344, 2345, 2343,
	2093, 2121, 2121, 2122, 2123, 2126, 2127, 2346,
	2093, 2348, 2347, 2093, 2350, 2349, 2093, 2351,
	1885, 2352, 2352, 2353, 2354, 2356, 2357, 2355,
	1885, 2358, 2358, 2359, 2360, 2362, 2363, 2361,
	1885, 2364, 2364, 2365, 2366, 2368, 2369, 2367,
	1885, 2370, 2370, 2371, 2372, 2374, 2375, 2373,
	1885, 2376, 2376, 2377, 2378, 2380, 2381, 2379,
	1885, 2382, 2382, 2383, 2384, 2385, 2385, 2385,
	2386, 2387, 2385, 2385, 2385, 71, 2388, 2388,
	2388, 2388, 71, 2390, 2389, 71, 2392, 2391,
	71, 2394, 2393, 71, 2395, 1885, 2396, 2396,
	2397, 2398, 2400, 2401, 2399, 1885, 2402, 2402,
	2403, 2404, 2406, 2407, 2405, 1885, 2408, 2408,
	2409, 2410, 2412, 2413, 2411, 1885, 2415, 2415,
	2416, 2417, 2418, 2419, 2414, 2414, 2414, 71,
	2420, 2420, 2421, 2422, 2423, 2424, 71, 2426,
	2426, 2427, 2428, 2429, 2430, 2425, 2425, 2425,
	71, 2431, 2431, 2432, 2433, 2434, 2435, 71,
	2437, 2437, 2438, 2439, 2440, 2441, 2436, 2436,
	2436, 71, 2442, 2442, 2443, 2444, 2445, 2446,
	71, 2447, 2447, 2448, 2449, 2450, 2450, 2450,
	2451, 2452, 2450, 2450, 2450, 71, 2453, 2453,
	2453, 2453, 71, 2455, 2454, 71, 2457, 2456,
	71, 2459, 2458, 71, 2461, 2460, 71, 2463,
	2462, 71, 2464, 2464, 2464, 71, 2465, 2465,
	2466, 2467, 2468, 2469, 71, 2465, 2465, 2466,
	2467, 2468, 2469, 2470, 1885, 2471, 2471, 2472,
	2473, 2475, 2476, 2474, 1885, 2477, 2477, 2478,
	2479, 2481, 2482, 2480, 2480, 2480, 71, 2483,
	2483, 2484, 2485, 2486, 2487, 71, 2483, 2483,
	2484, 2485, 2488, 2486, 2487, 2488, 2488, 2488,
	71, 2489, 2489, 71, 2491, 2490, 71, 2493,
	2492, 71, 2495, 2494, 71, 2497, 2497, 2498,
	2499, 2500, 2501, 2502, 2503, 2504, 2505, 2505,
	2506, 2507, 2496, 2508, 2509, 2496, 2510, 2496,
	2512, 2512, 2511, 2514, 2513, 2511, 2515, 2496,
	2516, 2516, 2517, 2518, 2520, 2521, 2522, 2522,
	2523, 2524, 2519, 2496, 2526, 2525, 71, 2527,
	2496, 2528, 2528, 2528, 2528, 2511, 2530, 2529,
	2529, 2529, 2511, 2531, 1885, 2532, 2532, 2533,
	2534, 2536, 2537, 2535, 1885, 2538, 2538, 2539,
	2540, 2542, 2543, 2541, 2541, 2541, 71, 2544,
	2544, 2545, 2546, 2547, 2548, 71, 2544, 2544,
	2545, 2546, 2547, 2548, 2549, 1885, 2550, 2550,
	2551, 2552, 2554, 2555, 2553, 1885, 2557, 2557,
	2558, 2559, 2561, 2562, 2560, 2560, 2560, 2556,
	2563, 2563, 2563, 2556, 2564, 2564, 2565, 2566,
	2567, 2568, 2569, 2569, 2570, 2571, 2560, 2560,
	2560, 2556, 2573, 2572, 2556, 2575, 2574, 71,
	2577, 2576, 71, 2579, 2578, 71, 2580, 1885,
	2581, 2581, 2582, 2583, 2585, 2586, 2584, 1885,
	2587, 2587, 2588, 2589, 2591, 2592, 2590, 1885,
	2593, 2593, 2594, 2595, 2597, 2598, 2596, 1885,
	2599, 2599, 2600, 2601, 2603, 2604, 2602, 2602,
	2602, 2556, 2605, 2605, 2605, 2556, 2606, 2606,
	2607, 2608, 2609, 2610, 2611, 2611, 2612, 2613,
	2602, 2602, 2602, 2556, 2615, 2614, 2556, 2617,
	2616, 71, 2619, 2618, 71, 2620, 1885, 2621,
	2621, 2622, 2623, 2625, 2626, 2624, 1885, 2628,
	2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635,
	2636, 2627, 2637, 2637, 2638, 2639, 2640, 2641,
	2627, 2637, 2637, 2638, 2639, 2640, 2641, 2643,
	2642, 2644, 2644, 2645, 2646, 2648, 2649, 2647,
	2642, 2650, 2650, 2651, 2652, 2653, 2654, 2655,
	2627, 2657, 2657, 2658, 2659, 2660, 2660, 2661,
	2662, 2663, 2663, 2664, 2665, 2666, 2666, 2666,
	2666, 2667, 2668, 2666, 2666, 2669, 2670, 2671,
	2672, 2666, 2666, 2673, 2674, 2675, 2676, 2666,
	2666, 2677, 2678, 2656, 2657, 2657, 2658, 2659,
	2680, 2667, 2668, 2680, 2680, 2680, 2679, 2666,
	2666, 2679, 2682, 2681, 2679, 2660, 2660, 2661,
	2662, 2666, 2666, 2666, 2666, 2671, 2672, 2666,
	2666, 2673, 2674, 2679, 2684, 2683, 2679, 2680,
	2657, 2657, 2658, 2659, 2660, 2660, 2661, 2662,
	2663, 2663, 2664, 2665, 2666, 2666, 2666, 2666,
	2667, 2668, 2666, 2666, 2669, 2670, 2671, 2672,
	2666, 2666, 2673, 2674, 2675, 2676, 2666, 2666,
	2677, 2678, 2680, 2680, 2680, 2679, 2682, 2684,
	2686, 2681, 2683, 2685, 2679, 2688, 2687, 2627,
	2690, 2689, 2627, 2691, 2691, 2692, 2693, 2694,
	2695, 2627, 2691, 2691, 2692, 2693, 2694, 2695,
	2696, 2642, 2697, 2697, 2698, 2699, 2701, 2702,
	2700, 2642, 2704, 2704, 2705, 2706, 2707, 2708,
	2709, 2707, 2703, 2711, 2712, 2712, 2713, 2714,
	2715, 2715, 2716, 2717, 2718, 2718, 2719, 2720,
	2721, 2721, 2721, 2721, 2722, 2723, 2721, 2721,
	2724, 2725, 2726, 2727, 2721, 2721, 2728, 2729,
	2730, 2731, 2721, 2721, 2732, 2733, 2711, 2710,
	2735, 2734, 2627, 2737, 2736, 2627, 2738, 2738,
	2739, 2740, 2741, 2742, 2627, 2738, 2738, 2739,
	2740, 2741, 2742, 2743, 2642, 2744, 2744, 2745,
	2746, 2748, 2749, 2747, 2642, 2750, 2750, 2751,
	2752, 2753, 2754, 2755, 2753, 2753, 2753, 2703,
	2756, 2757, 2757, 2758, 2759, 2760, 2760, 2761,
	2762, 2763, 2763, 2764, 2765, 2766, 2766, 2766,
	2766, 2767, 2768, 2766, 2766, 2769, 2770, 2771,
	2772, 2766, 2766, 2773, 2774, 2775, 2776, 2766,
	2766, 2777, 2778, 2756, 2756, 2756, 2710, 2780,
	2779, 2627, 2782, 2781, 2627, 2783, 2783, 2784,
	2785, 2786, 2787, 2627, 2783, 2783, 2784, 2785,
	2786, 2787, 2788, 2642, 2789, 2789, 2790, 2791,
	2793, 2794, 2792, 2642, 2795, 2795, 2796, 2797,
	2798, 2798, 2798, 2799, 2800, 2798, 2798, 2798,
	2627, 2801, 2801, 2802, 2803, 2804, 2804, 2805,
	2806, 2807, 2807, 2808, 2809, 2810, 2810, 2810,
	2810, 2811, 2812, 2810, 2810, 2813, 2814, 2815,
	2816, 2810, 2810, 2817, 2818, 2819, 2820, 2810,
	2810, 2821, 2822, 2656, 2824, 2823, 2627, 2826,
	2825, 2627, 2828, 2827, 71, 2830, 2831, 2832,
	2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840,
	2841, 2842, 2843, 2844, 2830, 2831, 2832, 2833,
	2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841,
	2842, 2843, 2844, 2829, 2845, 2845, 2846, 2847,
	2848, 2849, 2850, 2848, 2849, 2850, 2851, 2852,
	2829, 2853, 2853, 2854, 2855, 2857, 2858, 2856,
	2856, 2856, 71, 2859, 2859, 2860, 2861, 2862,
	2863, 71, 2859, 2859, 2860, 2861, 2862, 2863,
	2864, 1885, 2865, 2865, 2866, 2867, 2869, 2870,
	2868, 1885, 2871, 2871, 2872, 2873, 2875, 2876,
	2874, 1885, 2877, 2877, 2878, 2879, 2881, 2882,
	2880, 1885, 2884, 2884, 2885, 2886, 2888, 2889,
	2887, 2883, 2890, 2890, 2891, 2892, 2894, 2895,
	2893, 2883, 2896, 2896, 2897, 2898, 2900, 2901,
	2899, 2883, 2902, 2902, 2903, 2904, 2906, 2907,
	2905, 2883, 2908, 2908, 2909, 2910, 2912, 2913,
	2911, 1885, 2914, 2914, 2915, 2916, 2918, 2919,
	2917, 1885, 2920, 2920, 2921, 2922, 2923, 2923,
	2923, 2924, 2925, 2923, 2923, 2923, 71, 2926,
	2926, 2927, 2928, 2929, 2930, 71, 2931, 2931,
	2932, 2933, 2934, 2935, 2936, 2934, 2934, 2934,
	71, 2937, 2937, 71, 2939, 2938, 71, 2941,
	2940, 71, 2943, 2942, 71, 2945, 2944, 71,
	2947, 2946, 71, 2949, 2948, 71, 2951, 2950,
	71, 2953, 2952, 71, 2954, 2954, 2829, 2955,
	2955, 2829, 2956, 2956, 2957, 2958, 2959, 2960,
	2829, 2961, 2961, 2829, 2962, 2962, 2829, 2963,
	2963, 2829, 2964, 2964, 2965, 2966, 2967, 2968,
	2829, 2969, 2969, 2829, 2970, 2970, 2971, 2972,
	2973, 2974, 2829, 2975, 2976, 2977, 2978, 2975,
	2976, 2977, 2978, 2829, 2979, 2979, 2829, 2980,
	2980, 2981, 2982, 2983, 2984, 2829, 2985, 2986,
	2985, 2986, 2829, 2987, 2987, 2829, 2988, 2988,
	2829, 2989, 2989, 2829, 2990, 2990, 2829, 2991,
	2991, 2992, 2993, 2994, 2995, 2829, 2996, 2996,
	2997, 2998, 2999, 3000, 2829, 3001, 3001, 2829,
	3002, 3002, 2829, 3003, 3003, 3004, 3005, 3006,
	3007, 2829, 3008, 3008, 2829, 3009, 3009, 2829,
	3010, 3010, 2829, 3011, 3011, 3012, 3013, 3014,
	3015, 2829, 3016, 3017, 3018, 3016, 3017, 3018,
	2829, 3019, 3019, 2829, 3020, 3020, 2829, 3021,
	3021, 2829, 3022, 3022, 3023, 3024, 3025, 3026,
	2829, 3027, 3028, 3027, 3028, 2829, 3029, 3029,
	2829, 3030, 3030, 2829, 3031, 3031, 3032, 3033,
	3034, 3035, 2829, 3036, 3036, 2829, 3037, 3037,
	2829, 3038, 3038, 2829, 3039, 3039, 3040, 3041,
	3042, 3043, 2829, 3044, 3044, 3045, 3046, 3047,
	3048, 2829, 3049, 3049, 2829, 3050, 3050, 2829,
	3051, 3052, 2829, 3053, 2829, 3054, 3054, 3055,
	3056, 3057, 3058, 2829, 3059, 2829, 3060, 3060,
	3061, 3062, 3063, 3064, 2829, 3065, 3065, 2829,
	3066, 3066, 2829, 3067, 3067, 2829, 3068, 3068,
	2829, 3069, 3069, 3070, 3071, 3072, 3073, 2829,
	3074, 3074, 2829, 3075, 3075, 2829, 3076, 3076,
	2829, 3077, 3077, 2829, 3078, 3078, 2829, 3079,
	3079, 2829, 3080, 3080, 2829, 3081, 3081, 3082,
	3083, 3084, 3085, 2829, 3086, 3087, 3086, 3087,
	2829, 3088, 3088, 2829, 3089, 3089, 3090, 3091,
	3092, 3093, 2829, 3094, 3094, 3095, 3096, 3097,
	3098, 2829, 3099, 3100, 3101, 3102, 3101, 3102,
	2829, 3103, 2829, 3104, 3104, 3105, 3106, 3107,
	3108, 2829, 3109, 2829, 3110, 3110, 3111, 3112,
	3113, 3114, 2829, 3115, 3115, 2829, 3116, 3116,
	3117, 3118, 3119, 3120, 2829, 3121, 3121, 3122,
	3123, 3124, 3125, 2829, 3126, 3127, 3126, 3127,
	2829, 3128, 3128, 2829, 3129, 3129, 2829, 3130,
	3130, 2829, 3131, 3131, 3132, 3133, 3134, 3135,
	2829, 3136, 3136, 3137, 3138, 3139, 3140, 2829,
	3141, 3142, 3143, 3141, 3142, 3143, 2829, 3144,
	3144, 2829, 3145, 3145, 2829, 3146, 3146, 2829,
	3147, 3147, 3148, 3149, 3150, 3151, 2829, 3152,
	3152, 2829, 3153, 3153, 3154, 3155, 3156, 3157,
	2829, 3158, 3158, 3159, 3160, 3161, 3161, 3162,
	3163, 2829, 3164, 3164, 2829, 3165, 3165, 3166,
	3167, 3168, 3169, 3170, 2829, 3171, 3171, 3172,
	3173, 3174, 3174, 3175, 3176, 2829, 3177, 3177,
	2829, 3178, 3178, 2829, 3179, 3179, 2829, 3180,
	3180, 2829, 3181, 3181, 3182, 3183, 3184, 3185,
	2829, 3186, 3186, 2829, 3187, 3187, 2829, 3188,
	3188, 3189, 3190, 3191, 3192, 2829, 3193, 3194,
	3195, 3193, 3194, 3195, 2829, 3196, 3196, 3197,
	3198, 3199, 3200, 2829, 3201, 3201, 2829, 3202,
	3202, 2829, 3203, 3203, 2829, 3204, 3204, 3205,
	3206, 3207, 3208, 2829, 3209, 3209, 3210, 3211,
	3212, 3213, 2829, 3214, 3215, 3216, 3217, 3214,
	3215, 3216, 3217, 2829, 3218, 3218, 2829, 3219,
	3219, 3220, 3221, 3222, 3223, 2829, 3224, 3224,
	2829, 3225, 3225, 3226, 3227, 3228, 3229, 2829,
	3230, 3230, 2829, 3231, 3231, 3232, 3233, 3234,
	3235, 2829, 3236, 3236, 2829, 3237, 3237, 2829,
	3238, 3238, 2829, 3239, 3239, 3240, 3241, 3242,
	3243, 2829, 3244, 3245, 3246, 3244, 3245, 3246,
	2829, 3247, 3247, 2829, 3248, 3248, 2829, 3249,
	3249, 3250, 3251, 3252, 3253, 2829, 3254, 3254,
	2829, 3255, 3255, 3256, 3257, 3258, 3259, 2829,
	3260, 3260, 2829, 3261, 3261, 2829, 3263, 3262,
	3264, 3264, 3265, 3266, 3268, 3269, 3267, 3262,
	3270, 3270, 2829, 3271, 3271, 2829, 3272, 3272,
	3273, 3274, 3275, 3276, 2829, 3277, 3277, 3277,
	3277, 3277, 3277, 71, 3278, 3278, 3278, 3278,
	71, 3279, 3279, 3279, 3279, 71, 3280, 1885,
	3281, 3281, 3282, 3283, 3285, 3286, 3284, 1885,
	3287, 3287, 3288, 3289, 3291, 3292, 3290, 1885,
	3293, 3293, 3294, 3295, 3297, 3298, 3296, 1885,
	3299, 3299, 3300, 3301, 3303, 3304, 3302, 3302,
	3302, 71, 3305, 3305, 3306, 3307, 3308, 3309,
	71, 3305, 3305, 3306, 3307, 3310, 3308, 3309,
	3310, 3310, 3310, 71, 3311, 3311, 71, 3313,
	3312, 71, 3315, 3314, 71, 3317, 3316, 71,
	3318, 3318, 3318, 3318, 71, 3319, 3319, 71,
	3320, 1885, 3321, 3321, 3322, 3323, 3325, 3326,
	3324, 1885, 3327, 3327, 3328, 3329, 3331, 3332,
	3330, 1885, 3333, 3333, 3334, 3335, 3337, 3338,
	3336, 1885, 3339, 3339, 3340, 3341, 3343, 3344,
	3342, 1885, 3345, 3345, 3346, 3347, 3349, 3350,
	3348, 1885, 3351, 3351, 3352, 3353, 3354, 3356,
	3357, 3355, 3355, 3355, 2556, 3358, 3358, 3359,
	3360, 3361, 3362, 2556, 3364, 3364, 3365, 3366,
	3368, 3369, 3367, 3367, 3367, 3363, 3370, 3370,
	3370, 3363, 3372, 3371, 3371, 3371, 3363, 3373,
	3373, 3373, 3363, 3375, 3374, 3374, 3374, 3363,
	3377, 3376, 3376, 3376, 3363, 3378, 3378, 3378,
	3363, 3380, 3379, 3379, 3379, 3363, 3381, 3381,
	3381, 3381, 3382, 3382, 3382, 3363, 3383, 3383,
	3383, 3383, 71, 3384, 3363, 3380, 3363, 3377,
	3363, 3385, 3363, 3375, 3363, 3387, 3386, 71,
	3388, 3388, 3388, 2556, 3358, 3358, 3359, 3360,
	3361, 3362, 3389, 3389, 3389, 2556, 3391, 3390,
	71, 3393, 3392, 71, 3395, 3394, 71, 3396,
	1885, 3397, 3397, 3398, 3399, 3401, 3402, 3400,
	1885, 3403, 3403, 3404, 3405, 3407, 3408, 3406,
	1885, 3409, 3409, 3410, 3411, 3413, 3414, 3412,
	1885, 3415, 3415, 3416, 3417, 3419, 3420, 3418,
	1885, 3421, 3421, 3422, 3423, 3425, 3426, 3424,
	1885, 3427, 3427, 3428, 3429, 3430, 3432, 3433,
	3431, 3431, 3431, 2556, 3434, 3434, 3434, 3434,
	2556, 3435, 3435, 3435, 2556, 3434, 3434, 3434,
	3434, 3436, 3436, 3436, 2556, 3438, 3437, 71,
	3440, 3439, 71, 3442, 3441, 71, 3443, 1885,
	3444, 3444, 3445, 3446, 3448, 3449, 3447, 1885,
	3450, 3450, 3451, 3452, 3454, 3455, 3453, 1885,
	3456, 3456, 3457, 3458, 3460, 3461, 3459, 1885,
	3462, 3462, 3463, 3464, 3466, 3467, 3465, 1885,
	3468, 3468, 3469, 3470, 3472, 3473, 3471, 1885,
	3474, 3474, 3475, 3476, 3478, 3479, 3477, 3477,
	3477, 2556, 3480, 3480, 3480, 2556, 3481, 3481,
	3482, 3483, 3484, 3485, 3486, 3486, 3487, 3488,
	3477, 3477, 3477, 2556, 3490, 3489, 2556, 3492,
	3491, 71, 3494, 3493, 71, 3496, 3495, 71,
	3497, 1885, 3498, 3498, 3499, 3500, 3502, 3503,
	3501, 1885, 3504, 3504, 3505, 3506, 3507, 3508,
	3509, 3507, 1862, 3510, 3511, 3510, 3510, 3510,
	3511, 1862, 3513, 3512, 71, 3514, 1885, 3515,
	3515, 3516, 3517, 3519, 3520, 3518, 1885, 3521,
	3521, 3522, 3523, 3525, 3526, 3524, 3524, 3524,
	2556, 3527, 3527, 3527, 2556, 3528, 3528, 3528,
	2556, 3529, 3529, 3529, 2556, 3531, 3530, 3532,
	3532, 3532, 2556, 3533, 3533, 3533, 2556, 3534,
	3534, 3534, 2556, 3535, 3535, 3535, 2556, 3537,
	3531, 3537, 3537, 3537, 3536, 3539, 3538, 71,
	3540, 3540, 3540, 2556, 3541, 3541, 3541, 2556,
	3543, 3542, 3544, 3544, 3544, 2556, 3545, 3545,
	3545, 2556, 3546, 3543, 3546, 3546, 3546, 3542,
	3547, 3547, 3547, 2556, 3548, 3548, 3548, 2556,
	3549, 3542, 3550, 3550, 3550, 2556, 3551, 3551,
	3551, 2556, 3552, 3549, 3552, 3552, 3552, 3542,
	3553, 1885, 3554, 3554, 3555, 3556, 3558, 3559,
	3557, 1885, 3560, 3560, 3561, 3562, 3564, 3565,
	3563, 1885, 3566, 3566, 3567, 3568, 3570, 3571,
	3569, 1885, 3573, 3573, 3574, 3575, 3576, 3577,
	3572, 3572, 3572, 71, 3578, 3578, 3578, 3578,
	71, 3580, 3579, 71, 3582, 3581, 71, 3583,
	1885, 3584, 3584, 3585, 3586, 3588, 3589, 3587,
	1885, 3591, 3591, 3592, 3593, 3594, 3595, 3590,
	3590, 3590, 71, 3596, 3596, 3597, 3598, 3599,
	3600, 71, 3602, 3602, 3603, 3604, 3605, 3606,
	3601, 3601, 3601, 71, 3607, 3607, 3607, 3607,
	71, 3609, 3608, 71, 3611, 3610, 71, 3613,
	3613, 3614, 3615, 3616, 3617, 3617, 3617, 3618,
	3619, 3620, 3621, 3617, 3617, 3617, 3612, 3622,
	3622, 3623, 3624, 3625, 3626, 69, 3627, 3626,
	3618, 3619, 3628, 3629, 3630, 3631, 3632, 3633,
	69, 69, 3626, 69, 3626, 69, 3626, 69,
	783, 3635, 3635, 3614, 3636, 3637, 3617, 3638,
	3639, 3640, 3641, 3642, 3643, 3644, 3645, 3646,
	3647, 3648, 3649, 3650, 3651, 3652, 3617, 3617,
	3638, 3639, 3640, 3641, 3642, 3643, 3644, 3645,
	3646, 3647, 3648, 3649, 3650, 3651, 3652, 3618,
	3619, 3653, 3654, 3617, 3617, 3617, 3634, 3635,
	3635, 3614, 3636, 3637, 3617, 3657, 3658, 3659,
	3660, 3661, 3662, 3663, 3664, 3665, 3666, 3667,
	3668, 3669, 3670, 3671, 3617, 3617, 3657, 3658,
	3659, 3660, 3661, 3662, 3663, 3664, 3665, 3666,
	3667, 3668, 3669, 3670, 3671, 3618, 3619, 3653,
	3654, 3617, 3656, 3617, 3617, 3655, 3673, 3673,
	3674, 3675, 3676, 3677, 3677, 3677, 3678, 3679,
	3680, 3681, 3677, 3677, 3677, 3672, 3613, 3613,
	3614, 3682, 3683, 3617, 3657, 3658, 3659, 3660,
	3661, 3662, 3663, 3664, 3665, 3666, 3667, 3668,
	3669, 3670, 3671, 3617, 3617, 3657, 3658, 3659,
	3660, 3661, 3662, 3663, 3664, 3665, 3666, 3667,
	3668, 3669, 3670, 3671, 3618, 3619, 3684, 3685,
	3617, 3656, 3617, 3617, 3655, 3686, 3686, 3614,
	3687, 3688, 3617, 3617, 3617, 83, 84, 3689,
	3690, 3617, 3617, 3617, 783, 3691, 3691, 3623,
	3692, 3693, 3626, 69, 3627, 3626, 83, 84,
	3689, 3694, 101, 102, 3689, 3695, 69, 69,
	3626, 69, 3626, 69, 3626, 69, 783, 3622,
	3622, 3623, 3624, 3625, 3626, 69, 3698, 3699,
	3700, 3701, 3702, 3703, 3704, 3705, 3706, 3707,
	3708, 3709, 3710, 3711, 3712, 3627, 3626, 3698,
	3699, 3700, 3701, 3702, 3703, 3704, 3705, 3706,
	3707, 3708, 3709, 3710, 3711, 3712, 3618, 3619,
	3628, 3629, 3630, 3631, 3632, 3633, 69, 69,
	3626, 3697, 69, 3626, 69, 3626, 69, 3696,
	3691, 3691, 3623, 3692, 3693, 3626, 69, 3698,
	3699, 3700, 3701, 3702, 3703, 3704, 3705, 3706,
	3707, 3708, 3709, 3710, 3711, 3712, 3627, 3626,
	3698, 3699, 3700, 3701, 3702, 3703, 3704, 3705,
	3706, 3707, 3708, 3709, 3710, 3711, 3712, 83,
	84, 3713, 3694, 101, 102, 3713, 3695, 69,
	69, 3626, 3697, 69, 3626, 69, 3626, 69,
	3696, 690, 690, 690, 944, 941, 944, 943,
	944, 941, 945, 941, 940, 690, 690, 690,
	1093, 1093, 1094, 1095, 1062, 1063, 1064, 1062,
	1096, 1097, 1062, 1062, 1062, 1068, 690, 1108,
	1108, 1109, 1110, 1103, 1111, 1112, 1113, 1113,
	1114, 1115, 1103, 1103, 1103, 1102, 1117, 1116,
	1102, 690, 1127, 1127, 1128, 1129, 1130, 1131,
	1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139,
	1140, 1141, 1142, 1143, 1144, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
	1141, 1142, 1143, 1144, 1145, 1146, 1147, 1147,
	1148, 1149, 1118, 1172, 1171, 1118, 690, 1633,
	1633, 1634, 1635, 1636, 1637, 1638, 1638, 1639,
	1640, 1629, 1629, 1629, 1625, 1642, 1641, 1625,
	1661, 1661, 1662, 1663, 1665, 1666, 1664, 1664,
	1664, 1625, 1611, 1668, 1668, 1669, 1670, 1671,
	1672, 1673, 1673, 1674, 1675, 1664, 1664, 1664,
	1625, 1677, 1676, 1625, 1679, 1678, 1611, 690,
	690, 690, 690, 690, 690, 690, 690, 690,
	2080, 2080, 2081, 2082, 2083, 2084, 2085, 2085,
	2086, 2087, 2079, 2079, 2079, 2070, 2089, 2088,
	2070, 690, 690, 2253, 2253, 2254, 2255, 2256,
	2257, 2202, 2202, 2258, 2259, 2093, 2261, 2260,
	2093, 2235, 2235, 2236, 2237, 2239, 2240, 2202,
	2202, 2241, 2242, 2238, 2093, 2273, 2272, 2093,
	2216, 2216, 2217, 2218, 2220, 2221, 2202, 2202,
	2222, 2223, 2219, 2093, 2286, 2285, 2093, 2196,
	2196, 2197, 2198, 2200, 2201, 2202, 2202, 2203,
	2204, 2199, 2093, 2299, 2298, 2093, 690, 690,
	690, 690, 2497, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2505, 2506, 2507, 2496,
	2526, 2525, 71, 690, 2564, 2564, 2565, 2566,
	2567, 2568, 2569, 2569, 2570, 2571, 2560, 2560,
	2560, 2556, 2573, 2572, 2556, 690, 2606, 2606,
	2607, 2608, 2609, 2610, 2611, 2611, 2612, 2613,
	2602, 2602, 2602, 2556, 2615, 2614, 2556, 690,
	2660, 2660, 2661, 2662, 2666, 2666, 2666, 2666,
	2671, 2672, 2666, 2666, 2673, 2674, 2679, 2684,
	2683, 2679, 2657, 2657, 2658, 2659, 2680, 2667,
	2668, 2680, 2680, 2680, 2679, 2682, 2681, 2679,
	2680, 2657, 2657, 2658, 2659, 2660, 2660, 2661,
	2662, 2663, 2663, 2664, 2665, 2666, 2666, 2666,
	2666, 2667, 2668, 2666, 2666, 2669, 2670, 2671,
	2672, 2666, 2666, 2673, 2674, 2675, 2676, 2666,
	2666, 2677, 2678, 2680, 2680, 2680, 2679, 2682,
	2684, 2686, 2681, 2683, 2685, 2679, 690, 690,
	690, 690, 690, 690, 690, 3481, 3481, 3482,
	3483, 3484, 3485, 3486, 3486, 3487, 3488, 3477,
	3477, 3477, 2556, 3490, 3489, 2556, 690, 690,
	690, 690, 690, 690, 0
};

static const short _zone_scanner_trans_targs[] = {
	0, 1, 1, 1, 2, 4, 17, 36,
	50, 57, 143, 73, 77, 85, 91, 107,
	110, 117, 128, 138, 1127, 151, 1132, 264,
	0, 3, 3, 3, 2, 166, 166, 166,
	166, 166, 3, 169, 0, 3, 3, 3,
	4, 17, 36, 50, 57, 62, 73, 77,
	85, 91, 107, 110, 117, 128, 138, 3,
	169, 0, 5, 5, 5, 230, 233, 237,
	5, 10, 6, 11, 20, 6, 5, 0,
	5, 5, 9, 5, 10, 11, 20, 0,
	7, 7, 7, 1127, 8, 0, 7, 7,
	7, 1127, 8, 8, 1127, 6, 6, 10,
	5, 12, 12, 12, 13, 1133, 176, 244,
	12, 12, 12, 13, 1133, 176, 244, 13,
	1128, 14, 0, 14, 14, 15, 172, 179,
	180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 1135, 239, 1133,
	240, 1136, 242, 0, 16, 16, 16, 1129,
	267, 0, 16, 16, 16, 1129, 267, 18,
	22, 29, 32, 19, 5, 5, 5, 5,
	10, 6, 11, 20, 21, 21, 21, 13,
	21, 21, 21, 13, 23, 28, 24, 25,
	26, 27, 5, 5, 5, 5, 10, 6,
	11, 20, 5, 5, 5, 5, 10, 6,
	11, 20, 30, 31, 5, 5, 5, 5,
	10, 6, 11, 20, 33, 34, 35, 5,
	5, 5, 5, 10, 6, 11, 20, 37,
	41, 49, 38, 39, 40, 5, 5, 5,
	5, 10, 6, 11, 20, 42, 45, 43,
	44, 5, 5, 5, 5, 10, 6, 11,
	20, 46, 47, 48, 5, 5, 5, 5,
	10, 6, 11, 20, 5, 5, 5, 5,
	10, 6, 11, 20, 51, 52, 53, 55,
	54, 5, 5, 5, 5, 10, 6, 11,
	20, 56, 5, 5, 5, 5, 10, 6,
	11, 20, 58, 59, 60, 61, 5, 5,
	5, 5, 10, 6, 11, 20, 63, 66,
	64, 64, 64, 64, 141, 64, 64, 64,
	4, 17, 36, 50, 57, 65, 73, 77,
	85, 91, 107, 110, 117, 128, 138, 64,
	141, 67, 68, 69, 70, 71, 72, 5,
	5, 5, 5, 10, 6, 11, 20, 74,
	76, 75, 5, 5, 5, 5, 10, 6,
	11, 20, 5, 5, 5, 5, 10, 6,
	11, 20, 78, 80, 82, 84, 79, 5,
	5, 5, 5, 10, 6, 11, 20, 81,
	5, 5, 5, 5, 10, 6, 11, 20,
	83, 5, 5, 5, 5, 10, 6, 11,
	20, 5, 5, 5, 5, 10, 6, 11,
	20, 86, 90, 87, 88, 89, 5, 5,
	5, 5, 10, 6, 11, 20, 5, 5,
	5, 5, 10, 6, 11, 20, 92, 96,
	98, 93, 94, 95, 5, 5, 5, 5,
	10, 6, 11, 20, 97, 5, 5, 5,
	5, 10, 6, 11, 20, 5, 5, 5,
	99, 5, 10, 6, 11, 20, 100, 5,
	5, 5, 101, 5, 10, 6, 11, 20,
	5, 5, 5, 102, 5, 10, 6, 11,
	20, 103, 104, 105, 106, 5, 5, 5,
	5, 10, 6, 11, 20, 108, 109, 5,
	5, 5, 5, 10, 6, 11, 20, 111,
	112, 116, 5, 5, 5, 5, 10, 6,
	11, 20, 113, 114, 115, 5, 5, 5,
	5, 10, 6, 11, 20, 5, 5, 5,
	5, 10, 6, 11, 20, 118, 120, 122,
	124, 119, 5, 5, 5, 5, 10, 6,
	11, 20, 121, 5, 5, 5, 5, 10,
	6, 11, 20, 123, 5, 5, 5, 5,
	10, 6, 11, 20, 125, 126, 127, 5,
	5, 5, 5, 10, 6, 11, 20, 129,
	132, 134, 130, 131, 5, 5, 5, 5,
	10, 6, 11, 20, 133, 5, 5, 5,
	5, 10, 6, 11, 20, 135, 136, 0,
	137, 0, 5, 5, 5, 137, 5, 10,
	6, 11, 20, 139, 140, 5, 5, 5,
	5, 10, 6, 11, 20, 141, 64, 142,
	142, 142, 1130, 265, 144, 145, 145, 145,
	145, 150, 145, 145, 145, 146, 4, 17,
	36, 50, 57, 65, 73, 77, 85, 91,
	107, 110, 117, 128, 138, 145, 150, 64,
	64, 64, 146, 147, 147, 147, 147, 147,
	64, 141, 148, 148, 149, 149, 149, 149,
	149, 64, 64, 64, 148, 64, 141, 150,
	145, 151, 1127, 0, 153, 195, 201, 154,
	155, 156, 157, 158, 159, 1131, 0, 161,
	161, 161, 161, 162, 161, 161, 161, 161,
	162, 162, 0, 161, 0, 164, 164, 164,
	164, 165, 164, 164, 164, 164, 165, 165,
	164, 167, 167, 168, 168, 168, 168, 168,
	3, 3, 3, 167, 3, 169, 169, 3,
	0, 171, 171, 171, 171, 246, 247, 248,
	171, 171, 171, 171, 246, 247, 248, 0,
	173, 173, 173, 1128, 13, 1133, 176, 1134,
	244, 173, 173, 173, 1128, 1134, 174, 174,
	174, 1132, 175, 175, 1132, 177, 177, 177,
	1127, 8, 177, 177, 177, 8, 178, 178,
	178, 193, 228, 193, 1135, 0, 196, 197,
	198, 199, 200, 1131, 202, 203, 1131, 0,
	174, 174, 174, 1132, 175, 0, 206, 206,
	206, 1130, 207, 206, 206, 206, 1130, 207,
	207, 1130, 0, 209, 209, 209, 1135, 193,
	1136, 228, 209, 209, 209, 1135, 1136, 225,
	0, 225, 225, 225, 226, 174, 174, 174,
	1132, 175, 227, 1132, 227, 227, 175, 227,
	227, 227, 175, 229, 229, 229, 193, 229,
	229, 229, 193, 231, 232, 5, 5, 5,
	5, 10, 6, 11, 20, 234, 235, 236,
	5, 5, 5, 5, 10, 6, 11, 20,
	238, 5, 5, 5, 5, 10, 6, 11,
	20, 239, 1135, 241, 241, 241, 1127, 241,
	241, 241, 1127, 243, 243, 243, 243, 243,
	243, 245, 245, 245, 245, 245, 245, 246,
	171, 178, 178, 178, 193, 228, 249, 249,
	249, 249, 249, 249, 0, 264, 1132, 265,
	1130, 267, 1129, 269, 1137, 269, 1137, 0,
	271, 277, 278, 273, 1138, 271, 272, 273,
	1138, 271, 273, 274, 0, 275, 276, 1138,
	271, 272, 273, 1138, 0, 280, 285, 281,
	1139, 1140, 0, 282, 283, 284, 1139, 280,
	1140, 281, 285, 286, 287, 0, 288, 289,
	290, 285, 286, 287, 0, 292, 292, 292,
	292, 299, 0, 293, 0, 294, 294, 294,
	293, 296, 296, 296, 296, 296, 1141, 295,
	0, 294, 294, 294, 1141, 295, 295, 1141,
	297, 0, 297, 298, 298, 298, 298, 298,
	294, 294, 294, 297, 1141, 295, 299, 292,
	0, 301, 301, 301, 301, 311, 302, 310,
	306, 302, 303, 306, 0, 304, 304, 304,
	302, 306, 1142, 305, 304, 304, 304, 1142,
	305, 305, 1142, 307, 0, 308, 309, 302,
	303, 306, 311, 301, 313, 313, 313, 313,
	328, 314, 0, 0, 315, 315, 315, 1143,
	319, 325, 0, 315, 315, 315, 316, 324,
	320, 1143, 319, 325, 0, 316, 317, 320,
	318, 318, 318, 316, 320, 1143, 319, 318,
	318, 318, 319, 1143, 321, 0, 322, 323,
	316, 317, 320, 325, 1144, 326, 326, 326,
	326, 327, 327, 326, 328, 313, 0, 330,
	331, 332, 335, 333, 333, 333, 333, 333,
	334, 1145, 1146, 1147, 334, 333, 0, 337,
	337, 337, 337, 342, 1148, 1149, 1150, 337,
	337, 337, 338, 343, 360, 374, 381, 386,
	394, 398, 406, 412, 428, 431, 438, 449,
	459, 337, 342, 1148, 1149, 1150, 337, 337,
	337, 339, 462, 466, 337, 342, 1148, 1149,
	1150, 340, 341, 337, 337, 337, 337, 342,
	1148, 1149, 1150, 342, 337, 344, 346, 353,
	356, 345, 337, 337, 337, 337, 342, 1148,
	1149, 1150, 347, 352, 348, 349, 350, 351,
	337, 337, 337, 337, 342, 1148, 1149, 1150,
	337, 337, 337, 337, 342, 1148, 1149, 1150,
	354, 355, 337, 337, 337, 337, 342, 1148,
	1149, 1150, 357, 358, 359, 337, 337, 337,
	337, 342, 1148, 1149, 1150, 361, 365, 373,
	362, 363, 364, 337, 337, 337, 337, 342,
	1148, 1149, 1150, 366, 369, 367, 368, 337,
	337, 337, 337, 342, 1148, 1149, 1150, 370,
	371, 372, 337, 337, 337, 337, 342, 1148,
	1149, 1150, 337, 337, 337, 337, 342, 1148,
	1149, 1150, 375, 376, 377, 379, 378, 337,
	337, 337, 337, 342, 1148, 1149, 1150, 380,
	337, 337, 337, 337, 342, 1148, 1149, 1150,
	382, 383, 384, 385, 337, 337, 337, 337,
	342, 1148, 1149, 1150, 387, 388, 389, 390,
	391, 392, 393, 337, 337, 337, 337, 342,
	1148, 1149, 1150, 395, 397, 396, 337, 337,
	337, 337, 342, 1148, 1149, 1150, 337, 337,
	337, 337, 342, 1148, 1149, 1150, 399, 401,
	403, 405, 400, 337, 337, 337, 337, 342,
	1148, 1149, 1150, 402, 337, 337, 337, 337,
	342, 1148, 1149, 1150, 404, 337, 337, 337,
	337, 342, 1148, 1149, 1150, 337, 337, 337,
	337, 342, 1148, 1149, 1150, 407, 411, 408,
	409, 410, 337, 337, 337, 337, 342, 1148,
	1149, 1150, 337, 337, 337, 337, 342, 1148,
	1149, 1150, 413, 417, 419, 414, 415, 416,
	337, 337, 337, 337, 342, 1148, 1149, 1150,
	418, 337, 337, 337, 337, 342, 1148, 1149,
	1150, 337, 337, 337, 420, 337, 342, 1148,
	1149, 1150, 421, 337, 337, 337, 422, 337,
	342, 1148, 1149, 1150, 337, 337, 337, 423,
	337, 342, 1148, 1149, 1150, 424, 425, 426,
	427, 337, 337, 337, 337, 342, 1148, 1149,
	1150, 429, 430, 337, 337, 337, 337, 342,
	1148, 1149, 1150, 432, 433, 437, 337, 337,
	337, 337, 342, 1148, 1149, 1150, 434, 435,
	436, 337, 337, 337, 337, 342, 1148, 1149,
	1150, 337, 337, 337, 337, 342, 1148, 1149,
	1150, 439, 441, 443, 445, 440, 337, 337,
	337, 337, 342, 1148, 1149, 1150, 442, 337,
	337, 337, 337, 342, 1148, 1149, 1150, 444,
	337, 337, 337, 337, 342, 1148, 1149, 1150,
	446, 447, 448, 337, 337, 337, 337, 342,
	1148, 1149, 1150, 450, 453, 455, 451, 452,
	337, 337, 337, 337, 342, 1148, 1149, 1150,
	454, 337, 337, 337, 337, 342, 1148, 1149,
	1150, 456, 457, 458, 337, 337, 337, 458,
	337, 342, 1148, 1149, 1150, 460, 461, 337,
	337, 337, 337, 342, 1148, 1149, 1150, 463,
	464, 465, 337, 337, 337, 337, 342, 1148,
	1149, 1150, 467, 337, 337, 337, 337, 342,
	1148, 1149, 1150, 0, 469, 469, 469, 469,
	476, 0, 470, 471, 471, 471, 470, 471,
	475, 0, 471, 471, 471, 472, 471, 475,
	473, 473, 473, 473, 473, 474, 1151, 1152,
	1153, 474, 473, 475, 471, 476, 469, 478,
	478, 478, 478, 486, 479, 485, 1154, 1154,
	1154, 485, 1155, 1154, 1158, 480, 480, 480,
	481, 480, 484, 482, 482, 482, 482, 482,
	483, 1155, 1156, 1157, 483, 482, 484, 480,
	480, 480, 480, 480, 484, 486, 478, 0,
	488, 489, 504, 543, 551, 564, 1159, 488,
	490, 491, 1159, 492, 1159, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503,
	1159, 505, 534, 506, 512, 507, 508, 509,
	510, 511, 1159, 513, 514, 515, 516, 525,
	517, 518, 519, 520, 521, 522, 523, 524,
	1159, 526, 527, 528, 529, 530, 531, 532,
	533, 1159, 535, 540, 536, 537, 538, 539,
	1159, 541, 542, 1159, 544, 545, 546, 547,
	548, 549, 550, 1159, 552, 553, 554, 555,
	556, 557, 558, 561, 559, 560, 1159, 562,
	563, 1159, 565, 566, 567, 570, 568, 569,
	1159, 571, 572, 573, 585, 588, 1159, 574,
	575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 1159, 586, 587, 1159, 589, 590,
	1159, 0, 592, 593, 599, 616, 619, 625,
	629, 1160, 592, 594, 595, 596, 597, 598,
	1160, 600, 606, 612, 601, 602, 603, 604,
	605, 1160, 607, 609, 608, 1160, 610, 611,
	1160, 613, 614, 615, 1160, 617, 618, 1160,
	620, 622, 621, 1160, 623, 624, 1160, 626,
	627, 628, 1160, 630, 631, 1160, 0, 633,
	1161, 633, 635, 1162, 637, 638, 638, 638,
	638, 667, 638, 638, 638, 639, 638, 667,
	640, 640, 640, 640, 666, 0, 640, 640,
	640, 641, 640, 666, 642, 642, 642, 641,
	642, 665, 642, 642, 642, 643, 642, 665,
	0, 644, 644, 644, 643, 662, 662, 662,
	662, 662, 644, 661, 644, 644, 644, 645,
	644, 661, 646, 646, 646, 645, 658, 658,
	658, 658, 658, 646, 657, 646, 646, 646,
	647, 646, 657, 648, 648, 648, 647, 654,
	654, 654, 654, 654, 648, 653, 648, 648,
	648, 649, 648, 653, 1163, 649, 650, 650,
	650, 650, 650, 651, 651, 652, 652, 652,
	652, 652, 1163, 651, 653, 648, 655, 655,
	656, 656, 656, 656, 656, 648, 648, 648,
	655, 648, 653, 657, 646, 659, 659, 660,
	660, 660, 660, 660, 646, 646, 646, 659,
	646, 657, 661, 644, 663, 663, 664, 664,
	664, 664, 664, 644, 644, 644, 663, 644,
	661, 665, 642, 666, 640, 667, 638, 669,
	670, 670, 670, 670, 672, 671, 670, 670,
	670, 670, 672, 1164, 672, 670, 674, 675,
	675, 675, 675, 677, 675, 675, 675, 676,
	675, 677, 1165, 677, 675, 679, 680, 680,
	680, 679, 680, 682, 680, 680, 680, 681,
	680, 682, 1166, 682, 680, 684, 0, 685,
	685, 685, 685, 686, 1167, 1168, 1169, 684,
	685, 685, 685, 685, 686, 1167, 1168, 1169,
	686, 685, 688, 1170, 688, 0, 690, 691,
	691, 691, 690, 691, 743, 691, 691, 691,
	692, 696, 738, 691, 743, 693, 693, 693,
	692, 693, 742, 693, 693, 693, 694, 693,
	742, 695, 695, 695, 740, 694, 695, 739,
	695, 695, 695, 695, 739, 697, 697, 697,
	697, 737, 698, 699, 699, 699, 698, 699,
	736, 699, 699, 699, 700, 704, 731, 699,
	736, 701, 701, 701, 700, 701, 735, 701,
	701, 701, 702, 701, 735, 703, 703, 703,
	733, 702, 703, 732, 703, 703, 703, 703,
	732, 705, 705, 705, 705, 730, 706, 707,
	707, 708, 708, 708, 727, 707, 729, 708,
	726, 1171, 1178, 1179, 708, 708, 708, 709,
	708, 726, 1171, 1178, 1179, 710, 710, 710,
	723, 709, 725, 710, 722, 1171, 1176, 1177,
	710, 710, 710, 711, 710, 722, 1176, 1177,
	712, 712, 712, 719, 711, 721, 712, 718,
	1171, 1174, 1175, 712, 712, 712, 713, 712,
	718, 1174, 1175, 714, 714, 714, 716, 713,
	714, 715, 1171, 1172, 1173, 714, 714, 714,
	714, 715, 1172, 1173, 715, 714, 714, 714,
	714, 717, 714, 715, 1171, 1172, 1173, 717,
	718, 712, 712, 712, 712, 720, 721, 712,
	718, 1171, 1174, 1175, 720, 722, 710, 710,
	710, 710, 724, 725, 710, 722, 1171, 1176,
	1177, 724, 726, 708, 708, 708, 708, 728,
	729, 708, 726, 1171, 1178, 1179, 728, 730,
	705, 705, 705, 705, 705, 730, 732, 703,
	703, 703, 703, 734, 703, 732, 734, 735,
	701, 736, 699, 737, 697, 697, 697, 697,
	697, 737, 739, 695, 695, 695, 695, 741,
	695, 739, 741, 742, 693, 743, 691, 745,
	746, 746, 746, 745, 746, 754, 746, 746,
	746, 747, 746, 754, 748, 748, 748, 747,
	748, 753, 748, 748, 748, 749, 748, 753,
	750, 750, 750, 749, 750, 752, 750, 750,
	750, 751, 750, 752, 1180, 752, 750, 753,
	748, 754, 746, 756, 757, 757, 757, 756,
	757, 771, 757, 757, 757, 758, 757, 771,
	759, 759, 759, 758, 759, 770, 760, 759,
	759, 759, 759, 770, 761, 761, 761, 761,
	769, 762, 761, 761, 761, 761, 769, 763,
	763, 763, 763, 768, 764, 763, 763, 763,
	763, 768, 765, 765, 765, 765, 767, 765,
	765, 765, 766, 765, 767, 1181, 767, 765,
	768, 763, 769, 761, 770, 759, 771, 757,
	773, 774, 774, 774, 774, 782, 775, 776,
	776, 776, 775, 776, 781, 776, 776, 776,
	777, 776, 781, 778, 778, 778, 778, 780,
	779, 1182, 780, 778, 781, 776, 782, 774,
	0, 783, 784, 783, 783, 785, 791, 783,
	790, 1183, 1184, 1185, 785, 791, 786, 0,
	787, 787, 788, 789, 783, 783, 783, 789,
	783, 790, 1183, 1184, 1185, 790, 783, 792,
	793, 793, 788, 795, 796, 796, 796, 795,
	796, 806, 796, 796, 796, 797, 796, 806,
	798, 798, 798, 798, 805, 799, 800, 800,
	800, 799, 800, 804, 0, 800, 800, 800,
	801, 800, 804, 802, 802, 802, 802, 802,
	803, 1186, 1187, 1188, 803, 802, 804, 800,
	805, 798, 806, 796, 808, 809, 809, 809,
	808, 809, 816, 809, 809, 809, 810, 809,
	816, 811, 811, 811, 810, 811, 815, 811,
	811, 811, 812, 811, 815, 813, 813, 813,
	813, 813, 814, 1189, 1190, 1191, 814, 813,
	815, 811, 816, 809, 818, 819, 819, 819,
	818, 819, 855, 0, 819, 819, 819, 820,
	834, 841, 848, 819, 855, 821, 821, 821,
	821, 833, 0, 822, 823, 823, 823, 822,
	823, 832, 823, 823, 823, 824, 823, 832,
	0, 825, 825, 825, 828, 828, 828, 830,
	830, 830, 1192, 825, 827, 1195, 1196, 828,
	829, 1193, 1194, 830, 831, 1197, 1198, 0,
	826, 827, 825, 829, 828, 831, 830, 832,
	823, 833, 821, 835, 835, 835, 835, 840,
	836, 837, 837, 837, 836, 837, 839, 0,
	837, 837, 837, 838, 837, 839, 0, 838,
	825, 825, 825, 828, 828, 828, 830, 830,
	830, 1192, 825, 827, 1195, 1196, 828, 829,
	1193, 1194, 830, 831, 1197, 1198, 839, 837,
	840, 835, 842, 842, 842, 842, 847, 843,
	844, 844, 844, 843, 844, 846, 844, 844,
	844, 845, 844, 846, 845, 825, 825, 825,
	828, 828, 828, 830, 830, 830, 1192, 825,
	827, 1195, 1196, 828, 829, 1193, 1194, 830,
	831, 1197, 1198, 846, 844, 847, 842, 849,
	849, 849, 849, 854, 850, 851, 851, 851,
	850, 851, 853, 851, 851, 851, 852, 851,
	853, 825, 825, 825, 828, 828, 828, 830,
	830, 830, 1192, 825, 827, 1195, 1196, 828,
	829, 1193, 1194, 830, 831, 1197, 1198, 853,
	851, 854, 849, 855, 819, 0, 857, 891,
	908, 922, 929, 934, 942, 946, 954, 960,
	976, 979, 986, 997, 1007, 858, 858, 858,
	882, 885, 889, 858, 881, 858, 858, 858,
	859, 858, 881, 860, 860, 860, 860, 880,
	861, 862, 862, 862, 861, 862, 879, 862,
	862, 862, 863, 862, 879, 864, 864, 864,
	863, 864, 878, 0, 864, 864, 864, 865,
	864, 878, 866, 866, 866, 865, 866, 877,
	866, 866, 866, 867, 866, 877, 868, 868,
	868, 867, 868, 876, 868, 868, 868, 869,
	868, 876, 870, 870, 870, 869, 870, 875,
	870, 870, 870, 871, 870, 875, 872, 872,
	872, 872, 874, 872, 872, 872, 873, 872,
	874, 1199, 874, 872, 875, 870, 876, 868,
	877, 866, 878, 864, 879, 862, 880, 860,
	881, 858, 883, 884, 858, 858, 858, 858,
	881, 886, 887, 888, 858, 858, 858, 858,
	881, 890, 858, 858, 858, 858, 881, 892,
	894, 901, 904, 893, 858, 858, 858, 858,
	881, 895, 900, 896, 897, 898, 899, 858,
	858, 858, 858, 881, 858, 858, 858, 858,
	881, 902, 903, 858, 858, 858, 858, 881,
	905, 906, 907, 858, 858, 858, 858, 881,
	909, 913, 921, 910, 911, 912, 858, 858,
	858, 858, 881, 914, 917, 915, 916, 858,
	858, 858, 858, 881, 918, 919, 920, 858,
	858, 858, 858, 881, 858, 858, 858, 858,
	881, 923, 924, 925, 927, 926, 858, 858,
	858, 858, 881, 928, 858, 858, 858, 858,
	881, 930, 931, 932, 933, 858, 858, 858,
	858, 881, 935, 936, 937, 938, 939, 940,
	941, 858, 858, 858, 858, 881, 943, 945,
	944, 858, 858, 858, 858, 881, 858, 858,
	858, 858, 881, 947, 949, 951, 953, 948,
	858, 858, 858, 858, 881, 950, 858, 858,
	858, 858, 881, 952, 858, 858, 858, 858,
	881, 858, 858, 858, 858, 881, 955, 959,
	956, 957, 958, 858, 858, 858, 858, 881,
	858, 858, 858, 858, 881, 961, 965, 967,
	962, 963, 964, 858, 858, 858, 858, 881,
	966, 858, 858, 858, 858, 881, 858, 858,
	858, 968, 858, 881, 969, 858, 858, 858,
	970, 858, 881, 858, 858, 858, 971, 858,
	881, 972, 973, 974, 975, 858, 858, 858,
	858, 881, 977, 978, 858, 858, 858, 858,
	881, 980, 981, 985, 858, 858, 858, 858,
	881, 982, 983, 984, 858, 858, 858, 858,
	881, 858, 858, 858, 858, 881, 987, 989,
	991, 993, 988, 858, 858, 858, 858, 881,
	990, 858, 858, 858, 858, 881, 992, 858,
	858, 858, 858, 881, 994, 995, 996, 858,
	858, 858, 858, 881, 998, 1001, 1003, 999,
	1000, 858, 858, 858, 858, 881, 1002, 858,
	858, 858, 858, 881, 1004, 1005, 0, 1006,
	858, 858, 858, 1006, 858, 881, 1008, 1009,
	858, 858, 858, 858, 881, 1011, 1012, 1200,
	1014, 1015, 1015, 1015, 1014, 1015, 1023, 1015,
	1015, 1015, 1016, 1015, 1023, 1017, 1017, 1017,
	1016, 1017, 1022, 1017, 1017, 1017, 1018, 1017,
	1022, 1019, 1019, 1019, 1019, 1021, 1020, 1201,
	1021, 1019, 1022, 1017, 1023, 1015, 1025, 1202,
	1027, 1028, 1028, 1028, 1027, 1028, 1054, 1028,
	1028, 1028, 1029, 1028, 1054, 1030, 1030, 1030,
	1029, 1030, 1053, 1030, 1030, 1030, 1031, 1030,
	1053, 1032, 1032, 1032, 1031, 1032, 1052, 1032,
	1032, 1032, 1033, 1050, 1032, 1052, 1034, 1034,
	1034, 1034, 1049, 0, 1034, 1034, 1034, 1035,
	1034, 1049, 1036, 1037, 1047, 1038, 1039, 1046,
	1040, 1044, 1041, 1042, 1042, 1043, 1035, 1203,
	1045, 1048, 1049, 1034, 1051, 1050, 1052, 1032,
	1053, 1030, 1054, 1028, 1056, 1057, 1057, 1057,
	1056, 1057, 1067, 1057, 1057, 1057, 1058, 1057,
	1067, 1059, 1059, 1059, 1058, 1059, 1066, 1059,
	1059, 1059, 1060, 1059, 1066, 1061, 1061, 1061,
	1060, 1061, 1065, 1061, 1061, 1061, 1062, 1063,
	1061, 1065, 1204, 1064, 1063, 1065, 1061, 1066,
	1059, 1067, 1057, 1069, 1070, 1070, 1070, 1069,
	1070, 1080, 1070, 1070, 1070, 1071, 1070, 1080,
	1072, 1072, 1072, 1071, 1072, 1079, 1072, 1072,
	1072, 1073, 1072, 1079, 1074, 1074, 1074, 1073,
	1074, 1078, 1074, 1074, 1074, 1075, 1074, 1078,
	1076, 1076, 1076, 1076, 1076, 1077, 1205, 1206,
	1207, 1077, 1076, 1078, 1074, 1079, 1072, 1080,
	1070, 1082, 1083, 1083, 1083, 1082, 1083, 1085,
	1083, 1083, 1083, 1084, 1083, 1085, 1208, 1084,
	1085, 1083, 1087, 1088, 1088, 1088, 1087, 1088,
	1098, 1088, 1088, 1088, 1089, 1088, 1098, 1090,
	1091, 1092, 0, 1093, 1094, 1095, 1096, 1097,
	0, 1209, 1098, 1088, 1100, 1101, 0, 1102,
	1103, 1104, 1210, 1106, 1107, 1108, 1109, 1110,
	1211, 1112, 1113, 1113, 1113, 1112, 1113, 1118,
	1113, 1113, 1113, 1114, 1113, 1118, 1115, 1115,
	1115, 1114, 1115, 1117, 1116, 1115, 1115, 1115,
	1115, 1117, 1212, 1117, 1115, 1118, 1113, 1120,
	1121, 1121, 1121, 1120, 1121, 1126, 1122, 1121,
	1121, 1121, 1121, 1126, 1123, 1123, 1123, 1123,
	1125, 1124, 1123, 1123, 1123, 1123, 1125, 1213,
	1125, 1123, 1126, 1121, 0, 1, 152, 1,
	1, 160, 1127, 151, 1132, 264, 14, 194,
	14, 14, 204, 224, 1135, 239, 1133, 240,
	1136, 242, 0, 142, 142, 142, 170, 250,
	251, 252, 253, 266, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 1130, 265, 0,
	163, 170, 250, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 261, 262, 263,
	0, 1, 152, 1, 1, 160, 1127, 151,
	1132, 264, 1, 1, 1132, 264, 174, 174,
	174, 1132, 175, 178, 178, 178, 193, 228,
	0, 205, 208, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222,
	223, 1132
};

static const short _zone_scanner_trans_actions[] = {
	2399, 0, 5, 7, 561, 720, 720, 720,
	720, 720, 720, 720, 720, 720, 720, 720,
	720, 720, 720, 720, 3, 9, 3, 9,
	2555, 101, 738, 741, 43, 57, 55, 53,
	0, 59, 735, 744, 361, 0, 5, 7,
	95, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 3,
	9, 2007, 2010, 3007, 3011, 0, 0, 0,
	3003, 3015, 3023, 4731, 4751, 355, 0, 353,
	5, 7, 359, 3, 9, 369, 396, 1992,
	13, 417, 420, 2271, 423, 15, 0, 5,
	7, 2136, 9, 11, 2243, 2001, 357, 11,
	411, 13, 378, 384, 393, 4726, 2983, 2223,
	0, 5, 7, 9, 2991, 1998, 396, 11,
	2239, 0, 4031, 5, 7, 2387, 2679, 2679,
	2679, 2679, 2679, 2679, 2679, 2679, 2679, 2679,
	2679, 2679, 2679, 2679, 2679, 3, 9, 1995,
	1998, 369, 396, 5292, 747, 2683, 2687, 4246,
	2691, 2004, 0, 5, 7, 372, 9, 0,
	0, 0, 0, 0, 2133, 3831, 3835, 3827,
	3839, 3843, 5156, 5161, 408, 2227, 2231, 2235,
	11, 399, 402, 405, 0, 0, 0, 0,
	0, 0, 2106, 3651, 3655, 3647, 3659, 3663,
	5066, 5071, 2103, 3631, 3635, 3627, 3639, 3643,
	5056, 5061, 0, 0, 2064, 3371, 3375, 3367,
	3379, 3383, 4926, 4931, 0, 0, 0, 2016,
	3051, 3055, 3047, 3059, 3063, 4766, 4771, 0,
	0, 0, 0, 0, 0, 2091, 3551, 3555,
	3547, 3559, 3563, 5016, 5021, 0, 0, 0,
	0, 2067, 3391, 3395, 3387, 3399, 3403, 4936,
	4941, 0, 0, 0, 2088, 3531, 3535, 3527,
	3539, 3543, 5006, 5011, 2073, 3431, 3435, 3427,
	3439, 3443, 4956, 4961, 0, 0, 0, 0,
	0, 2124, 3771, 3775, 3767, 3779, 3783, 5126,
	5131, 0, 2127, 3791, 3795, 3787, 3799, 3803,
	5136, 5141, 0, 0, 0, 0, 2025, 3111,
	3115, 3107, 3119, 3123, 4796, 4801, 0, 0,
	99, 726, 729, 723, 732, 0, 5, 7,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3,
	9, 0, 0, 0, 0, 0, 0, 2079,
	3471, 3475, 3467, 3479, 3483, 4976, 4981, 0,
	0, 0, 2046, 3251, 3255, 3247, 3259, 3263,
	4866, 4871, 2061, 3351, 3355, 3347, 3359, 3363,
	4916, 4921, 0, 0, 0, 0, 0, 2115,
	3711, 3715, 3707, 3719, 3723, 5096, 5101, 0,
	2118, 3731, 3735, 3727, 3739, 3743, 5106, 5111,
	0, 2052, 3291, 3295, 3287, 3299, 3303, 4886,
	4891, 2121, 3751, 3755, 3747, 3759, 3763, 5116,
	5121, 0, 0, 0, 0, 0, 2028, 3131,
	3135, 3127, 3139, 3143, 4806, 4811, 2031, 3151,
	3155, 3147, 3159, 3163, 4816, 4821, 0, 0,
	0, 0, 0, 0, 2058, 3331, 3335, 3327,
	3339, 3343, 4906, 4911, 0, 2112, 3691, 3695,
	3687, 3699, 3703, 5086, 5091, 2013, 3031, 3035,
	0, 3027, 3039, 3043, 4756, 4761, 0, 2085,
	3511, 3515, 0, 3507, 3519, 3523, 4996, 5001,
	2094, 3571, 3575, 0, 3567, 3579, 3583, 5026,
	5031, 0, 0, 0, 0, 2097, 3591, 3595,
	3587, 3599, 3603, 5036, 5041, 0, 0, 2022,
	3091, 3095, 3087, 3099, 3103, 4786, 4791, 0,
	0, 0, 2037, 3191, 3195, 3187, 3199, 3203,
	4836, 4841, 0, 0, 0, 2082, 3491, 3495,
	3487, 3499, 3503, 4986, 4991, 2043, 3231, 3235,
	3227, 3239, 3243, 4856, 4861, 0, 0, 0,
	0, 0, 2019, 3071, 3075, 3067, 3079, 3083,
	4776, 4781, 0, 2109, 3671, 3675, 3667, 3679,
	3683, 5076, 5081, 0, 2055, 3311, 3315, 3307,
	3319, 3323, 4896, 4901, 0, 0, 0, 2076,
	3451, 3455, 3447, 3459, 3463, 4966, 4971, 0,
	0, 0, 0, 0, 2100, 3611, 3615, 3607,
	3619, 3623, 5046, 5051, 0, 2034, 3171, 3175,
	3167, 3179, 3183, 4826, 4831, 0, 0, 573,
	561, 2403, 639, 2531, 2535, 43, 2527, 2539,
	2543, 4191, 4196, 0, 0, 2130, 3811, 3815,
	3807, 3819, 3823, 5146, 5151, 11, 411, 0,
	5, 7, 3, 9, 0, 99, 726, 729,
	723, 732, 0, 5, 7, 561, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 97, 3, 9, 101,
	738, 741, 43, 57, 55, 53, 0, 59,
	735, 744, 2559, 43, 57, 55, 53, 0,
	59, 660, 2599, 2603, 4206, 2595, 2607, 11,
	411, 11, 411, 93, 89, 89, 89, 0,
	0, 0, 0, 0, 0, 87, 39, 37,
	510, 513, 507, 516, 0, 5, 7, 3,
	9, 11, 0, 411, 4016, 522, 2315, 2323,
	2307, 2331, 0, 5, 7, 3, 9, 11,
	411, 2559, 43, 57, 55, 53, 0, 59,
	660, 2599, 2603, 4206, 2595, 2607, 11, 411,
	2375, 2343, 3971, 3986, 3956, 4001, 5178, 5202,
	0, 5, 7, 3, 9, 369, 396, 2999,
	3019, 4736, 4741, 5322, 4746, 5431, 5334, 5424,
	5328, 0, 5, 7, 372, 2179, 0, 5,
	7, 372, 9, 11, 2239, 426, 2247, 2255,
	3896, 2263, 11, 375, 381, 390, 0, 5,
	7, 9, 396, 11, 2239, 2975, 0, 0,
	0, 0, 0, 81, 0, 0, 77, 2367,
	519, 2311, 2319, 3946, 2327, 5361, 2335, 3961,
	3976, 5172, 3991, 0, 5, 7, 372, 9,
	11, 2239, 4021, 4006, 5184, 5190, 5347, 5196,
	5438, 5354, 0, 5, 7, 372, 2179, 2339,
	531, 3966, 3981, 3951, 3996, 13, 378, 384,
	2155, 393, 408, 3871, 2227, 2231, 2235, 11,
	399, 402, 405, 408, 2227, 2231, 2235, 11,
	399, 402, 405, 0, 0, 2049, 3271, 3275,
	3267, 3279, 3283, 4876, 4881, 0, 0, 0,
	2040, 3211, 3215, 3207, 3219, 3223, 4846, 4851,
	0, 2070, 3411, 3415, 3407, 3419, 3423, 4946,
	4951, 11, 411, 426, 2247, 2255, 3906, 11,
	375, 381, 3847, 408, 2227, 2231, 11, 399,
	402, 408, 2227, 2231, 11, 399, 402, 11,
	411, 13, 378, 384, 393, 2223, 408, 2227,
	2231, 11, 399, 402, 534, 11, 411, 11,
	411, 11, 2239, 438, 2275, 17, 441, 31,
	2299, 29, 0, 474, 2279, 21, 23, 0,
	465, 444, 19, 447, 456, 25, 25, 3916,
	450, 453, 27, 471, 684, 65, 0, 0,
	1, 681, 2615, 687, 69, 69, 690, 693,
	2611, 71, 65, 0, 0, 67, 687, 69,
	69, 693, 71, 71, 75, 0, 5, 7,
	3, 9, 564, 561, 4201, 13, 417, 420,
	43, 57, 55, 53, 0, 59, 3901, 423,
	432, 0, 5, 7, 2623, 9, 11, 3881,
	2559, 2547, 43, 57, 55, 53, 0, 59,
	654, 2563, 2567, 4206, 5298, 2571, 11, 411,
	79, 0, 5, 7, 3, 9, 4211, 702,
	2627, 21, 23, 0, 435, 468, 2283, 2287,
	444, 19, 5166, 2291, 0, 5, 7, 2631,
	9, 11, 3886, 447, 459, 25, 25, 450,
	453, 27, 11, 411, 0, 5, 7, 3,
	9, 705, 83, 711, 708, 2635, 2639, 5304,
	2647, 2643, 717, 0, 5, 7, 4216, 714,
	2651, 2655, 9, 9, 85, 21, 23, 0,
	2295, 3921, 3926, 444, 19, 5340, 3931, 0,
	5, 7, 11, 3891, 447, 462, 25, 25,
	450, 453, 27, 11, 3876, 0, 5, 7,
	3, 9, 11, 411, 11, 411, 125, 117,
	119, 121, 0, 123, 0, 5, 7, 3,
	9, 1, 366, 387, 11, 411, 325, 323,
	1896, 1899, 1893, 1902, 2947, 4716, 4721, 0,
	5, 7, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 3, 9, 1905, 2171, 2215, 239, 1392,
	1395, 0, 0, 0, 1389, 1398, 2779, 4296,
	4301, 0, 0, 265, 1548, 1551, 1545, 1554,
	2831, 4426, 4431, 11, 411, 0, 0, 0,
	0, 0, 321, 1884, 1887, 1881, 1890, 2943,
	4706, 4711, 0, 0, 0, 0, 0, 0,
	303, 1776, 1779, 1773, 1782, 2907, 4616, 4621,
	301, 1764, 1767, 1761, 1770, 2903, 4606, 4611,
	0, 0, 275, 1608, 1611, 1605, 1614, 2851,
	4476, 4481, 0, 0, 0, 243, 1416, 1419,
	1413, 1422, 2787, 4316, 4321, 0, 0, 0,
	0, 0, 0, 293, 1716, 1719, 1713, 1722,
	2887, 4566, 4571, 0, 0, 0, 0, 277,
	1620, 1623, 1617, 1626, 2855, 4486, 4491, 0,
	0, 0, 291, 1704, 1707, 1701, 1710, 2883,
	4556, 4561, 281, 1644, 1647, 1641, 1650, 2863,
	4506, 4511, 0, 0, 0, 0, 0, 315,
	1848, 1851, 1845, 1854, 2931, 4676, 4681, 0,
	317, 1860, 1863, 1857, 1866, 2935, 4686, 4691,
	0, 0, 0, 0, 249, 1452, 1455, 1449,
	1458, 2799, 4346, 4351, 0, 0, 0, 0,
	0, 0, 0, 285, 1668, 1671, 1665, 1674,
	2871, 4526, 4531, 0, 0, 0, 263, 1536,
	1539, 1533, 1542, 2827, 4416, 4421, 273, 1596,
	1599, 1593, 1602, 2847, 4466, 4471, 0, 0,
	0, 0, 0, 309, 1812, 1815, 1809, 1818,
	2919, 4646, 4651, 0, 311, 1824, 1827, 1821,
	1830, 2923, 4656, 4661, 0, 267, 1560, 1563,
	1557, 1566, 2835, 4436, 4441, 313, 1836, 1839,
	1833, 1842, 2927, 4666, 4671, 0, 0, 0,
	0, 0, 251, 1464, 1467, 1461, 1470, 2803,
	4356, 4361, 253, 1476, 1479, 1473, 1482, 2807,
	4366, 4371, 0, 0, 0, 0, 0, 0,
	271, 1584, 1587, 1581, 1590, 2843, 4456, 4461,
	0, 307, 1800, 1803, 1797, 1806, 2915, 4636,
	4641, 241, 1404, 1407, 0, 1401, 1410, 2783,
	4306, 4311, 0, 289, 1692, 1695, 0, 1689,
	1698, 2879, 4546, 4551, 295, 1728, 1731, 0,
	1725, 1734, 2891, 4576, 4581, 0, 0, 0,
	0, 297, 1740, 1743, 1737, 1746, 2895, 4586,
	4591, 0, 0, 247, 1440, 1443, 1437, 1446,
	2795, 4336, 4341, 0, 0, 0, 257, 1500,
	1503, 1497, 1506, 2815, 4386, 4391, 0, 0,
	0, 287, 1680, 1683, 1677, 1686, 2875, 4536,
	4541, 261, 1524, 1527, 1521, 1530, 2823, 4406,
	4411, 0, 0, 0, 0, 0, 245, 1428,
	1431, 1425, 1434, 2791, 4326, 4331, 0, 305,
	1788, 1791, 1785, 1794, 2911, 4626, 4631, 0,
	269, 1572, 1575, 1569, 1578, 2839, 4446, 4451,
	0, 0, 0, 283, 1656, 1659, 1653, 1662,
	2867, 4516, 4521, 0, 0, 0, 0, 0,
	299, 1752, 1755, 1749, 1758, 2899, 4596, 4601,
	0, 255, 1488, 1491, 1485, 1494, 2811, 4376,
	4381, 0, 0, 561, 237, 1380, 1383, 43,
	1377, 1386, 2775, 4286, 4291, 0, 0, 319,
	1872, 1875, 1869, 1878, 2939, 4696, 4701, 0,
	0, 0, 259, 1512, 1515, 1509, 1518, 2819,
	4396, 4401, 0, 279, 1632, 1635, 1629, 1638,
	2859, 4496, 4501, 339, 0, 5, 7, 3,
	9, 567, 561, 51, 645, 648, 43, 642,
	651, 2763, 0, 5, 7, 113, 3, 9,
	115, 0, 5, 7, 3, 9, 780, 2167,
	2211, 11, 411, 11, 411, 11, 411, 0,
	5, 7, 3, 9, 561, 561, 363, 2143,
	2147, 43, 1, 2139, 2151, 0, 5, 7,
	113, 3, 9, 115, 0, 5, 7, 3,
	9, 780, 2167, 2211, 11, 411, 11, 411,
	51, 645, 648, 642, 651, 11, 411, 345,
	561, 0, 0, 0, 0, 0, 594, 43,
	0, 0, 789, 0, 792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	813, 0, 0, 0, 0, 0, 0, 0,
	0, 816, 0, 0, 0, 0, 0, 0,
	819, 0, 0, 822, 0, 0, 0, 0,
	0, 0, 0, 825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 828, 0,
	0, 831, 0, 0, 0, 0, 0, 0,
	786, 0, 0, 0, 0, 0, 795, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 801, 0, 0, 804, 0, 0,
	807, 347, 561, 0, 0, 0, 0, 0,
	0, 609, 43, 0, 0, 0, 0, 0,
	852, 0, 0, 0, 0, 0, 0, 0,
	0, 855, 0, 0, 0, 849, 0, 0,
	843, 0, 0, 0, 846, 0, 0, 861,
	0, 0, 0, 840, 0, 0, 834, 0,
	0, 0, 837, 0, 0, 858, 753, 750,
	2703, 103, 537, 540, 537, 41, 546, 549,
	543, 552, 0, 5, 7, 537, 3, 9,
	41, 546, 549, 543, 552, 570, 0, 5,
	7, 561, 3, 9, 49, 630, 633, 43,
	627, 636, 0, 5, 7, 561, 3, 9,
	2551, 49, 630, 633, 43, 57, 55, 53,
	0, 59, 627, 636, 0, 5, 7, 561,
	3, 9, 49, 630, 633, 43, 57, 55,
	53, 0, 59, 627, 636, 0, 5, 7,
	561, 3, 9, 49, 630, 633, 43, 57,
	55, 53, 0, 59, 627, 636, 0, 5,
	7, 561, 3, 9, 624, 43, 57, 55,
	53, 0, 59, 2559, 43, 57, 55, 53,
	0, 59, 2575, 4206, 11, 411, 2559, 43,
	57, 55, 53, 0, 59, 657, 2583, 2587,
	4206, 2579, 2591, 11, 411, 2559, 43, 57,
	55, 53, 0, 59, 657, 2583, 2587, 4206,
	2579, 2591, 11, 411, 2559, 43, 57, 55,
	53, 0, 59, 657, 2583, 2587, 4206, 2579,
	2591, 11, 411, 11, 411, 11, 411, 477,
	35, 492, 495, 489, 498, 477, 0, 5,
	7, 3, 9, 486, 11, 411, 537, 41,
	546, 549, 543, 552, 0, 5, 7, 537,
	3, 9, 540, 11, 411, 561, 47, 615,
	618, 43, 612, 621, 0, 5, 7, 537,
	3, 9, 540, 11, 411, 2619, 699, 35,
	492, 495, 489, 498, 2303, 3936, 3941, 477,
	0, 5, 7, 3, 9, 696, 2163, 2207,
	11, 411, 750, 2723, 103, 1983, 2951, 327,
	1911, 1914, 43, 1908, 1917, 0, 5, 7,
	561, 0, 0, 3, 9, 331, 1935, 1938,
	43, 1932, 1941, 0, 5, 7, 4186, 3,
	9, 576, 2435, 2439, 0, 43, 2431, 2443,
	0, 5, 7, 3, 9, 0, 5, 7,
	3, 9, 561, 329, 1923, 1926, 43, 1920,
	1929, 0, 5, 7, 561, 0, 0, 3,
	9, 333, 1947, 1950, 43, 1944, 1953, 0,
	5, 7, 4186, 3, 9, 579, 2451, 2455,
	0, 43, 2447, 2459, 0, 5, 7, 3,
	9, 0, 5, 7, 3, 9, 0, 4181,
	5316, 582, 2467, 2471, 0, 43, 582, 2463,
	2475, 4161, 5244, 5250, 0, 5, 7, 4181,
	3, 9, 1980, 2175, 2219, 585, 2483, 2487,
	0, 43, 585, 2479, 2491, 4166, 5256, 5262,
	0, 5, 7, 4181, 3, 9, 2175, 2219,
	588, 2499, 2503, 0, 43, 588, 2495, 2507,
	4171, 5268, 5274, 0, 5, 7, 4181, 3,
	9, 2175, 2219, 591, 2515, 2519, 0, 43,
	2511, 2523, 4176, 5280, 5286, 0, 5, 7,
	3, 9, 2175, 2219, 11, 411, 2427, 4146,
	4151, 4036, 4141, 4156, 5238, 5410, 5417, 558,
	11, 411, 2423, 4126, 4131, 4036, 2423, 4121,
	4136, 5232, 5396, 5403, 558, 11, 411, 2419,
	4106, 4111, 4036, 2419, 4101, 4116, 5226, 5382,
	5389, 558, 11, 411, 2415, 4086, 4091, 4036,
	2415, 4081, 4096, 5220, 5368, 5375, 558, 11,
	411, 337, 1971, 1974, 1968, 1977, 11, 411,
	2411, 4066, 4071, 4036, 4061, 4076, 558, 11,
	411, 11, 411, 11, 411, 335, 1959, 1962,
	1956, 1965, 11, 411, 2407, 4046, 4051, 4036,
	4041, 4056, 558, 11, 411, 11, 411, 561,
	47, 615, 618, 43, 612, 621, 0, 5,
	7, 561, 3, 9, 47, 615, 618, 43,
	612, 621, 0, 5, 7, 561, 3, 9,
	47, 615, 618, 43, 612, 621, 0, 5,
	7, 537, 3, 9, 540, 11, 411, 11,
	411, 11, 411, 561, 47, 615, 618, 43,
	612, 621, 0, 5, 7, 561, 3, 9,
	47, 615, 618, 43, 612, 621, 477, 0,
	5, 7, 3, 9, 35, 492, 495, 489,
	498, 477, 0, 5, 7, 3, 9, 35,
	492, 495, 489, 498, 477, 0, 5, 7,
	3, 9, 35, 492, 495, 489, 498, 0,
	5, 7, 537, 3, 9, 540, 11, 411,
	11, 411, 11, 411, 11, 411, 11, 411,
	351, 0, 5, 7, 3, 9, 561, 47,
	615, 618, 43, 612, 621, 0, 5, 7,
	349, 3, 9, 0, 5, 7, 3, 9,
	127, 1, 11, 411, 11, 411, 11, 411,
	774, 0, 762, 5, 7, 765, 768, 3,
	9, 1, 366, 387, 109, 111, 0, 2695,
	750, 103, 105, 561, 771, 2751, 2755, 43,
	2747, 2759, 2743, 4276, 4281, 11, 411, 0,
	750, 103, 107, 561, 47, 615, 618, 43,
	612, 621, 0, 5, 7, 349, 3, 9,
	0, 5, 7, 3, 9, 561, 45, 600,
	603, 43, 597, 606, 777, 0, 5, 7,
	113, 3, 9, 115, 0, 5, 7, 3,
	9, 1, 366, 387, 11, 411, 11, 411,
	11, 411, 11, 411, 561, 45, 600, 603,
	43, 597, 606, 0, 5, 7, 561, 3,
	9, 45, 600, 603, 43, 597, 606, 0,
	5, 7, 113, 3, 9, 115, 0, 5,
	7, 3, 9, 1, 366, 387, 11, 411,
	11, 411, 11, 411, 561, 45, 600, 603,
	43, 597, 606, 864, 0, 5, 7, 145,
	147, 149, 151, 3, 9, 0, 5, 7,
	3, 9, 2391, 561, 45, 600, 603, 43,
	597, 606, 0, 5, 7, 0, 3, 9,
	2771, 0, 5, 7, 0, 5, 7, 0,
	5, 7, 1, 3, 9, 366, 387, 3,
	9, 366, 387, 3, 9, 366, 387, 867,
	127, 11, 411, 11, 411, 11, 411, 11,
	411, 11, 411, 0, 5, 7, 3, 9,
	561, 45, 600, 603, 43, 597, 606, 2699,
	0, 5, 7, 750, 3, 9, 4251, 103,
	756, 2711, 2715, 756, 2711, 2715, 756, 2711,
	2715, 2703, 2707, 2719, 4256, 4261, 2707, 2719,
	4256, 4261, 2707, 2719, 4256, 4261, 11, 411,
	11, 411, 0, 5, 7, 3, 9, 561,
	45, 600, 603, 43, 597, 606, 0, 5,
	7, 750, 3, 9, 103, 759, 2731, 2735,
	759, 2731, 2735, 759, 2731, 2735, 2723, 2727,
	2739, 4266, 4271, 2727, 2739, 4266, 4271, 2727,
	2739, 4266, 4271, 11, 411, 11, 411, 0,
	5, 7, 3, 9, 561, 45, 600, 603,
	43, 597, 606, 0, 5, 7, 537, 3,
	9, 41, 546, 549, 41, 546, 549, 41,
	546, 549, 540, 543, 552, 2379, 2383, 543,
	552, 2379, 2383, 543, 552, 2379, 2383, 11,
	411, 11, 411, 11, 411, 870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 876, 879,
	0, 0, 0, 873, 882, 0, 5, 7,
	349, 3, 9, 0, 5, 7, 3, 9,
	561, 45, 600, 603, 43, 597, 606, 0,
	5, 7, 561, 3, 9, 49, 630, 633,
	43, 627, 636, 678, 0, 5, 7, 663,
	3, 9, 63, 669, 672, 61, 666, 675,
	0, 5, 7, 663, 3, 9, 63, 669,
	672, 61, 666, 675, 0, 5, 7, 561,
	3, 9, 47, 615, 618, 43, 612, 621,
	0, 5, 7, 537, 3, 9, 41, 546,
	549, 543, 552, 0, 5, 7, 127, 3,
	9, 1, 11, 411, 11, 411, 11, 411,
	11, 411, 11, 411, 11, 411, 11, 411,
	11, 411, 0, 0, 179, 1032, 1035, 1029,
	1038, 0, 0, 0, 173, 996, 999, 993,
	1002, 0, 193, 1116, 1119, 1113, 1122, 0,
	0, 0, 0, 0, 235, 1368, 1371, 1365,
	1374, 0, 0, 0, 0, 0, 0, 217,
	1260, 1263, 1257, 1266, 215, 1248, 1251, 1245,
	1254, 0, 0, 189, 1092, 1095, 1089, 1098,
	0, 0, 0, 157, 900, 903, 897, 906,
	0, 0, 0, 0, 0, 0, 207, 1200,
	1203, 1197, 1206, 0, 0, 0, 0, 191,
	1104, 1107, 1101, 1110, 0, 0, 0, 205,
	1188, 1191, 1185, 1194, 195, 1128, 1131, 1125,
	1134, 0, 0, 0, 0, 0, 229, 1332,
	1335, 1329, 1338, 0, 231, 1344, 1347, 1341,
	1350, 0, 0, 0, 0, 163, 936, 939,
	933, 942, 0, 0, 0, 0, 0, 0,
	0, 199, 1152, 1155, 1149, 1158, 0, 0,
	0, 177, 1020, 1023, 1017, 1026, 187, 1080,
	1083, 1077, 1086, 0, 0, 0, 0, 0,
	223, 1296, 1299, 1293, 1302, 0, 225, 1308,
	1311, 1305, 1314, 0, 181, 1044, 1047, 1041,
	1050, 227, 1320, 1323, 1317, 1326, 0, 0,
	0, 0, 0, 165, 948, 951, 945, 954,
	167, 960, 963, 957, 966, 0, 0, 0,
	0, 0, 0, 185, 1068, 1071, 1065, 1074,
	0, 221, 1284, 1287, 1281, 1290, 155, 888,
	891, 0, 885, 894, 0, 203, 1176, 1179,
	0, 1173, 1182, 209, 1212, 1215, 0, 1209,
	1218, 0, 0, 0, 0, 211, 1224, 1227,
	1221, 1230, 0, 0, 161, 924, 927, 921,
	930, 0, 0, 0, 171, 984, 987, 981,
	990, 0, 0, 0, 201, 1164, 1167, 1161,
	1170, 175, 1008, 1011, 1005, 1014, 0, 0,
	0, 0, 0, 159, 912, 915, 909, 918,
	0, 219, 1272, 1275, 1269, 1278, 0, 183,
	1056, 1059, 1053, 1062, 0, 0, 0, 197,
	1140, 1143, 1137, 1146, 0, 0, 0, 0,
	0, 213, 1236, 1239, 1233, 1242, 0, 169,
	972, 975, 969, 978, 0, 0, 2395, 561,
	47, 615, 618, 43, 612, 621, 0, 0,
	233, 1356, 1359, 1353, 1362, 537, 555, 1,
	561, 47, 615, 618, 43, 612, 621, 0,
	5, 7, 561, 3, 9, 45, 600, 603,
	43, 597, 606, 0, 5, 7, 349, 3,
	9, 0, 5, 7, 3, 9, 127, 1,
	11, 411, 11, 411, 11, 411, 127, 1,
	561, 45, 600, 603, 43, 597, 606, 0,
	5, 7, 561, 3, 9, 45, 600, 603,
	43, 597, 606, 0, 5, 7, 561, 3,
	9, 47, 615, 618, 43, 612, 621, 0,
	5, 7, 33, 480, 3, 9, 35, 492,
	495, 489, 498, 783, 0, 5, 7, 483,
	3, 9, 131, 133, 0, 135, 137, 0,
	139, 0, 141, 143, 0, 501, 129, 1,
	0, 0, 11, 411, 115, 113, 11, 411,
	11, 411, 11, 411, 561, 45, 600, 603,
	43, 597, 606, 0, 5, 7, 561, 3,
	9, 45, 600, 603, 43, 597, 606, 0,
	5, 7, 561, 3, 9, 47, 615, 618,
	43, 612, 621, 0, 5, 7, 33, 480,
	3, 9, 486, 115, 113, 11, 411, 11,
	411, 11, 411, 561, 45, 600, 603, 43,
	597, 606, 0, 5, 7, 561, 3, 9,
	45, 600, 603, 43, 597, 606, 0, 5,
	7, 561, 3, 9, 45, 600, 603, 43,
	597, 606, 0, 5, 7, 113, 3, 9,
	115, 0, 5, 7, 3, 9, 1, 366,
	387, 11, 411, 11, 411, 11, 411, 11,
	411, 561, 47, 615, 618, 43, 612, 621,
	0, 5, 7, 750, 3, 9, 2703, 103,
	11, 411, 561, 47, 615, 618, 43, 612,
	621, 0, 5, 7, 1989, 3, 9, 115,
	113, 115, 2767, 343, 113, 115, 113, 115,
	2971, 2967, 11, 411, 1986, 115, 2963, 341,
	113, 115, 2955, 1986, 115, 341, 113, 115,
	2959, 561, 47, 615, 618, 43, 612, 621,
	0, 5, 7, 561, 3, 9, 47, 615,
	618, 43, 612, 621, 73, 0, 5, 7,
	3, 9, 1, 11, 411, 11, 411, 561,
	45, 600, 603, 43, 597, 606, 477, 0,
	5, 7, 3, 9, 35, 492, 495, 489,
	498, 73, 0, 5, 7, 3, 9, 1,
	11, 411, 11, 411, 528, 525, 0, 2351,
	2355, 504, 414, 423, 2347, 2359, 525, 355,
	2187, 2195, 2987, 2995, 2159, 2203, 2979, 2983,
	3856, 3866, 2371, 525, 2187, 2195, 2675, 2675,
	2675, 2675, 2675, 2675, 2675, 2675, 2675, 2675,
	2675, 2675, 2675, 2675, 2675, 2159, 2203, 4011,
	4026, 4241, 4241, 4241, 4241, 4241, 4241, 4241,
	4241, 4241, 4241, 4241, 4241, 4241, 4241, 4241,
	2363, 2671, 91, 4226, 4231, 2667, 2659, 2663,
	4221, 4236, 2187, 2195, 2159, 2203, 429, 2251,
	2259, 3911, 2267, 429, 2183, 2191, 2199, 3861,
	5208, 5214, 5310, 5310, 5310, 5310, 5310, 5310,
	5310, 5310, 5310, 5310, 5310, 5310, 5310, 5310,
	5310, 3851
};

static const short _zone_scanner_eof_actions[] = {
	0, 2399, 2555, 361, 2007, 353, 1992, 15,
	15, 353, 353, 1992, 1992, 1992, 4031, 5292,
	2004, 361, 361, 2007, 1992, 1992, 361, 361,
	361, 361, 361, 2007, 2007, 361, 361, 2007,
	361, 361, 361, 2007, 361, 361, 361, 361,
	2007, 361, 361, 361, 2007, 361, 361, 361,
	2007, 2007, 361, 361, 361, 361, 2007, 361,
	2007, 361, 361, 361, 361, 2007, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361,
	2007, 361, 361, 2007, 2007, 361, 361, 2007,
	361, 2007, 361, 2007, 2007, 361, 361, 361,
	361, 2007, 2007, 361, 361, 361, 361, 2007,
	361, 2007, 2007, 361, 2007, 2007, 361, 361,
	361, 361, 2007, 361, 361, 2007, 361, 2007,
	361, 361, 361, 2007, 2007, 361, 361, 2007,
	361, 2007, 361, 2007, 361, 361, 361, 2007,
	361, 361, 361, 2007, 361, 2007, 361, 361,
	573, 2403, 361, 361, 2007, 361, 2399, 361,
	361, 573, 2555, 2555, 2555, 2555, 361, 15,
	93, 93, 93, 93, 93, 93, 93, 93,
	39, 573, 0, 4016, 573, 361, 2555, 2555,
	2555, 361, 2375, 2403, 2999, 1992, 2399, 15,
	1992, 15, 4031, 2999, 2999, 2999, 2999, 2999,
	2999, 2999, 2999, 2999, 2999, 2999, 2999, 2999,
	2999, 1992, 2975, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 2367, 5361, 2399, 2004,
	4021, 4031, 4021, 4021, 4021, 4021, 4021, 4021,
	4021, 4021, 4021, 4021, 4021, 4021, 4021, 4021,
	531, 4031, 1992, 15, 1992, 1992, 361, 361,
	2007, 361, 361, 361, 2007, 361, 2007, 1992,
	1992, 15, 1992, 1992, 1992, 1992, 353, 4031,
	1992, 1992, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534,
	15, 2004, 534, 2004, 0, 0, 31, 31,
	31, 456, 456, 456, 456, 31, 31, 684,
	684, 2615, 2615, 2615, 2615, 684, 67, 2615,
	2615, 2615, 2615, 75, 564, 4201, 432, 432,
	4201, 2547, 4201, 75, 79, 79, 79, 435,
	435, 435, 459, 459, 459, 459, 435, 79,
	0, 83, 711, 717, 85, 717, 15, 15,
	462, 462, 462, 462, 717, 15, 85, 0,
	0, 125, 125, 125, 125, 125, 125, 125,
	325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 339, 567, 567, 2763,
	2763, 2763, 2763, 339, 339, 339, 567, 567,
	2763, 2763, 2763, 2763, 339, 567, 339, 345,
	345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 347,
	347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347,
	753, 753, 353, 353, 353, 353, 353, 353,
	570, 570, 570, 2551, 570, 2551, 570, 2551,
	570, 2551, 2551, 2551, 2551, 353, 2551, 2551,
	2551, 353, 2551, 2551, 2551, 353, 2551, 2551,
	2551, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 570, 570,
	353, 353, 353, 699, 699, 699, 699, 753,
	753, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
	1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
	1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
	1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
	1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
	1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
	1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
	570, 570, 570, 570, 570, 570, 353, 353,
	353, 353, 353, 570, 570, 570, 570, 353,
	353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 570, 570,
	353, 353, 353, 353, 353, 353, 353, 774,
	774, 774, 2695, 2695, 774, 774, 353, 774,
	2695, 2695, 570, 570, 353, 353, 570, 570,
	777, 777, 777, 777, 353, 353, 353, 570,
	570, 570, 570, 777, 777, 777, 777, 353,
	353, 570, 570, 864, 864, 2391, 2391, 864,
	2771, 867, 867, 867, 867, 867, 867, 867,
	864, 864, 864, 2391, 2391, 2699, 4251, 864,
	864, 864, 2391, 2391, 2699, 4251, 864, 864,
	864, 2391, 2391, 864, 2771, 864, 864, 353,
	870, 870, 353, 353, 570, 570, 570, 570,
	678, 678, 678, 678, 570, 570, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 870, 870, 870, 870, 870, 870,
	870, 870, 870, 870, 870, 870, 870, 870,
	870, 870, 870, 870, 870, 870, 870, 870,
	870, 870, 870, 870, 870, 870, 870, 870,
	870, 870, 870, 870, 870, 870, 870, 870,
	870, 870, 870, 870, 870, 870, 870, 870,
	870, 870, 870, 870, 870, 870, 870, 870,
	870, 870, 870, 870, 870, 870, 870, 870,
	870, 870, 870, 870, 870, 870, 870, 870,
	870, 870, 870, 870, 870, 870, 870, 870,
	870, 870, 870, 870, 870, 870, 870, 870,
	870, 870, 870, 870, 870, 870, 870, 870,
	870, 870, 870, 870, 870, 870, 870, 870,
	870, 870, 870, 870, 870, 870, 870, 870,
	870, 870, 870, 870, 870, 870, 870, 870,
	870, 870, 870, 870, 870, 2395, 2395, 870,
	870, 870, 353, 353, 353, 570, 570, 570,
	570, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 570, 570, 570, 570, 570, 570,
	777, 777, 783, 783, 783, 783, 783, 783,
	783, 783, 783, 353, 783, 783, 783, 783,
	783, 353, 777, 777, 353, 353, 353, 570,
	570, 570, 570, 570, 570, 777, 777, 777,
	777, 353, 353, 353, 570, 570, 570, 570,
	570, 570, 777, 777, 777, 777, 353, 353,
	353, 570, 570, 753, 753, 353, 570, 570,
	777, 777, 777, 777, 2767, 777, 777, 777,
	777, 2971, 353, 777, 777, 2963, 777, 777,
	2963, 777, 777, 2963, 777, 777, 2963, 570,
	570, 570, 570, 353, 353, 353, 353, 570,
	570, 353, 353, 353, 353, 353, 353, 0,
	0, 0, 0, 91, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0
};






__attribute__((visibility("default")))
int zs_init(
	zs_scanner_t *s,
	const char *origin,
	const uint16_t rclass,
	const uint32_t ttl)
{
	if (s == NULL) {
		return -1;
	}

	memset(s, 0, sizeof(*s));

	// Nonzero initial scanner state.
	s->cs = 1127;

	// Reset the file descriptor.
	s->file.descriptor = -1;

	// Use the root zone as origin if not specified.
	if (origin == NULL || strlen(origin) == 0) {
		origin = ".";
	}
	size_t origin_len = strlen(origin);

	// Prepare a zone settings header.
	const char *format;
	if (origin[origin_len - 1] != '.') {
		format = "$ORIGIN %s.\n";
	} else {
		format = "$ORIGIN %s\n";
	}

	char settings[1024];
	int ret = snprintf(settings, sizeof(settings), format, origin);
	if (ret <= 0 || ret >= sizeof(settings)) {
		ERR(ZS_ENOMEM);
		return -1;
	}

	// Parse the settings to set up the scanner origin.
	if (zs_set_input_string(s, settings, ret) != 0 ||
	    zs_parse_all(s) != 0) {
		return -1;
	}

	// Set scanner defaults.
	s->path = strdup(".");
	if (s->path == NULL) {
		ERR(ZS_ENOMEM);
		return -1;
	}
	s->default_class = rclass;
	s->default_ttl = ttl;
	s->line_counter = 1;

	s->state = ZS_STATE_NONE;
	s->process.automatic = false;

	return 0;
}

static void input_deinit(
	zs_scanner_t *s,
	bool keep_filename)
{
	// Deinit the file input.
	if (s->file.descriptor != -1) {
		// Unmap the file content.
		if (s->input.start != NULL) {
			if (s->input.mmaped) {
				munmap((void *)s->input.start,
				       s->input.end - s->input.start);
			} else {
				free((void *)s->input.start);
			}
		}

		// Close the opened file.
		close(s->file.descriptor);
		s->file.descriptor = -1;
	}

	// Keep file name for possible trailing error report.
	if (!keep_filename) {
		free(s->file.name);
		s->file.name = NULL;
	}

	// Unset the input limits.
	s->input.start   = NULL;
	s->input.current = NULL;
	s->input.end     = NULL;
	s->input.eof     = false;
}

__attribute__((visibility("default")))
void zs_deinit(
	zs_scanner_t *s)
{
	if (s == NULL) {
		return;
	}

	input_deinit(s, false);
	free(s->path);
}

static int set_input_string(
	zs_scanner_t *s,
	const char *input,
	size_t size,
	bool final_block)
{
	if (s == NULL) {
		return -1;
	}

	if (input == NULL) {
		ERR(ZS_EINVAL);
		return -1;
	}

	// Deinit possibly opened file.
	input_deinit(s, final_block);

	// Set the scanner input limits.
	s->input.start   = input;
	s->input.current = input;
	s->input.end     = input + size;
	s->input.eof     = final_block;

	return 0;
}

static char *read_file_to_buf(
	int fd,
	size_t *bufsize)
{
	size_t bufs = 0, newbufs = 8192;
	char *buf = malloc(bufs + newbufs);
	int ret = 0;

	while (buf != NULL && (ret = read(fd, buf + bufs, newbufs)) == newbufs) {
		bufs += newbufs;
		newbufs = bufs;
		char *newbuf = realloc(buf, bufs + newbufs);
		if (newbuf == NULL) {
			free(buf);
		}
		buf = newbuf;
	}
	if (ret < 0) {
		free(buf);
		return NULL;
	}

	*bufsize = bufs + ret;
	return buf;
}

__attribute__((visibility("default")))
int zs_set_input_string(
	zs_scanner_t *s,
	const char *input,
	size_t size)
{
	s->state = ZS_STATE_NONE;

	return set_input_string(s, input, size, false);
}

__attribute__((visibility("default")))
int zs_set_input_file(
	zs_scanner_t *s,
	const char *file_name)
{
	if (s == NULL) {
		return -1;
	}

	if (file_name == NULL) {
		ERR(ZS_EINVAL);
		return -1;
	}

	// Deinit possibly opened file.
	input_deinit(s, false);

	// Try to open the file.
	s->file.descriptor = open(file_name, O_RDONLY);
	if (s->file.descriptor == -1) {
		ERR(ZS_FILE_OPEN);
		return -1;
	}

	char *start = NULL;
	size_t size = 0;

	// Check the input.
	struct stat file_stat;
	if (fstat(s->file.descriptor, &file_stat) == -1) {
		ERR(ZS_FILE_INVALID);
		input_deinit(s, false);
		return -1;
	} else if (S_ISCHR(file_stat.st_mode) ||
	           S_ISBLK(file_stat.st_mode) ||
	           S_ISFIFO(file_stat.st_mode)) {
		// Workaround if cannot mmap, read to memory.
		start = read_file_to_buf(s->file.descriptor, &size);
		if (start == NULL) {
			ERR(ZS_FILE_INVALID);
			input_deinit(s, false);
			return -1;
		}
	} else if (!S_ISREG(file_stat.st_mode)) { // Require regular file.
		ERR(ZS_FILE_INVALID);
		input_deinit(s, false);
		return -1;
	} else if (file_stat.st_size > 0) { // Mmap non-emtpy file.
		start = mmap(0, file_stat.st_size, PROT_READ, MAP_SHARED,
		             s->file.descriptor, 0);
		if (start == MAP_FAILED) {
			ERR(ZS_FILE_INVALID);
			input_deinit(s, false);
			return -1;
		}

		size = file_stat.st_size;
		s->input.mmaped = true;

		// Try to set the mapped memory advise to sequential.
		(void)madvise(start, size, MADV_SEQUENTIAL);
	}

	// Set the scanner input limits.
	s->input.start   = start;
	s->input.current = start;
	s->input.end     = start + size;

	// Get absolute path of the zone file if possible.
	char *full_name = realpath(file_name, NULL);
	if (full_name != NULL) {
		free(s->path);
		s->path = strdup(dirname(full_name));
		free(full_name);
		if (s->path == NULL) {
			ERR(ZS_ENOMEM);
			input_deinit(s, false);
			return -1;
		}
	}

	s->file.name = strdup(file_name);
	if (s->file.name == NULL) {
		ERR(ZS_ENOMEM);
		input_deinit(s, false);
		return -1;
	}

	s->state = ZS_STATE_NONE;

	return 0;
}

__attribute__((visibility("default")))
int zs_set_processing(
	zs_scanner_t *s,
	void (*process_record)(zs_scanner_t *),
	void (*process_error)(zs_scanner_t *),
	void *data)
{
	if (s == NULL) {
		return -1;
	}

	s->process.record = process_record;
	s->process.error = process_error;
	s->process.data = data;

	return 0;
}

__attribute__((visibility("default")))
int zs_set_processing_comment(
	zs_scanner_t *s,
	void (*process_comment)(zs_scanner_t *))
{
	if (s == NULL) {
		return -1;
	}

	s->process.comment = process_comment;

	return 0;
}

typedef enum {
	WRAP_NONE,     // Initial state.
	WRAP_DETECTED, // Input block end is a first '\' in rdata.
	WRAP_PROCESS   // Parsing of auxiliary block = "\".
} wrap_t;

static void parse(
	zs_scanner_t *s,
	wrap_t *wrap)
{
	// Restore scanner input limits (Ragel internals).
	const char *p = s->input.current;
	const char *pe = s->input.end;
	const char *eof = s->input.eof ? pe : NULL;

	// Restore state variables (Ragel internals).
	int cs  = s->cs;
	int top = s->top;
	int stack[ZS_RAGEL_STACK_SIZE];
	memcpy(stack, s->stack, sizeof(stack));

	// Next 2 variables are for better performance.
	// Restoring r_data pointer to next free space.
	uint8_t *rdata_tail = s->r_data + s->r_data_tail;
	// Initialization of the last r_data byte.
	uint8_t *rdata_stop = s->r_data + ZS_MAX_RDATA_LENGTH - 1;

	// Write scanner body (in C).

	{
	int _klen;
	unsigned int _trans;
	short _widec;
	const short *_acts;
	unsigned int _nacts;
	const short *_keys;

	if ( p == pe )
		goto _test_eof;
	if ( cs == 0 )
		goto _out;
_resume:
	_widec = (*p);
	_klen = _zone_scanner_cond_lengths[cs];
	_keys = _zone_scanner_cond_keys + (_zone_scanner_cond_offsets[cs]*2);
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _mid[0] )
				_upper = _mid - 2;
			else if ( _widec > _mid[1] )
				_lower = _mid + 2;
			else {
				switch ( _zone_scanner_cond_spaces[_zone_scanner_cond_offsets[cs] + ((_mid - _keys)>>1)] ) {
	case 0: {
		_widec = (short)(640 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		break;
	}
	case 1: {
		_widec = (short)(1152 + ((*p) - -128));
		if (
 !s->multiline  ) _widec += 256;
		break;
	}
	case 2: {
		_widec = (short)(128 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		break;
	}
	case 3: {
		_widec = (short)(2688 + ((*p) - -128));
		if (
 s->number64 != 0  ) _widec += 256;
		break;
	}
	case 4: {
		_widec = (short)(4224 + ((*p) - -128));
		if (
 s->number64 == 0  ) _widec += 256;
		break;
	}
	case 5: {
		_widec = (short)(1664 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		if (
 !s->multiline  ) _widec += 512;
		break;
	}
	case 6: {
		_widec = (short)(3200 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		if (
 s->number64 != 0  ) _widec += 512;
		break;
	}
	case 7: {
		_widec = (short)(4736 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		if (
 s->number64 == 0  ) _widec += 512;
		break;
	}
	case 8: {
		_widec = (short)(5760 + ((*p) - -128));
		if (
 s->number64 != 0  ) _widec += 256;
		if (
 s->number64 == 0  ) _widec += 512;
		break;
	}
	case 9: {
		_widec = (short)(12928 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		if (
 !s->multiline  ) _widec += 512;
		if (
 s->number64 == 0  ) _widec += 1024;
		break;
	}
	case 10: {
		_widec = (short)(6784 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		if (
 s->number64 != 0  ) _widec += 512;
		if (
 s->number64 == 0  ) _widec += 1024;
		break;
	}
	case 11: {
		_widec = (short)(8832 + ((*p) - -128));
		if (
 s->multiline  ) _widec += 256;
		if (
 !s->multiline  ) _widec += 512;
		if (
 s->number64 != 0  ) _widec += 1024;
		if (
 s->number64 == 0  ) _widec += 2048;
		break;
	}
				}
				break;
			}
		}
	}

	_keys = _zone_scanner_trans_keys + _zone_scanner_key_offsets[cs];
	_trans = _zone_scanner_index_offsets[cs];

	_klen = _zone_scanner_single_lengths[cs];
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( _widec < *_mid )
				_upper = _mid - 1;
			else if ( _widec > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _zone_scanner_range_lengths[cs];
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _mid[0] )
				_upper = _mid - 2;
			else if ( _widec > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}

_match:
	_trans = _zone_scanner_indicies[_trans];
	cs = _zone_scanner_trans_targs[_trans];

	if ( _zone_scanner_trans_actions[_trans] == 0 )
		goto _again;

	_acts = _zone_scanner_actions + _zone_scanner_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 0:
	{
		p--; {cs = stack[--top]; goto _again;}
	}
	break;
	case 1:
	{
		s->line_counter++;
	}
	break;
	case 2:
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {cs = 268;goto _again;}
		}
		s->multiline = true;
	}
	break;
	case 3:
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {cs = 268;goto _again;}
		}
		s->multiline = false;
	}
	break;
	case 4:
	{
		s->buffer_length = 0;
	}
	break;
	case 5:
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	break;
	case 6:
	{
		s->buffer[s->buffer_length++] = 0;

		// Execute the comment callback.
		if (s->process.automatic && s->process.comment != NULL) {
			s->process.comment(s);

			// Stop if required from the callback.
			if (s->state == ZS_STATE_STOP) {
				{p++; goto _out; }
			}
		}
	}
	break;
	case 7:
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	break;
	case 8:
	{
		WARN(ZS_BAD_REST);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 9:
	{
		s->buffer_length = 0;
	}
	break;
	case 10:
	{
		if ((*p) == '\r') {
			ERR(ZS_DOS_NEWLINE);
		}

		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	break;
	case 11:
	{
		// Terminate the error context string.
		s->buffer[s->buffer_length++] = 0;

		// Error counter incrementation.
		s->error.counter++;

		// Initialize the fcall stack.
		top = 0;

		// Reset the multiline context.
		s->multiline = false;

		s->state = ZS_STATE_ERROR;

		// Execute the error callback.
		if (s->process.automatic) {
			if (s->process.error != NULL) {
				s->process.error(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; goto _out; }
				}
			}

			// Stop the scanner if fatal error.
			if (s->error.fatal) {
				{p++; goto _out; }
			}
			{cs = 1127;goto _again;}
		} else {
			// Return if external processing.
			p--; cs = 1127; {p++; goto _out; }
		}
	}
	break;
	case 12:
	{
		s->item_length = 0;
		s->item_length_position = s->dname_tmp_length++;
	}
	break;
	case 13:
	{
		// Check for maximum dname label length.
		if (s->item_length < ZS_MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length++] = (*p);
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 14:
	{
		// Check for maximum dname length overflow after each label.
		// (at least the next label length must follow).
		if (s->dname_tmp_length < ZS_MAX_DNAME_LENGTH) {
			(s->dname)[s->item_length_position] =
				(uint8_t)(s->item_length);
		} else {
			WARN(ZS_DNAME_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 15:
	{
		if (s->item_length < ZS_MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length] = 0;
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 16:
	{
		(s->dname)[s->dname_tmp_length] *= 10;
		(s->dname)[s->dname_tmp_length] += digit_to_num[(uint8_t)(*p)];
	}
	break;
	case 17:
	{
		s->dname_tmp_length++;
	}
	break;
	case 18:
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 19:
	{
		// Enough room for the terminal label is guaranteed (_label_exit).
		(s->dname)[s->dname_tmp_length++] = 0;
	}
	break;
	case 20:
	{
		// Check for (relative + origin) dname length overflow.
		if (s->dname_tmp_length + s->zone_origin_length <= ZS_MAX_DNAME_LENGTH) {
			memcpy(s->dname + s->dname_tmp_length,
			       s->zone_origin,
			       s->zone_origin_length);

			s->dname_tmp_length += s->zone_origin_length;
		} else {
			WARN(ZS_DNAME_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 21:
	{
		// Copy already verified zone origin.
		memcpy(s->dname,
		       s->zone_origin,
		       s->zone_origin_length);

		s->dname_tmp_length = s->zone_origin_length;
	}
	break;
	case 22:
	{
		s->item_length_position = 0;
		s->dname_tmp_length = 0;
	}
	break;
	case 23:
	{
		WARN(ZS_BAD_DNAME_CHAR);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 24:
	{ p--; {stack[top++] = cs; cs = 270;goto _again;} }
	break;
	case 25:
	{
		if (rdata_tail <= rdata_stop) {
			s->item_length_location = rdata_tail++;
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 26:
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 27:
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
	break;
	case 28:
	{
		s->r_owner_length = s->dname_tmp_length;
	}
	break;
	case 29:
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 30:
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 31:
	{
		s->dname = rdata_tail;
	}
	break;
	case 32:
	{
		rdata_tail += s->dname_tmp_length;
	}
	break;
	case 33:
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 34:
	{
		s->number64 = 0;
	}
	break;
	case 35:
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 36:
	{
		s->decimal_counter = 0;
	}
	break;
	case 37:
	{
		s->number64_tmp = s->number64;
	}
	break;
	case 38:
	{
		s->decimal_counter++;
	}
	break;
	case 39:
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 40:
	{
		s->decimals = 2;
	}
	break;
	case 41:
	{
		s->decimals = 3;
	}
	break;
	case 42:
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 43:
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 44:
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 45:
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_type = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 46:
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_data_length = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 47:
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 48:
	{ if (s->number64 <= (UINT32_MAX / 60)) {
	                  s->number64 *= 60;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {cs = 268;goto _again;}
	              }
	            }
	break;
	case 49:
	{ if (s->number64 <= (UINT32_MAX / 3600)) {
	                  s->number64 *= 3600;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {cs = 268;goto _again;}
	              }
	            }
	break;
	case 50:
	{ if (s->number64 <= (UINT32_MAX / 86400)) {
	                  s->number64 *= 86400;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {cs = 268;goto _again;}
	              }
	            }
	break;
	case 51:
	{ if (s->number64 <= (UINT32_MAX / 604800)) {
	                  s->number64 *= 604800;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {cs = 268;goto _again;}
	              }
	            }
	break;
	case 52:
	{
		s->number64_tmp = s->number64;
	}
	break;
	case 53:
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 54:
	{
		s->buffer_length = 0;
	}
	break;
	case 55:
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 56:
	{
		s->buffer[s->buffer_length] = 0;

		if (s->buffer_length == 14) { // Date; 14 = len("YYYYMMDDHHmmSS").
			uint32_t timestamp;
			int ret = date_to_timestamp(s->buffer, &timestamp);

			if (ret == ZS_OK) {
				*((uint32_t *)rdata_tail) = htonl(timestamp);
				rdata_tail += 4;
			} else {
				WARN(ret);
				p--; {cs = 268;goto _again;}
			}
		} else if (s->buffer_length <= 10) { // Timestamp format.
			char *end;

			s->number64 = strtoull((char *)(s->buffer), &end,  10);

			if (end == (char *)(s->buffer) || *end != '\0') {
				WARN(ZS_BAD_TIMESTAMP);
				p--; {cs = 268;goto _again;}
			}

			if (s->number64 <= UINT32_MAX) {
				*((uint32_t *)rdata_tail) = htonl((uint32_t)s->number64);
				rdata_tail += 4;
			} else {
				WARN(ZS_NUMBER32_OVERFLOW);
				p--; {cs = 268;goto _again;}
			}
		} else {
			WARN(ZS_BAD_TIMESTAMP_LENGTH);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 57:
	{
		WARN(ZS_BAD_TIMESTAMP_CHAR);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 58:
	{
		if (rdata_tail <= rdata_stop) {
			// Split long string.
			if (s->long_string &&
			    rdata_tail - s->item_length_location == 1 + MAX_ITEM_LENGTH) {
				// _item_length_exit equivalent.
				*(s->item_length_location) = MAX_ITEM_LENGTH;
				// _item_length_init equivalent.
				s->item_length_location = rdata_tail++;

				if (rdata_tail > rdata_stop) {
					WARN(ZS_TEXT_OVERFLOW);
					p--; {cs = 268;goto _again;}
				}
			}

			*(rdata_tail++) = (*p);
		} else {
			WARN(ZS_TEXT_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 59:
	{
		WARN(ZS_BAD_TEXT_CHAR);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 60:
	{
		WARN(ZS_BAD_TEXT);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 61:
	{
		if (rdata_tail <= rdata_stop) {
			// Split long string.
			if (s->long_string &&
			    rdata_tail - s->item_length_location == 1 + MAX_ITEM_LENGTH) {
				// _item_length_exit equivalent.
				*(s->item_length_location) = MAX_ITEM_LENGTH;
				// _item_length_init equivalent.
				s->item_length_location = rdata_tail++;

				if (rdata_tail > rdata_stop) {
					WARN(ZS_TEXT_OVERFLOW);
					p--; {cs = 268;goto _again;}
				}
			}

			*rdata_tail = 0;
			s->item_length++;
		} else {
			WARN(ZS_TEXT_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 62:
	{
		if ((*rdata_tail < (UINT8_MAX / 10)) ||   // Dominant fast check.
			((*rdata_tail == (UINT8_MAX / 10)) && // Marginal case.
			 ((*p) <= (UINT8_MAX % 10) + '0')
			)
		   ) {
			*rdata_tail *= 10;
			*rdata_tail += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 63:
	{
		rdata_tail++;
	}
	break;
	case 64:
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 65:
	{ p--; {stack[top++] = cs; cs = 279;goto _again;} }
	break;
	case 66:
	{
		s->long_string = true;
	}
	break;
	case 67:
	{
		s->long_string = false;
	}
	break;
	case 68:
	{
		if (s->number64 <= UINT32_MAX) {
			s->default_ttl = (uint32_t)(s->number64);
		} else {
			ERR(ZS_NUMBER32_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 69:
	{
		ERR(ZS_BAD_TTL);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 70:
	{ p--; {stack[top++] = cs; cs = 291;goto _again;} }
	break;
	case 71:
	{
		s->dname = s->zone_origin;
	}
	break;
	case 72:
	{
		s->zone_origin_length = s->dname_tmp_length;
	}
	break;
	case 73:
	{
		ERR(ZS_BAD_ORIGIN);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 74:
	{ p--; {stack[top++] = cs; cs = 300;goto _again;} }
	break;
	case 75:
	{
		rdata_tail = s->r_data;
	}
	break;
	case 76:
	{
		size_t len = rdata_tail - s->r_data;
		if (len >= sizeof(s->include_filename)) {
			ERR(ZS_BAD_INCLUDE_FILENAME);
			p--; {cs = 268;goto _again;}
		}

		// Store zero terminated include filename.
		memcpy(s->include_filename, s->r_data, len);
		s->include_filename[len] = '\0';

		// For detection whether origin is not present.
		s->dname = NULL;
	}
	break;
	case 77:
	{
		ERR(ZS_BAD_INCLUDE_FILENAME);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 78:
	{
		s->dname = s->r_data;
	}
	break;
	case 79:
	{
		s->r_data_length = s->dname_tmp_length;
	}
	break;
	case 80:
	{
		ERR(ZS_BAD_INCLUDE_ORIGIN);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 81:
	{
		// Extend relative file path.
		if (s->include_filename[0] != '/') {
			int ret = snprintf((char *)(s->buffer), sizeof(s->buffer),
			                   "%s/%s", s->path, s->include_filename);
			if (ret <= 0 || ret > sizeof(s->buffer)) {
				ERR(ZS_BAD_INCLUDE_FILENAME);
				p--; {cs = 268;goto _again;}
			}
			memcpy(s->include_filename, s->buffer, ret);
		}

		// Origin conversion from wire to text form in \DDD notation.
		if (s->dname == NULL) { // Use current origin.
			wire_dname_to_str(s->zone_origin,
			                  s->zone_origin_length,
			                  (char *)s->buffer);
		} else { // Use specified origin.
			wire_dname_to_str(s->r_data,
			                  s->r_data_length,
			                  (char *)s->buffer);
		}

		// Let the caller to solve the include.
		if (s->process.automatic) {
			// Create new scanner for included zone file.
			zs_scanner_t *ss = malloc(sizeof(zs_scanner_t));
			if (ss == NULL) {
				ERR(ZS_UNPROCESSED_INCLUDE);
				p--; {cs = 268;goto _again;}
			}

			// Parse included zone file.
			if (zs_init(ss, (char *)s->buffer, s->default_class,
			            s->default_ttl) != 0 ||
			    zs_set_input_file(ss, (char *)(s->include_filename)) != 0 ||
			    zs_set_processing(ss, s->process.record, s->process.error,
			                      s->process.data) != 0 ||
			    zs_parse_all(ss) != 0) {
				// File internal errors are handled by error callback.
				if (ss->error.counter > 0) {
					s->error.counter += ss->error.counter;
					ERR(ZS_UNPROCESSED_INCLUDE);
				// General include file error.
				} else {
					ERR(ss->error.code);
				}
				zs_deinit(ss);
				free(ss);
				p--; {cs = 268;goto _again;}
			}
			zs_deinit(ss);
			free(ss);
		} else {
			s->state = ZS_STATE_INCLUDE;
			p--; cs = 1127; {p++; goto _out; }
		}
	}
	break;
	case 82:
	{ p--; {stack[top++] = cs; cs = 312;goto _again;} }
	break;
	case 83:
	{
		ERR(ZS_OK);
	}
	break;
	case 84:
	{
		NOERR;
	}
	break;
	case 85:
	{
		ERR(ZS_BAD_DIRECTIVE);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 86:
	{
		s->r_class = s->default_class;
	}
	break;
	case 87:
	{
		s->r_ttl = s->default_ttl;
	}
	break;
	case 88:
	{
		s->r_class = KNOT_CLASS_IN;
	}
	break;
	case 89:
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 90:
	{
		s->buffer_length = 0;
	}
	break;
	case 91:
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 92:
	{
		WARN(ZS_BAD_ADDRESS_CHAR);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 93:
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, s->addr) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 94:
	{
		memcpy(rdata_tail, s->addr, ZS_INET4_ADDR_LENGTH);
		rdata_tail += ZS_INET4_ADDR_LENGTH;
	}
	break;
	case 95:
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, s->addr) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 96:
	{
		memcpy(rdata_tail, s->addr, ZS_INET6_ADDR_LENGTH);
		rdata_tail += ZS_INET6_ADDR_LENGTH;
	}
	break;
	case 97:
	{
		memset(&(s->apl), 0, sizeof(s->apl));
	}
	break;
	case 98:
	{
		s->apl.excl_flag = 128; // dec 128  = bin 10000000.
	}
	break;
	case 99:
	{
		s->apl.addr_family = 1;
	}
	break;
	case 100:
	{
		s->apl.addr_family = 2;
	}
	break;
	case 101:
	{
		if ((s->apl.addr_family == 1 && s->number64 <= 32) ||
		    (s->apl.addr_family == 2 && s->number64 <= 128)) {
			s->apl.prefix_length = (uint8_t)(s->number64);
		} else {
			WARN(ZS_BAD_APL);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 102:
	{
		// Copy address to buffer.
		uint8_t len;
		switch (s->apl.addr_family) {
		case 1:
			len = ZS_INET4_ADDR_LENGTH;
			memcpy(s->buffer, s->addr, len);
			break;
		case 2:
			len = ZS_INET6_ADDR_LENGTH;
			memcpy(s->buffer, s->addr, len);
			break;
		default:
			WARN(ZS_BAD_APL);
			p--; {cs = 268;goto _again;}
		}
		// Find prefix without trailing zeroes.
		while (len > 0) {
			if ((s->buffer[len - 1] & 255) != 0) {
				break;
			}
			len--;
		}
		// Check for rdata overflow.
		if (rdata_tail + 4 + len > rdata_stop) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
		// Write address family.
		*((uint16_t *)rdata_tail) = htons(s->apl.addr_family);
		rdata_tail += 2;
		// Write prefix length in bits.
		*(rdata_tail) = s->apl.prefix_length;
		rdata_tail += 1;
		// Write negation flag + prefix length in bytes.
		*(rdata_tail) = len + s->apl.excl_flag;
		rdata_tail += 1;
		// Write address prefix non-null data.
		memcpy(rdata_tail, s->buffer, len);
		rdata_tail += len;
	}
	break;
	case 103:
	{
		WARN(ZS_BAD_APL);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 104:
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 105:
	{
		*rdata_tail += second_hex_to_num[(uint8_t)(*p)];
		rdata_tail++;
	}
	break;
	case 106:
	{
		WARN(ZS_BAD_HEX_CHAR);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 107:
	{
		if ((rdata_tail - s->r_data) != s->r_data_length) {
			WARN(ZS_BAD_RDATA_LENGTH);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 108:
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 109:
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_base64_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 110:
	{
		*(rdata_tail++) += second_left_base64_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = second_right_base64_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 111:
	{
		*(rdata_tail++) += third_left_base64_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = third_right_base64_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 112:
	{
		*(rdata_tail++) += fourth_base64_to_num[(uint8_t)(*p)];
	}
	break;
	case 113:
	{
		WARN(ZS_BAD_BASE64_CHAR);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 114:
	{ p--; {stack[top++] = cs; cs = 329;goto _again;} }
	break;
	case 115:
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 116:
	{
		*(rdata_tail++) += second_left_base32hex_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = second_right_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 117:
	{
		*rdata_tail += third_base32hex_to_num[(uint8_t)(*p)];
	}
	break;
	case 118:
	{
		*(rdata_tail++) += fourth_left_base32hex_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = fourth_right_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 119:
	{
		*(rdata_tail++) += fifth_left_base32hex_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = fifth_right_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 120:
	{
		*rdata_tail += sixth_base32hex_to_num[(uint8_t)(*p)];
	}
	break;
	case 121:
	{
		*(rdata_tail++) += seventh_left_base32hex_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = seventh_right_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 122:
	{
		*(rdata_tail++) += eighth_base32hex_to_num[(uint8_t)(*p)];
	}
	break;
	case 123:
	{
		WARN(ZS_BAD_BASE32HEX_CHAR);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 124:
	{
		*(rdata_tail++) = 0;
	}
	break;
	case 125:
	{
		*(rdata_tail++) = 1;
	}
	break;
	case 126:
	{
		*(rdata_tail++) = 2;
	}
	break;
	case 127:
	{
		*(rdata_tail++) = 3;
	}
	break;
	case 128:
	{
		*(rdata_tail++) = 5;
	}
	break;
	case 129:
	{
		*(rdata_tail++) = 6;
	}
	break;
	case 130:
	{
		*(rdata_tail++) = 7;
	}
	break;
	case 131:
	{
		*(rdata_tail++) = 8;
	}
	break;
	case 132:
	{
		*(rdata_tail++) = 10;
	}
	break;
	case 133:
	{
		*(rdata_tail++) = 12;
	}
	break;
	case 134:
	{
		*(rdata_tail++) = 13;
	}
	break;
	case 135:
	{
		*(rdata_tail++) = 14;
	}
	break;
	case 136:
	{
		*(rdata_tail++) = 15;
	}
	break;
	case 137:
	{
		*(rdata_tail++) = 16;
	}
	break;
	case 138:
	{
		*(rdata_tail++) = 252;
	}
	break;
	case 139:
	{
		*(rdata_tail++) = 253;
	}
	break;
	case 140:
	{
		*(rdata_tail++) = 254;
	}
	break;
	case 141:
	{
		*((uint16_t *)rdata_tail) = htons(1);
		rdata_tail += 2;
	}
	break;
	case 142:
	{
		*((uint16_t *)rdata_tail) = htons(2);
		rdata_tail += 2;
	}
	break;
	case 143:
	{
		*((uint16_t *)rdata_tail) = htons(3);
		rdata_tail += 2;
	}
	break;
	case 144:
	{
		*((uint16_t *)rdata_tail) = htons(4);
		rdata_tail += 2;
	}
	break;
	case 145:
	{
		*((uint16_t *)rdata_tail) = htons(5);
		rdata_tail += 2;
	}
	break;
	case 146:
	{
		*((uint16_t *)rdata_tail) = htons(6);
		rdata_tail += 2;
	}
	break;
	case 147:
	{
		*((uint16_t *)rdata_tail) = htons(7);
		rdata_tail += 2;
	}
	break;
	case 148:
	{
		*((uint16_t *)rdata_tail) = htons(8);
		rdata_tail += 2;
	}
	break;
	case 149:
	{
		*((uint16_t *)rdata_tail) = htons(253);
		rdata_tail += 2;
	}
	break;
	case 150:
	{
		*((uint16_t *)rdata_tail) = htons(254);
		rdata_tail += 2;
	}
	break;
	case 151:
	{
		WARN(ZS_BAD_GATEWAY);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 152:
	{
		WARN(ZS_BAD_GATEWAY_KEY);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 153:
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 154:
	{ type_num(KNOT_RRTYPE_A, &rdata_tail); }
	break;
	case 155:
	{ type_num(KNOT_RRTYPE_NS, &rdata_tail); }
	break;
	case 156:
	{ type_num(KNOT_RRTYPE_CNAME, &rdata_tail); }
	break;
	case 157:
	{ type_num(KNOT_RRTYPE_SOA, &rdata_tail); }
	break;
	case 158:
	{ type_num(KNOT_RRTYPE_PTR, &rdata_tail); }
	break;
	case 159:
	{ type_num(KNOT_RRTYPE_HINFO, &rdata_tail); }
	break;
	case 160:
	{ type_num(KNOT_RRTYPE_MINFO, &rdata_tail); }
	break;
	case 161:
	{ type_num(KNOT_RRTYPE_MX, &rdata_tail); }
	break;
	case 162:
	{ type_num(KNOT_RRTYPE_TXT, &rdata_tail); }
	break;
	case 163:
	{ type_num(KNOT_RRTYPE_RP, &rdata_tail); }
	break;
	case 164:
	{ type_num(KNOT_RRTYPE_AFSDB, &rdata_tail); }
	break;
	case 165:
	{ type_num(KNOT_RRTYPE_RT, &rdata_tail); }
	break;
	case 166:
	{ type_num(KNOT_RRTYPE_KEY, &rdata_tail); }
	break;
	case 167:
	{ type_num(KNOT_RRTYPE_AAAA, &rdata_tail); }
	break;
	case 168:
	{ type_num(KNOT_RRTYPE_LOC, &rdata_tail); }
	break;
	case 169:
	{ type_num(KNOT_RRTYPE_SRV, &rdata_tail); }
	break;
	case 170:
	{ type_num(KNOT_RRTYPE_NAPTR, &rdata_tail); }
	break;
	case 171:
	{ type_num(KNOT_RRTYPE_KX, &rdata_tail); }
	break;
	case 172:
	{ type_num(KNOT_RRTYPE_CERT, &rdata_tail); }
	break;
	case 173:
	{ type_num(KNOT_RRTYPE_DNAME, &rdata_tail); }
	break;
	case 174:
	{ type_num(KNOT_RRTYPE_APL, &rdata_tail); }
	break;
	case 175:
	{ type_num(KNOT_RRTYPE_DS, &rdata_tail); }
	break;
	case 176:
	{ type_num(KNOT_RRTYPE_SSHFP, &rdata_tail); }
	break;
	case 177:
	{ type_num(KNOT_RRTYPE_IPSECKEY, &rdata_tail); }
	break;
	case 178:
	{ type_num(KNOT_RRTYPE_RRSIG, &rdata_tail); }
	break;
	case 179:
	{ type_num(KNOT_RRTYPE_NSEC, &rdata_tail); }
	break;
	case 180:
	{ type_num(KNOT_RRTYPE_DNSKEY, &rdata_tail); }
	break;
	case 181:
	{ type_num(KNOT_RRTYPE_DHCID, &rdata_tail); }
	break;
	case 182:
	{ type_num(KNOT_RRTYPE_NSEC3, &rdata_tail); }
	break;
	case 183:
	{ type_num(KNOT_RRTYPE_NSEC3PARAM, &rdata_tail); }
	break;
	case 184:
	{ type_num(KNOT_RRTYPE_TLSA, &rdata_tail); }
	break;
	case 185:
	{ type_num(KNOT_RRTYPE_CDS, &rdata_tail); }
	break;
	case 186:
	{ type_num(KNOT_RRTYPE_CDNSKEY, &rdata_tail); }
	break;
	case 187:
	{ type_num(KNOT_RRTYPE_SPF, &rdata_tail); }
	break;
	case 188:
	{ type_num(KNOT_RRTYPE_NID, &rdata_tail); }
	break;
	case 189:
	{ type_num(KNOT_RRTYPE_L32, &rdata_tail); }
	break;
	case 190:
	{ type_num(KNOT_RRTYPE_L64, &rdata_tail); }
	break;
	case 191:
	{ type_num(KNOT_RRTYPE_LP, &rdata_tail); }
	break;
	case 192:
	{ type_num(KNOT_RRTYPE_EUI48, &rdata_tail); }
	break;
	case 193:
	{ type_num(KNOT_RRTYPE_EUI64, &rdata_tail); }
	break;
	case 194:
	{ type_num(KNOT_RRTYPE_URI, &rdata_tail); }
	break;
	case 195:
	{ type_num(KNOT_RRTYPE_CAA, &rdata_tail); }
	break;
	case 196:
	{
		if (s->number64 <= UINT16_MAX) {
			window_add_bit(s->number64, s);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 197:
	{ window_add_bit(KNOT_RRTYPE_A, s); }
	break;
	case 198:
	{ window_add_bit(KNOT_RRTYPE_NS, s); }
	break;
	case 199:
	{ window_add_bit(KNOT_RRTYPE_CNAME, s); }
	break;
	case 200:
	{ window_add_bit(KNOT_RRTYPE_SOA, s); }
	break;
	case 201:
	{ window_add_bit(KNOT_RRTYPE_PTR, s); }
	break;
	case 202:
	{ window_add_bit(KNOT_RRTYPE_HINFO, s); }
	break;
	case 203:
	{ window_add_bit(KNOT_RRTYPE_MINFO, s); }
	break;
	case 204:
	{ window_add_bit(KNOT_RRTYPE_MX, s); }
	break;
	case 205:
	{ window_add_bit(KNOT_RRTYPE_TXT, s); }
	break;
	case 206:
	{ window_add_bit(KNOT_RRTYPE_RP, s); }
	break;
	case 207:
	{ window_add_bit(KNOT_RRTYPE_AFSDB, s); }
	break;
	case 208:
	{ window_add_bit(KNOT_RRTYPE_RT, s); }
	break;
	case 209:
	{ window_add_bit(KNOT_RRTYPE_KEY, s); }
	break;
	case 210:
	{ window_add_bit(KNOT_RRTYPE_AAAA, s); }
	break;
	case 211:
	{ window_add_bit(KNOT_RRTYPE_LOC, s); }
	break;
	case 212:
	{ window_add_bit(KNOT_RRTYPE_SRV, s); }
	break;
	case 213:
	{ window_add_bit(KNOT_RRTYPE_NAPTR, s); }
	break;
	case 214:
	{ window_add_bit(KNOT_RRTYPE_KX, s); }
	break;
	case 215:
	{ window_add_bit(KNOT_RRTYPE_CERT, s); }
	break;
	case 216:
	{ window_add_bit(KNOT_RRTYPE_DNAME, s); }
	break;
	case 217:
	{ window_add_bit(KNOT_RRTYPE_APL, s); }
	break;
	case 218:
	{ window_add_bit(KNOT_RRTYPE_DS, s); }
	break;
	case 219:
	{ window_add_bit(KNOT_RRTYPE_SSHFP, s); }
	break;
	case 220:
	{ window_add_bit(KNOT_RRTYPE_IPSECKEY, s); }
	break;
	case 221:
	{ window_add_bit(KNOT_RRTYPE_RRSIG, s); }
	break;
	case 222:
	{ window_add_bit(KNOT_RRTYPE_NSEC, s); }
	break;
	case 223:
	{ window_add_bit(KNOT_RRTYPE_DNSKEY, s); }
	break;
	case 224:
	{ window_add_bit(KNOT_RRTYPE_DHCID, s); }
	break;
	case 225:
	{ window_add_bit(KNOT_RRTYPE_NSEC3, s); }
	break;
	case 226:
	{ window_add_bit(KNOT_RRTYPE_NSEC3PARAM, s); }
	break;
	case 227:
	{ window_add_bit(KNOT_RRTYPE_TLSA, s); }
	break;
	case 228:
	{ window_add_bit(KNOT_RRTYPE_CDS, s); }
	break;
	case 229:
	{ window_add_bit(KNOT_RRTYPE_CDNSKEY, s); }
	break;
	case 230:
	{ window_add_bit(KNOT_RRTYPE_SPF, s); }
	break;
	case 231:
	{ window_add_bit(KNOT_RRTYPE_NID, s); }
	break;
	case 232:
	{ window_add_bit(KNOT_RRTYPE_L32, s); }
	break;
	case 233:
	{ window_add_bit(KNOT_RRTYPE_L64, s); }
	break;
	case 234:
	{ window_add_bit(KNOT_RRTYPE_LP, s); }
	break;
	case 235:
	{ window_add_bit(KNOT_RRTYPE_EUI48, s); }
	break;
	case 236:
	{ window_add_bit(KNOT_RRTYPE_EUI64, s); }
	break;
	case 237:
	{ window_add_bit(KNOT_RRTYPE_URI, s); }
	break;
	case 238:
	{ window_add_bit(KNOT_RRTYPE_CAA, s); }
	break;
	case 239:
	{
		memset(s->windows, 0, sizeof(s->windows));
		s->last_window = -1;
	}
	break;
	case 240:
	{
		for (uint16_t window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {cs = 268;goto _again;}
				}
			}
		}
	}
	break;
	case 241:
	{
		WARN(ZS_BAD_BITMAP);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 242:
	{ p--; {stack[top++] = cs; cs = 336;goto _again;} }
	break;
	case 243:
	{
		if (s->number64 <= 90) {
			s->loc.d1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 244:
	{
		if (s->number64 <= 180) {
			s->loc.d2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 245:
	{
		if (s->number64 <= 59) {
			s->loc.m1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 246:
	{
		if (s->number64 <= 59) {
			s->loc.m2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 247:
	{
		if (s->number64 <= 59999) {
			s->loc.s1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 248:
	{
		if (s->number64 <= 59999) {
			s->loc.s2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 249:
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 250:
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 251:
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 252:
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.vp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 253:
	{
		s->loc.lat_sign = -1;
	}
	break;
	case 254:
	{
		s->loc.long_sign = -1;
	}
	break;
	case 255:
	{
		s->loc.alt_sign = -1;
	}
	break;
	case 256:
	{
		memset(&(s->loc), 0, sizeof(s->loc));
		// Defaults.
		s->loc.siz = 100;
		s->loc.vp  = 1000;
		s->loc.hp  = 1000000;
		s->loc.lat_sign  = 1;
		s->loc.long_sign = 1;
		s->loc.alt_sign  = 1;
	}
	break;
	case 257:
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
	break;
	case 258:
	{
		WARN(ZS_BAD_LOC_DATA);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 259:
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 260:
	{
		s->item_length = 0;
	}
	break;
	case 261:
	{
		s->item_length++;
	}
	break;
	case 262:
	{
		if (s->item_length != 6) {
			WARN(ZS_BAD_EUI_LENGTH);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 263:
	{
		if (s->item_length != 8) {
			WARN(ZS_BAD_EUI_LENGTH);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 264:
	{
		WARN(ZS_BAD_CHAR_DASH);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 265:
	{
		s->item_length = 0;
	}
	break;
	case 266:
	{
		s->item_length++;
	}
	break;
	case 267:
	{
		if (s->item_length != 4) {
			WARN(ZS_BAD_L64_LENGTH);
			p--; {cs = 268;goto _again;}
		}
	}
	break;
	case 268:
	{
		WARN(ZS_BAD_CHAR_COLON);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 269:
	{
		WARN(ZS_BAD_ALGORITHM);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 270:
	{
		WARN(ZS_BAD_CERT_TYPE);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 271:
	{ p--; {stack[top++] = cs; cs = 487;goto _again;} }
	break;
	case 272:
	{ p--; {stack[top++] = cs; cs = 591;goto _again;} }
	break;
	case 273:
	{
		rdata_tail = s->r_data;
	}
	break;
	case 274:
	{
		WARN(ZS_BAD_RDATA);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 275:
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = cs; cs = 632;goto _again;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = cs; cs = 634;goto _again;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = cs; cs = 636;goto _again;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = cs; cs = 668;goto _again;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = cs; cs = 673;goto _again;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = cs; cs = 678;goto _again;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = cs; cs = 683;goto _again;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = cs; cs = 687;goto _again;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = cs; cs = 689;goto _again;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = cs; cs = 744;goto _again;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = cs; cs = 755;goto _again;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = cs; cs = 772;goto _again;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = cs; cs = 783;goto _again;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = cs; cs = 794;goto _again;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = cs; cs = 807;goto _again;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = cs; cs = 817;goto _again;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = cs; cs = 856;goto _again;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = cs; cs = 1010;goto _again;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = cs; cs = 1013;goto _again;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = cs; cs = 1024;goto _again;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = cs; cs = 1026;goto _again;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = cs; cs = 1055;goto _again;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = cs; cs = 1068;goto _again;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = cs; cs = 1086;goto _again;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = cs; cs = 1081;goto _again;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = cs; cs = 1099;goto _again;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = cs; cs = 1105;goto _again;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = cs; cs = 1111;goto _again;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = cs; cs = 1119;goto _again;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{cs = 268;goto _again;}
		}
	}
	break;
	case 276:
	{
		switch (s->r_type) {
		// Next types must not have empty rdata.
		case KNOT_RRTYPE_A:
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
		case KNOT_RRTYPE_SOA:
		case KNOT_RRTYPE_HINFO:
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
		case KNOT_RRTYPE_RP:
		case KNOT_RRTYPE_AAAA:
		case KNOT_RRTYPE_LOC:
		case KNOT_RRTYPE_SRV:
		case KNOT_RRTYPE_NAPTR:
		case KNOT_RRTYPE_CERT:
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_SSHFP:
		case KNOT_RRTYPE_IPSECKEY:
		case KNOT_RRTYPE_RRSIG:
		case KNOT_RRTYPE_NSEC:
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_DHCID:
		case KNOT_RRTYPE_NSEC3:
		case KNOT_RRTYPE_NSEC3PARAM:
		case KNOT_RRTYPE_TLSA:
		case KNOT_RRTYPE_CDS:
		case KNOT_RRTYPE_CDNSKEY:
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L32:
		case KNOT_RRTYPE_L64:
		case KNOT_RRTYPE_LP:
		case KNOT_RRTYPE_EUI48:
		case KNOT_RRTYPE_EUI64:
		case KNOT_RRTYPE_URI:
		case KNOT_RRTYPE_CAA:
			{stack[top++] = cs; cs = 468;goto _again;}
		// Next types can have empty rdata.
		case KNOT_RRTYPE_APL:
		default:
			{stack[top++] = cs; cs = 477;goto _again;}
		}
	}
	break;
	case 277:
	{
		if (pe - p == 1) {
			*wrap = WRAP_DETECTED;
		}
	}
	break;
	case 278:
	{
		if (*wrap == WRAP_NONE) {
			p--;
		}
	}
	break;
	case 279:
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {cs = 268;goto _again;}
	}
	break;
	case 280:
	{ s->r_type = KNOT_RRTYPE_A; }
	break;
	case 281:
	{ s->r_type = KNOT_RRTYPE_NS; }
	break;
	case 282:
	{ s->r_type = KNOT_RRTYPE_CNAME; }
	break;
	case 283:
	{ s->r_type = KNOT_RRTYPE_SOA; }
	break;
	case 284:
	{ s->r_type = KNOT_RRTYPE_PTR; }
	break;
	case 285:
	{ s->r_type = KNOT_RRTYPE_HINFO; }
	break;
	case 286:
	{ s->r_type = KNOT_RRTYPE_MINFO; }
	break;
	case 287:
	{ s->r_type = KNOT_RRTYPE_MX; }
	break;
	case 288:
	{ s->r_type = KNOT_RRTYPE_TXT; }
	break;
	case 289:
	{ s->r_type = KNOT_RRTYPE_RP; }
	break;
	case 290:
	{ s->r_type = KNOT_RRTYPE_AFSDB; }
	break;
	case 291:
	{ s->r_type = KNOT_RRTYPE_RT; }
	break;
	case 292:
	{ s->r_type = KNOT_RRTYPE_KEY; }
	break;
	case 293:
	{ s->r_type = KNOT_RRTYPE_AAAA; }
	break;
	case 294:
	{ s->r_type = KNOT_RRTYPE_LOC; }
	break;
	case 295:
	{ s->r_type = KNOT_RRTYPE_SRV; }
	break;
	case 296:
	{ s->r_type = KNOT_RRTYPE_NAPTR; }
	break;
	case 297:
	{ s->r_type = KNOT_RRTYPE_KX; }
	break;
	case 298:
	{ s->r_type = KNOT_RRTYPE_CERT; }
	break;
	case 299:
	{ s->r_type = KNOT_RRTYPE_DNAME; }
	break;
	case 300:
	{ s->r_type = KNOT_RRTYPE_APL; }
	break;
	case 301:
	{ s->r_type = KNOT_RRTYPE_DS; }
	break;
	case 302:
	{ s->r_type = KNOT_RRTYPE_SSHFP; }
	break;
	case 303:
	{ s->r_type = KNOT_RRTYPE_IPSECKEY; }
	break;
	case 304:
	{ s->r_type = KNOT_RRTYPE_RRSIG; }
	break;
	case 305:
	{ s->r_type = KNOT_RRTYPE_NSEC; }
	break;
	case 306:
	{ s->r_type = KNOT_RRTYPE_DNSKEY; }
	break;
	case 307:
	{ s->r_type = KNOT_RRTYPE_DHCID; }
	break;
	case 308:
	{ s->r_type = KNOT_RRTYPE_NSEC3; }
	break;
	case 309:
	{ s->r_type = KNOT_RRTYPE_NSEC3PARAM; }
	break;
	case 310:
	{ s->r_type = KNOT_RRTYPE_TLSA; }
	break;
	case 311:
	{ s->r_type = KNOT_RRTYPE_CDS; }
	break;
	case 312:
	{ s->r_type = KNOT_RRTYPE_CDNSKEY; }
	break;
	case 313:
	{ s->r_type = KNOT_RRTYPE_SPF; }
	break;
	case 314:
	{ s->r_type = KNOT_RRTYPE_NID; }
	break;
	case 315:
	{ s->r_type = KNOT_RRTYPE_L32; }
	break;
	case 316:
	{ s->r_type = KNOT_RRTYPE_L64; }
	break;
	case 317:
	{ s->r_type = KNOT_RRTYPE_LP; }
	break;
	case 318:
	{ s->r_type = KNOT_RRTYPE_EUI48; }
	break;
	case 319:
	{ s->r_type = KNOT_RRTYPE_EUI64; }
	break;
	case 320:
	{ s->r_type = KNOT_RRTYPE_URI; }
	break;
	case 321:
	{ s->r_type = KNOT_RRTYPE_CAA; }
	break;
	case 322:
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 268;goto _again;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; goto _out; }
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; goto _out; }
		}
	}
	break;
		}
	}

_again:
	if ( cs == 0 )
		goto _out;
	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == eof )
	{
	const short *__acts = _zone_scanner_actions + _zone_scanner_eof_actions[cs];
	unsigned int __nacts = (unsigned int) *__acts++;
	while ( __nacts-- > 0 ) {
		switch ( *__acts++ ) {
	case 8:
	{
		WARN(ZS_BAD_REST);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 18:
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 23:
	{
		WARN(ZS_BAD_DNAME_CHAR);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 30:
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 35:
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 47:
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 57:
	{
		WARN(ZS_BAD_TIMESTAMP_CHAR);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 59:
	{
		WARN(ZS_BAD_TEXT_CHAR);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 60:
	{
		WARN(ZS_BAD_TEXT);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 64:
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 67:
	{
		s->long_string = false;
	}
	break;
	case 69:
	{
		ERR(ZS_BAD_TTL);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 73:
	{
		ERR(ZS_BAD_ORIGIN);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 77:
	{
		ERR(ZS_BAD_INCLUDE_FILENAME);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 80:
	{
		ERR(ZS_BAD_INCLUDE_ORIGIN);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 84:
	{
		NOERR;
	}
	break;
	case 85:
	{
		ERR(ZS_BAD_DIRECTIVE);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 92:
	{
		WARN(ZS_BAD_ADDRESS_CHAR);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 103:
	{
		WARN(ZS_BAD_APL);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 106:
	{
		WARN(ZS_BAD_HEX_CHAR);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 108:
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 113:
	{
		WARN(ZS_BAD_BASE64_CHAR);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 123:
	{
		WARN(ZS_BAD_BASE32HEX_CHAR);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 151:
	{
		WARN(ZS_BAD_GATEWAY);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 152:
	{
		WARN(ZS_BAD_GATEWAY_KEY);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 153:
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 241:
	{
		WARN(ZS_BAD_BITMAP);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 258:
	{
		WARN(ZS_BAD_LOC_DATA);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 259:
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 264:
	{
		WARN(ZS_BAD_CHAR_DASH);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 268:
	{
		WARN(ZS_BAD_CHAR_COLON);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 269:
	{
		WARN(ZS_BAD_ALGORITHM);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 270:
	{
		WARN(ZS_BAD_CERT_TYPE);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 274:
	{
		WARN(ZS_BAD_RDATA);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 279:
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {cs = 268;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
		}
	}
	}

	_out: {}
	}


	// Check if the scanner state machine is in an uncovered state.
	bool extra_error = false;
	if (cs == 0) {
		ERR(ZS_UNCOVERED_STATE);
		extra_error = true;
	// Check for an unclosed multiline record.
	} else if (s->input.eof && s->multiline) {
		ERR(ZS_UNCLOSED_MULTILINE);
		extra_error = true;
	}

	// Treat the extra error.
	if (extra_error) {
		s->error.counter++;
		s->state = ZS_STATE_ERROR;

		// Copy the error context just for the part of the current line.
		s->buffer_length = 0;
		while (p < pe && *p != '\n' && s->buffer_length < 50) {
			s->buffer[s->buffer_length++] = *p++;
		}
		s->buffer[s->buffer_length++] = 0;

		// Execute the error callback.
		if (s->process.automatic && s->process.error != NULL) {
			s->process.error(s);
		}

		return;
	}

	// Storing scanner states.
	s->cs  = cs;
	s->top = top;
	memcpy(s->stack, stack, sizeof(stack));

	// Store the current parser position.
	s->input.current = p;

	// Storing r_data pointer.
	s->r_data_tail = rdata_tail - s->r_data;

	if (*wrap == WRAP_DETECTED) {
		if (set_input_string(s, "\\", 1, true) != 0) {
			return;
		}

		*wrap = WRAP_PROCESS;
		parse(s, wrap);
	} else {
		*wrap = WRAP_NONE;
	}
}

__attribute__((visibility("default")))
int zs_parse_record(
	zs_scanner_t *s)
{
	if (s == NULL) {
		return -1;
	}

	// Check if parsing is possible.
	switch (s->state) {
	case ZS_STATE_NONE:
	case ZS_STATE_DATA:
	case ZS_STATE_INCLUDE:
		break;
	case ZS_STATE_ERROR:
		if (s->error.fatal) {
			return -1;
		}
		break;
	default:
		// Return if stop or end of file.
		return 0;
	}

	// Check for the end of the input.
	if (s->input.current != s->input.end) {
		// Try to parse another item.
		s->state = ZS_STATE_NONE;
		wrap_t wrap = WRAP_NONE;
		parse(s, &wrap);

		// Finish if nothing was parsed.
		if (s->state == ZS_STATE_NONE) {
			// Parse the final block.
			if (set_input_string(s, "\n", 1, true) != 0) {
				return -1;
			}
			parse(s, &wrap);
			if (s->state == ZS_STATE_NONE) {
				s->state = ZS_STATE_EOF;
			}
		}
	} else {
		s->state = ZS_STATE_EOF;
	}

	return 0;
}

__attribute__((visibility("default")))
int zs_parse_all(
	zs_scanner_t *s)
{
	if (s == NULL) {
		return -1;
	}

	s->process.automatic = true;

	// Parse input block.
	wrap_t wrap = WRAP_NONE;
	parse(s, &wrap);

	// Parse trailing newline-char block if it makes sense.
	if (s->state != ZS_STATE_STOP && !s->error.fatal) {
		if (set_input_string(s, "\n", 1, true) != 0) {
			return -1;
		}
		parse(s, &wrap);
	}

	// Check if any errors have occurred.
	if (s->error.counter > 0) {
		return -1;
	}

	return 0;
}
