variables:
  DEBIAN_FRONTEND: noninteractive
  LC_ALL: C
  GIT_STRATEGY: fetch
  DOCKER_DRIVER: overlay2
  GIT_SUBMODULE_STRATEGY: recursive
  DISTROTEST_PRIORITY: 6
  PKGTEST: 0

stages:
  - image
  - build
  - test
  - pkg
  - documentation

.image: &image
  stage: image
  before_script:
    - docker info
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build --no-cache -t "$IMAGE_TAG" "scripts/docker/$IMAGE_NAME"
    - docker push "$IMAGE_TAG"
  tags:
    - dind
  only:
    variables:
      - $SCHEDULE_TYPE == "weekly"

docker:knot-dns:debian:
  <<: *image
  variables:
    IMAGE_NAME: debian:latest
    IMAGE_TAG: $CI_REGISTRY_IMAGE/$IMAGE_NAME
  tags:
    - dind
    - amd64

docker:knot-dns:debian-arm64:
  <<: *image
  variables:
    IMAGE_NAME: debian:latest
    IMAGE_TAG: $CI_REGISTRY_IMAGE/$IMAGE_NAME-arm64
  tags:
    - dind
    - arm64

docker:knot-dns:debian:unstable:
  <<: *image
  variables:
    IMAGE_NAME: debian:unstable
    IMAGE_TAG: $CI_REGISTRY_IMAGE/$IMAGE_NAME
  tags:
    - dind
    - amd64

docker:knot-dns:ubuntu:
  <<: *image
  variables:
    IMAGE_NAME: ubuntu:latest
    IMAGE_TAG: $CI_REGISTRY_IMAGE/$IMAGE_NAME
  tags:
    - dind
    - amd64

docker:knot-dns:rocky:
  <<: *image
  variables:
    IMAGE_NAME: rocky:latest
    IMAGE_TAG: $CI_REGISTRY_IMAGE/$IMAGE_NAME
  tags:
    - dind
    - amd64

docker:knot-dns:fedora:
  <<: *image
  variables:
    IMAGE_NAME: fedora:latest
    IMAGE_TAG: $CI_REGISTRY_IMAGE/$IMAGE_NAME
  tags:
    - dind
    - amd64

.fedora_latest: &fedora_latest
  image: "$CI_REGISTRY/knot/knot-dns/fedora:latest"
  tags:
    - docker
    - linux
    - amd64
  except:
    - schedules

.rocky_latest: &rocky_latest
  image: "$CI_REGISTRY/knot/knot-dns/rocky:latest"
  tags:
    - docker
    - linux
    - amd64
  except:
    - schedules

.debian_stable: &debian_stable
  image: "$CI_REGISTRY/knot/knot-dns/debian:latest"
  tags:
    - docker
    - linux
    - amd64
  except:
    - schedules

.debian_stable_arm64: &debian_stable_arm64
  image: "$CI_REGISTRY/knot/knot-dns/debian:latest-arm64"
  tags:
    - docker
    - linux
    - arm64
  except:
    - schedules

.debian_unstable: &debian_unstable
  image: "$CI_REGISTRY/knot/knot-dns/debian:unstable"
  tags:
    - docker
    - linux
    - amd64
  except:
    - schedules

.ubuntu_latest: &ubuntu_latest
  image: "$CI_REGISTRY/knot/knot-dns/ubuntu:latest"
  tags:
    - docker
    - linux
    - amd64
  except:
    - schedules

.build: &build_job
  stage: build
  script:
    - autoreconf -fi
    - ./configure --disable-fastparser --enable-quic $EXTRA_CONFIGURE || ( cat config.log && exit 1 )
    - make -k all V=1
  artifacts:
    untracked: true
    expire_in: '1 hour'
  except:
    - schedules

.test: &test_job
  stage: test
  before_script:
    - find -exec touch -t $(date +%m%d%H%M) {} \;
  script:
    - make -k check V=1
  except:
    - schedules

.pkg_symbols: &pkg_symbols
  stage: test
  script:
    - ln -s distro/pkg/deb debian
    - sed -i "s/{{ version }}/99/g" distro/pkg/deb/changelog
    - sed -i "s/{{ release }}/1/g" distro/pkg/deb/changelog
    - dpkg-gensymbols -c4 -esrc/.libs/$LIB_NAME.so.$LIB_ABI -P. -p$LIB_NAME$LIB_ABI
  allow_failure: true
  except:
  only:
    - schedules
  dependencies:
    - build:debian:amd64

build:fedora:amd64:
  <<: *fedora_latest
  <<: *build_job

test:fedora:amd64:
  <<: *fedora_latest
  <<: *test_job
  dependencies:
    - build:fedora:amd64

build:rocky:amd64:
  <<: *rocky_latest
  <<: *build_job

test:rocky:amd64:
  <<: *rocky_latest
  <<: *test_job
  dependencies:
    - build:rocky:amd64

build:ubuntu:amd64:
  <<: *ubuntu_latest
  <<: *build_job

test:ubuntu:amd64:
  <<: *ubuntu_latest
  <<: *test_job
  dependencies:
    - build:ubuntu:amd64

build:debian:amd64:
  variables:
    EXTRA_CONFIGURE: --enable-xdp=yes
  <<: *debian_stable
  <<: *build_job
  except:  # run on schedules as well, for debian:symbols tests

test:debian:amd64:
  <<: *debian_stable
  <<: *test_job
  dependencies:
    - build:debian:amd64

build:debian:arm64:
  <<: *debian_stable_arm64
  <<: *build_job

test:debian:arm64:
  <<: *debian_stable_arm64
  <<: *test_job
  dependencies:
    - build:debian:arm64

pkg:debian:symbols:libknot:
  variables:
    LIB_NAME: libknot
    LIB_ABI: 13
  <<: *debian_stable
  <<: *pkg_symbols

pkg:debian:symbols:libdnssec:
  variables:
    LIB_NAME: libdnssec
    LIB_ABI: 9
  <<: *debian_stable
  <<: *pkg_symbols

pkg:debian:symbols:libzscanner:
  variables:
    LIB_NAME: libzscanner
    LIB_ABI: 4
  <<: *debian_stable
  <<: *pkg_symbols

build:debian:unstable:amd64:
  <<: *debian_unstable
  <<: *build_job

test:debian:unstable:amd64:
  <<: *debian_unstable
  <<: *test_job
  dependencies:
    - build:debian:unstable:amd64

build:debian:unstable:amd64:asan:
  variables:
    CC: clang
    CFLAGS: "-fsanitize=address -g -O2 -fno-omit-frame-pointer"
    LDFLAGS: "-fsanitize=address"
    LSAN_OPTIONS: verbosity=1:log_threads=1
  allow_failure: true
  <<: *debian_unstable
  <<: *build_job

test:debian:unstable:amd64:asan:
  variables:
    CC: clang
    CFLAGS: "-fsanitize=address -g -O2"
    LDFLAGS: "-fsanitize=address"
    LSAN_OPTIONS: verbosity=1:log_threads=1
  allow_failure: true
  <<: *debian_unstable
  <<: *test_job
  dependencies:
    - build:debian:unstable:amd64:asan

build:debian:unstable:amd64:ubsan:
  variables:
    CC: clang
    CFLAGS: "-fsanitize=undefined -fno-sanitize=nonnull-attribute -g -O2"
    LDFLAGS: "-fsanitize=undefined"
    UBSAN_OPTIONS: print_stacktrace=1
  allow_failure: true
  <<: *debian_unstable
  <<: *build_job

test:debian:unstable:amd64:ubsan:
  variables:
    CC: clang
    CFLAGS: "-fsanitize=undefined -fno-sanitize=nonnull-attribute -g -O2"
    LDFLAGS: "-fsanitize=undefined"
    UBSAN_OPTIONS: print_stacktrace=1
  allow_failure: true
  <<: *debian_unstable
  <<: *test_job
  dependencies:
    - build:debian:unstable:amd64:ubsan

build:archive:
  <<: *debian_stable
  stage: build
  script:
    - autoreconf -fi
    - mkdir _build
    - cd _build
    - ../configure
    - make distcheck V=1
  only:
    - master
    - tags
    - triggers
    - schedules
  except: []
  artifacts:
    paths:
      - _build/*.tar.xz

build:documentation:
  <<: *debian_stable
  stage: documentation
  only:
    - tags
    - triggers
  dependencies:
    - build:debian:amd64
  script:
    - make -C doc html singlehtml pdf epub V=1
  artifacts:
    paths:
      - doc/_build/html/
      - doc/_build/singlehtml/
      - doc/_build/latex/KnotDNS.pdf
      - doc/_build/epub/KnotDNS.epub
    expire_in: '1 hour'

# packaging tests using apkg

.apkg_image: &apkg_image
  # apkg images use LC_ALL=C.UTF-8
  variables:
    LC_ALL: C.UTF-8

.pkg_test: &pkg_test
  <<: *apkg_image
  stage: pkg
  needs:
    - pkg:make-archive
  only:
    variables:
      - $PKGTEST == "1"
  script:
    - python3 -m pip install apkg
    # make sure the archive from pkg:make-archive is available
    - apkg info cache | grep archive/dev
    - apkg install --build-dep
    - apkg test --test-dep

.pkg_test_deb: &pkg_test_deb
  <<: *pkg_test
  before_script:
    - apt update

pkg:make-archive:
  # archive is created once and reused in other pkg jobs
  <<: *apkg_image
  stage: pkg
  needs:
    - build:debian:amd64
  only:
    variables:
      - $PKGTEST == "1"
  image: $CI_REGISTRY/packaging/apkg/ci/debian-11:apkg
  artifacts:
    paths:
      - pkg/
  before_script:
    - apt update
  script:
    - python3 -m pip install apkg
    - apkg build-dep
    - apkg make-archive

pkg:debian-11:
  <<: *pkg_test_deb
  image: $CI_REGISTRY/packaging/apkg/ci/debian-11:apkg

pkg:debian-10:
  <<: *pkg_test_deb
  image: $CI_REGISTRY/packaging/apkg/ci/debian-10:apkg

pkg:ubuntu-22.04:
  <<: *pkg_test_deb
  image: $CI_REGISTRY/packaging/apkg/ci/ubuntu-22.04:apkg

pkg:ubuntu-20.04:
  <<: *pkg_test_deb
  image: $CI_REGISTRY/packaging/apkg/ci/ubuntu-20.04:apkg

pkg:ubuntu-18.04:
  <<: *pkg_test_deb
  image: $CI_REGISTRY/packaging/apkg/ci/ubuntu-18.04:apkg

pkg:fedora-36:
  <<: *pkg_test
  image: $CI_REGISTRY/packaging/apkg/ci/fedora-36:apkg

pkg:fedora-35:
  <<: *pkg_test
  image: $CI_REGISTRY/packaging/apkg/ci/fedora-35:apkg

pkg:alma-9:
  <<: *pkg_test
  image: $CI_REGISTRY/packaging/apkg/ci/alma-9:apkg

pkg:rocky-8:
  <<: *pkg_test
  image: $CI_REGISTRY/packaging/apkg/ci/rocky-8:apkg

pkg:centos-7:
  <<: *pkg_test
  image: $CI_REGISTRY/packaging/apkg/ci/centos-7:apkg
  allow_failure: true

pkg:suse-15:
  <<: *pkg_test
  image: $CI_REGISTRY/packaging/apkg/ci/suse-15:apkg
